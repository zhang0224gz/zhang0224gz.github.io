<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://zhang0224gz.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhang0224gz.github.io/"/>
  <updated>2021-12-06T08:46:06.099Z</updated>
  <id>https://zhang0224gz.github.io/</id>
  
  <author>
    <name>zhang0224gz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://zhang0224gz.github.io/2021/12/06/%E8%8B%B1%E8%AF%AD/CET4--%E7%BF%BB%E8%AF%91/"/>
    <id>https://zhang0224gz.github.io/2021/12/06/%E8%8B%B1%E8%AF%AD/CET4--%E7%BF%BB%E8%AF%91/</id>
    <published>2021-12-06T08:36:53.397Z</published>
    <updated>2021-12-06T08:46:06.099Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hot pot has a history of over 2000 years in China.Initially,it was only popular in the coldest places,and subsequentlg became widely accepted in many other areas,where distinct regional variations developed.When eating a hot pot,family and friends sit around the table with a steaming hot pot at the center of it.People can put their preferred meal,seafood,vegetables and ingredients into the pot to cook their own food,and chat to their hearts&#x27; content over a good meal.</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>四级--作文</title>
    <link href="https://zhang0224gz.github.io/2021/12/06/%E8%8B%B1%E8%AF%AD/CET4--%E4%BD%9C%E6%96%87/"/>
    <id>https://zhang0224gz.github.io/2021/12/06/%E8%8B%B1%E8%AF%AD/CET4--%E4%BD%9C%E6%96%87/</id>
    <published>2021-12-06T02:20:39.278Z</published>
    <updated>2021-12-06T07:45:57.346Z</updated>
    
    <content type="html"><![CDATA[<p>“use”类</p><p>栗子：the use of translation apps is becoming increasingly popular</p><p>开篇可概述翻译应用程序在生活中的应用越发广泛的趋势</p><p>主体部分应详述其应用情况：多种应用场景 + 积极影响/受欢迎的原因</p><p>结尾部分可总结其带来的益处，适当提及不足之处和未来的应用或发展趋势</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">词汇：</span><br><span class="line">machine translation 机器翻译</span><br><span class="line">convert speech to text将语音转换为文字</span><br><span class="line">voice/speech recognition语音识别</span><br><span class="line">voice translator apps语音翻译应用程序</span><br><span class="line">photo/camera translator apps拍照翻译应用程序</span><br><span class="line">an offline multilingual dictionary可离线使用的多语种词典</span><br><span class="line">translate text into multiplelanguages将文本翻译为多种语言</span><br><span class="line">offer instant speech-to-speech translation提供即使语音翻译</span><br><span class="line"></span><br><span class="line">foreign/overseas/international travel出国游</span><br><span class="line">have a short conversation with locals与当地人进行简短的交流</span><br><span class="line">bridge the information and communication gap架起信息与沟通的桥梁</span><br><span class="line">keep in contact with clients/customers worldwide与世界各地的客户保持联系</span><br><span class="line">conduct trade negotiations with foreign companies与外国公司进行贸易洽谈</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“use”类&lt;/p&gt;
&lt;p&gt;栗子：the use of translation apps is becoming increasingly popular&lt;/p&gt;
&lt;p&gt;开篇可概述翻译应用程序在生活中的应用越发广泛的趋势&lt;/p&gt;
&lt;p&gt;主体部分应详述其应用情况：多种应用场景</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>四级--词汇</title>
    <link href="https://zhang0224gz.github.io/2021/12/06/%E8%8B%B1%E8%AF%AD/CET4--%E8%AF%8D%E6%B1%87/"/>
    <id>https://zhang0224gz.github.io/2021/12/06/%E8%8B%B1%E8%AF%AD/CET4--%E8%AF%8D%E6%B1%87/</id>
    <published>2021-12-06T01:41:11.803Z</published>
    <updated>2021-12-06T08:35:27.127Z</updated>
    
    <content type="html"><![CDATA[<p>era    n.<br>souvenir    n.<br>stall    n.<br>fruit    n.<br>advance    n.<br>phrase book<br>introduce    v.<br>indispens<strong>a</strong>ble    adj.<br>adequate    adj.<br>casual     adj.<br>lingual,linguistic    adj.<br>when it comes to …<br>find the right way to deal with sth<br>make a big effort to do sth<br>be not as good as sb</p><p>accessible    adj.<br>account    v.<br>adaptation    n.<br>appropriately    adv.<br>considerable    adj.<br>effective    adj.<br>ladder    n.<br>miseread    v.<br>nomination    n.<br>overlook    v.<br>promote    v.<br>senior    n.<br>submission    n.<br>suggest    v.<br>thankfullg    adv.<br>separate    v.<br>utter    v.<br>pioneering    adj.<br>pursuit    n.<br>in one’s lifetime<br>play an importannt part/role in …<br>higher education<br>advance and promote gender equality<br>undergraduate    n./adj.<br>postgraduate    n./adj.<br>make up<br>academic staff<br>at senior levels<br>stark    adj.<br>median    adj.</p><p>knit(knitting,knitter)    v.<br>(crocheter)<br>stitch    v.<br>handiwork    n.<br>crafts    n.<br>throughout college    prep.<br>thereafter    adv.<br>hook    v.<br>on one’s way to doing sth<br>restore    v./ renewal    n.<br>council    n.<br>swell the ranks<br>in honer of<br>pioneer    n.<br>repetitive    adj.<br>induce a relaxed state<br>be associated with<br>initial learning curve<br>heart rate<br>tangible    adj.<br>self-esteem/self-respect    n.<br>singular    adj.<br>boost my spirits<br>hundreds of thousands of …<br>routinely    adv.<br>fulfillment    n.<br>a prematurely born baby<br>intensive care unit(ICU)<br>stick with<br>cope with<br>prompte    v.<br>go well    adv.<br>replace A with B<br>conduct    v.<br>heal for    v.<br>autoimmune    adj.<br>mindless    adj.<br>stiff    agj.<br>disorder    n.<br>significant improvements<br>lessen their fears<br>wellness    n.<br>therapeutic    adi.<br>respondent    n.<br>clinically    adv.<br>persistent    adj.<br>redirect their focus/ divert their attention from their pain<br>process<br>at once<br>register pain signals<br>sample    n.<br>be engaged in …<br>diminished    adj.<br>speculate    v.<br>nerve pathways<br>intellectually    adv.<br>sustained    adj.<br>maximize    v.<br>like-minded        adj.<br>for one<br>stay away from tobacco<br>enhance    v.<br>prolong one’s life<br>keenly    adv.<br>relieve stress<br>suffer mild cognitive damage</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">vanishv.</span><br><span class="line">prospectn.</span><br><span class="line">there is almost no hard evidence for ... other than ...</span><br><span class="line">pilotadj.</span><br><span class="line">autopilotn.</span><br><span class="line">the bulk of</span><br><span class="line">a shifting of gears</span><br><span class="line">terrifyingadj.</span><br><span class="line">a rebirthn.</span><br><span class="line">choose purpose over happiness</span><br><span class="line">give priority to</span><br><span class="line">far from gloomy</span><br><span class="line">phasev.</span><br><span class="line">identityn.</span><br><span class="line">built up your resources</span><br><span class="line">preciselyadv.</span><br><span class="line">foundationn.</span><br><span class="line">secureadj.</span><br><span class="line">sowingn.</span><br><span class="line">reapv.</span><br><span class="line">the run</span><br><span class="line">leapv.</span><br><span class="line">venturen.</span><br><span class="line">measuredadj.</span><br><span class="line">hasten.</span><br><span class="line">energeticadj.</span><br><span class="line">presidential candidate</span><br><span class="line">lifespann.</span><br><span class="line">narrative</span><br><span class="line">descentcn.</span><br><span class="line">a turning point</span><br><span class="line">take full advantage of</span><br><span class="line">misrepresent real life</span><br><span class="line">rosyadj.</span><br><span class="line">burdensomeadj.</span><br><span class="line">undergo(undergoes)v.</span><br><span class="line">turn off</span><br><span class="line">doneadj.</span><br><span class="line">science fiction</span><br><span class="line">increasinglyadv.</span><br><span class="line">absorbv.</span><br><span class="line">fragmentedadj.</span><br><span class="line">bizarreadj.</span><br><span class="line">popular notion</span><br><span class="line">retainv.</span><br><span class="line">replayv.</span><br><span class="line">a neural virtual reality</span><br><span class="line">vividadj.</span><br><span class="line">sleep disorders</span><br><span class="line">sleepwalkv.</span><br><span class="line">physical movement</span><br><span class="line">videotape the subjects</span><br><span class="line">drawv.</span><br><span class="line">integrate ... into</span><br><span class="line">10-foldadj.</span><br><span class="line">respondent,candidate,subject,participant</span><br><span class="line">bedtimen.</span><br><span class="line">a nap</span><br><span class="line">a study session</span><br><span class="line">oddn.</span><br><span class="line">intensifiedadj.</span><br><span class="line">systematizev.</span><br><span class="line">substitute ... with</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;era    n.&lt;br&gt;souvenir    n.&lt;br&gt;stall    n.&lt;br&gt;fruit    n.&lt;br&gt;advance    n.&lt;br&gt;phrase book&lt;br&gt;introduce    v.&lt;br&gt;indispens&lt;strong&gt;a&lt;/stron</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://zhang0224gz.github.io/2021/12/05/%E4%B8%93%E4%B8%9A%E8%AF%BE/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://zhang0224gz.github.io/2021/12/05/%E4%B8%93%E4%B8%9A%E8%AF%BE/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%91%E4%B8%8E%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2021-12-05T14:05:20.243Z</published>
    <updated>2021-12-05T14:05:45.935Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    BiNode *lchild,*rchild;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BiTree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">BiTree</span>()    <span class="comment">//构造</span></span><br><span class="line">    &#123;</span><br><span class="line">        root=<span class="built_in">Creat</span>();</span><br><span class="line">    &#125;;</span><br><span class="line">    ~<span class="built_in">BiTree</span>()   <span class="comment">//析构</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Release</span>(root);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">()</span> <span class="comment">//前序遍历</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">PreOrder</span>(root);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">()</span>  <span class="comment">//中序遍历</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">InOrder</span>(root);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">()</span>    <span class="comment">//后序遍历</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">PostOrder</span>(root);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LevelOrder</span><span class="params">()</span>   <span class="comment">//层序遍历</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">LevelOrder</span>(root);</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="keyword">private</span>:<span class="comment">//调用</span></span><br><span class="line">    <span class="function">BiNode* <span class="title">Creat</span><span class="params">()</span></span>;<span class="comment">//void Creat(BiNode* &amp;root);</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Release</span><span class="params">(BiNode *bt)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PreOrder</span><span class="params">(BiNode *bt)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InOrder</span><span class="params">(BiNode *bt)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">PostOrder</span><span class="params">(BiNode *bt)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LevelOrder</span><span class="params">(BiNode *bt)</span></span>;</span><br><span class="line">    BiNode *root;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">BiNode* <span class="title">BiTree::Creat</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BiNode *bt;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    cin&gt;&gt;ch;</span><br><span class="line">    <span class="keyword">if</span>(ch==<span class="string">&#x27;#&#x27;</span>)bt=<span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        bt = <span class="keyword">new</span> BiNode;</span><br><span class="line">        bt-&gt;data = ch;</span><br><span class="line">        bt-&gt;lchild = <span class="built_in">Creat</span>();</span><br><span class="line">        bt-&gt;rchild = <span class="built_in">Creat</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::Release</span><span class="params">(BiNode *bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(bt=<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">Release</span>(bt-&gt;lchild);</span><br><span class="line">        <span class="built_in">Release</span>(bt-&gt;rchild);</span><br><span class="line">        <span class="keyword">delete</span> bt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::PreOrder</span><span class="params">(BiNode *bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(bt==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">    cout&lt;&lt;bt-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="built_in">PreOrder</span>(bt-&gt;lchild);</span><br><span class="line">    <span class="built_in">PreOrder</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::InOrder</span><span class="params">(BiNode *bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(bt==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">InOrder</span>(bt-&gt;lchild);</span><br><span class="line">    cout&lt;&lt;bt-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="built_in">InOrder</span>(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::PostOrder</span><span class="params">(BiNode*bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(bt==<span class="literal">NULL</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">PostOrder</span>(bt-&gt;lchild);</span><br><span class="line">    <span class="built_in">PostOrder</span>(bt-&gt;rchild);</span><br><span class="line">    cout&lt;&lt;bt-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BiTree::LevelOrder</span><span class="params">(BiNode *bt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BiNode *que[<span class="number">101</span>],*t;</span><br><span class="line">    <span class="keyword">int</span> first=<span class="number">0</span>,last=<span class="number">0</span>;</span><br><span class="line">    que[last++]=bt;</span><br><span class="line">    <span class="keyword">while</span>(last!=first)</span><br><span class="line">    &#123;</span><br><span class="line">        t = que[first++];</span><br><span class="line">        cout&lt;&lt;t-&gt;data&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(t-&gt;lchild)que[last++]=t-&gt;lchild;</span><br><span class="line">        <span class="keyword">if</span>(t-&gt;rchild)que[last++]=t-&gt;rchild;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BiTree bt;</span><br><span class="line">    bt.<span class="built_in">PostOrder</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>PTA 数据结构</title>
    <link href="https://zhang0224gz.github.io/2021/12/04/%E4%B8%93%E4%B8%9A%E8%AF%BE/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/PTA%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>https://zhang0224gz.github.io/2021/12/04/%E4%B8%93%E4%B8%9A%E8%AF%BE/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/PTA%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2021-12-04T15:24:25.366Z</published>
    <updated>2021-12-05T11:52:21.431Z</updated>
    
    <content type="html"><![CDATA[<h3 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h3><h4 id="判断题"><a href="#判断题" class="headerlink" title="判断题"></a>判断题</h4><p>1-1</p><p>数据元素是数据的最小单位。F(数据项)</p><p>1-2</p><p>数据的逻辑结构是指数据的各数据项之间的逻辑关系。F（数据元素之间）</p><p>1-3</p><p>数据结构概念包括数据之间的逻辑结构、数据在计算机中的存储方式和数据的运算三个方面。T</p><p>1-4</p><p>数据结构的抽象操作的定义与具体实现有关。F</p><p>1-5</p><p>算法和程序没有区别，在数据结构中二者是通用的。F</p><p>1-6</p><p>数据结构包括数据对象集以及它们的逻辑结构和物理结构，还包括与数据对象相关联的操作集，以及实现这些操作的高效的算法。T</p><h4 id="选择题（错题：2-9-2-13）"><a href="#选择题（错题：2-9-2-13）" class="headerlink" title="选择题（错题：2-9,2-13）"></a>选择题（错题：2-9,2-13）</h4><p>2-1</p><p>在 Data_Structure = (D，R)中，D 是（ ）的有限集合。</p><p>A.数据元素</p><p>2-2</p><p>以下关于数据结构的说法中错误的是（ ）。</p><p>A.数据结构相同，对应的存储结构也相同</p><p>2-4</p><p>算法分析的目的是( )</p><p>C.分析算法的效率以求改进</p><p>2-5</p><p>算法分析的两个主要方面是( )</p><p>A.空间复杂度和时间复杂度</p><p>2-6</p><p>采用链结构存储线性表时，其地址（ ）。</p><p>B.连续不连续都可以</p><p>2-7</p><p>一个正确的算法应该具有 5 个特性，除输入、输出特性外，另外 3 个特性是（ ）。</p><p>A.确定性、可行性、有穷性</p><p>2-8</p><p>算法的时间复杂度取决于（ ）</p><p>C.问题的规模和待处理数据的初态</p><p>2-9</p><p>以下数据结构中，哪一个是线性结构（ ）</p><p>D.串</p><p>2-10</p><p>以下数据结构中，（ ）是非线性数据结构</p><p>B.字符串</p><p>2-11</p><p>算法的时间复杂度与（ ）有关。</p><p>A.问题规模</p><p>2-12</p><p>以下程序段的空间复杂度为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int a = 1, b = 1, i;</span><br><span class="line">for (i=0; i&lt;=10; i++) &#123;</span><br><span class="line">  b += a;</span><br><span class="line">  a = b - a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>B.O(1)</p><p>2-13</p><p>下列程序段的时间复杂度是（ ）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">count=0;</span><br><span class="line">for(k=1;k&lt;=n;k*=2)</span><br><span class="line"> for(j=1;j&lt;=n;j++)</span><br><span class="line">   count++;</span><br></pre></td></tr></table></figure><p>C.O*(<em>n<strong>l</strong>og</em>2*n)</p><p>2-14</p><p>下面说法中，错误的是（ ）。</p><p>ⅰ.算法原地工作的含义是指不需要任何额外的辅助空间</p><p>ⅱ.在相同规模n下，复杂度为<em>O</em>(<em>n</em>)的算法在时间上总是优于复杂度为<em>O</em>(2<em>n</em>)的算法</p><p>ⅲ.所谓时间复杂度，是指最坏情况下估算算法执行时间的一个上界</p><p>ⅳ.同一个算法，实现语言的级别越高，执行效率越低</p><p>C.ⅰ,ⅳ</p><p>2-15</p><p>算法的计算量的大小称为算法的____。</p><p>B.复杂度</p><p>2-16</p><p>在下面的程序段中，对x的赋值语句的频度为（ ）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (i=1;i&lt;=n;i++)</span><br><span class="line">    for (j=1;j&lt;=n;j++)</span><br><span class="line">      x=x+1;</span><br></pre></td></tr></table></figure><p>C.O(<em>n</em>2)</p><p>2-17</p><p>下面程序段的时间复杂度是 ( )</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i ＝ 0；</span><br><span class="line">while（i&lt;=n）</span><br><span class="line">     i = i * 3；</span><br></pre></td></tr></table></figure><p>D.O(<em>l<strong>o</strong>g</em>3<em>n</em>)</p><h4 id="填空题（错题：4-1-4-4-4-6，4-7，4-10）"><a href="#填空题（错题：4-1-4-4-4-6，4-7，4-10）" class="headerlink" title="填空题（错题：4-1, 4-4, 4-6，4-7，4-10）"></a>填空题（错题：4-1, 4-4, 4-6，4-7，4-10）</h4><p>4-1</p><p>算法效率的比较</p><p>假设为解决某问题而设计的若干算法的时间复杂度分别为：</p><p>A) <em>O</em>(<em>n</em>)<br>B) <em>O</em>(<em>n</em>2)<br>C) <em>O</em>(log2​<em>n</em>)<br>D) <em>O</em>(<em>n</em>log2​<em>n</em>)<br>E) <em>O</em>(2<em>n</em>)<br>F) <em>O</em>(<em>n</em>​)<br>G) <em>O</em>(<em>n</em>!)<br>H) <em>O</em>(1)<br>I) <em>O</em>(<em>n**n</em>​)<br>J) <em>O</em>(<em>n**n</em>)</p><p>这些算法按效率由高到低的顺序是 HCFADIBEGJ</p><p>4-2</p><p>基本术语</p><p><strong>数据</strong> 是客观事物的符号表示，是所有能输入到计算机中并被计算机程序处理的符号的总称。</p><p>4-3</p><p>数据结构的数学定义</p><p>数据结构的数学定义为一个二元组：</p><p><em>D**S</em>=(<em>D</em>,<em>R</em>)</p><p>其中：<em>D</em> 是数据<strong>元素</strong>的有限集，<em>R</em> 是 <em>D</em> 上的<strong>关系</strong> 的有限集。</p><p>4-4</p><p>存储结构存储结构包括   的表示和    的表示。</p><p>4-5</p><p>基本术语</p><p><strong>抽象数据类型</strong> 一般指由用户定义的、表示应用问题的数学模型，以及定义在该模型上的一组操作。</p><p>4-6</p><p>在数据结构中，数据的逻辑结构分为  和    。</p><p>4-7</p><p>数据结构由数据的  、 和  三部分组成。</p><p>4-8</p><p>算法的特性</p><p>一个算法必须满足以下五个重要特性：</p><p>(1) <strong>有穷性</strong> 一个算法必须总是在执行有穷步后结束，且每一步都可以有穷有时间内完成。</p><p>(2) <strong>确定性</strong> 一个算法中每一条指令必须有确切的含义。</p><p>(3) <strong>可行性</strong> 算法中的所有操作都可以通过已经实现的基本操作运算执行有限次来实现。</p><p>(4) <strong>输入</strong>一个算法有零个或多个输入。</p><p>(5) <strong>输出</strong>一个算法有一个或多个输出，它们是算法进行信息加工后得到的结果。</p><p>4-9</p><p>基本术语</p><p> <strong>数据元素</strong>是数据的基本单位，<strong>数据项</strong>是数据的不可分割最小单位。其中：前者在计算机中通常作为一个整体进行考虑和处理，它可以由一个或多个后者组成。</p><p>4-10</p><p>数据的实例</p><p>观察下面的表格：</p><table><thead><tr><th><strong>学号</strong></th><th><strong>姓名</strong></th><th><strong>性别</strong></th><th><strong>语文</strong></th><th><strong>数学</strong></th><th><strong>物理</strong></th><th><strong>化学</strong></th><th><strong>英语</strong></th><th><strong>总分</strong></th></tr></thead><tbody><tr><td>15160101</td><td>王克强</td><td>男</td><td>87</td><td>95</td><td>93</td><td>76</td><td>84</td><td>435</td></tr><tr><td>15160102</td><td>刘铭志</td><td>男</td><td>77</td><td>82</td><td>80</td><td>97</td><td>95</td><td>431</td></tr><tr><td>15160103</td><td>孙勇</td><td>男</td><td>78</td><td>85</td><td>87</td><td>86</td><td>65</td><td>401</td></tr><tr><td>15160104</td><td>李瀚东</td><td>男</td><td>93</td><td>82</td><td>72</td><td>75</td><td>95</td><td>417</td></tr><tr><td>15160105</td><td>赵敏</td><td>女</td><td>95</td><td>90</td><td>88</td><td>82</td><td>96</td><td>451</td></tr><tr><td>15160106</td><td>张毅</td><td>男</td><td>78</td><td>76</td><td>65</td><td>81</td><td>80</td><td>380</td></tr><tr><td>15160107</td><td>柳青</td><td>女</td><td>82</td><td>91</td><td>82</td><td>84</td><td>85</td><td>424</td></tr><tr><td>15160108</td><td>蔡文婷</td><td>女</td><td>85</td><td>78</td><td>80</td><td>86</td><td>95</td><td>424</td></tr></tbody></table><p>整张表格称为一个 <strong>数据对象</strong>，其中每一行称为一个 <strong>数据元素</strong>，任意一行中的每一个栏目称为一个<strong>数据项</strong>。</p><p>4-11</p><p>沃斯的名言</p><p>瑞士科学家尼古拉斯·沃斯(Niklaus Wirth)有一句在计算机领域里人尽皆知的名言：</p><p><strong>算法 + 数据结构 = 程序</strong></p><h4 id="编程题"><a href="#编程题" class="headerlink" title="编程题"></a>编程题</h4><p><strong>7-1 求最小值和次小值 (25 分)</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,x;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    cin&gt;&gt;x;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">int</span> mini = x;</span><br><span class="line">    <span class="keyword">int</span> mini2 = x;</span><br><span class="line">    <span class="keyword">int</span> a[n]=&#123;x&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">if</span>(mini&gt;a[i])mini=a[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==mini)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(mini2==mini)mini2=a[i];</span><br><span class="line">        <span class="keyword">if</span>(mini2&gt;a[i])mini2=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(mini==mini2)</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;There is no second smallest element&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout&lt;&lt;mini&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;mini2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Invalid Input&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>7-2 求素数个数 (30 分)</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,num=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">int</span> *a=<span class="keyword">new</span> <span class="keyword">int</span>[n+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">            a[i]=<span class="number">1</span>;</span><br><span class="line">        a[<span class="number">0</span>]=a[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>*i;j&lt;=n;j+=i)</span><br><span class="line">                    a[j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i])num++;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;num&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">using namespace std;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int main()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int n,num=1,flag=1;</span></span><br><span class="line"><span class="comment">    cin&gt;&gt;n;</span></span><br><span class="line"><span class="comment">    if(n==1)cout&lt;&lt;&quot;0&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    else if(n==2)cout&lt;&lt;&quot;1&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    else</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        for(int i=3;i&lt;=n;i+=2)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            for(int j=3;j*j&lt;=i;j+=2)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                if(i%j==0)</span></span><br><span class="line"><span class="comment">                &#123;</span></span><br><span class="line"><span class="comment">                    flag=0;</span></span><br><span class="line"><span class="comment">                    break;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            if(flag)</span></span><br><span class="line"><span class="comment">                num++;</span></span><br><span class="line"><span class="comment">            flag=1;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;num&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">using namespace std;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">int main()</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int n,num=0,flag=1;</span></span><br><span class="line"><span class="comment">    cin&gt;&gt;n;</span></span><br><span class="line"><span class="comment">    for(int i=2;i&lt;=n;i++)</span></span><br><span class="line"><span class="comment">    &#123;</span></span><br><span class="line"><span class="comment">        for(int j=2;j*j&lt;=i;j++)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            if(i%j==0)</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                flag=0;</span></span><br><span class="line"><span class="comment">                break;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        if(flag)</span></span><br><span class="line"><span class="comment">        &#123;</span></span><br><span class="line"><span class="comment">            num++;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        flag=1;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    cout&lt;&lt;num&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    return 0;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="第三章-栈和列表"><a href="#第三章-栈和列表" class="headerlink" title="第三章 栈和列表"></a>第三章 栈和列表</h3><h4 id="判断题（错题：1-10）"><a href="#判断题（错题：1-10）" class="headerlink" title="判断题（错题：1-10）"></a>判断题（错题：1-10）</h4><p>1-1 </p><p>若一个栈的输入序列为1，2，3，…，<em>N</em>，输出序列的第一个元素是<em>i</em>，则第<em>j</em>个输出元素是<em>j</em>−<em>i</em>−1。F</p><p>1-2 </p><p>所谓“循环队列”是指用单向循环链表或者循环数组表示的队列。F</p><p>1-3 </p><p>在对不带头结点的链队列作出队操作时，不会改变头指针的值。F</p><p>1-4 </p><p>不论是入队列操作还是入栈操作,在顺序存储结构上都需要考虑”溢出”情况。T</p><p>1-5 </p><p>队列和栈都是运算受限的线性表，只允许在表的两端进行运算。F</p><p>1-6</p><p>栈和队列的存储方式，既可以是顺序方式，也可以是链式方式。T</p><p>1-7</p><p>循环队列也存在着空间溢出问题。T</p><p>1-8</p><p>循环队列执行出队操作时会引起大量元素的移动。F</p><p>1-9</p><p>栈是插入和删除只能在一端进行的线性表；队列是插入在一端进行，删除在另一端进行的线性表。T</p><p>1-10</p><p>在n个元素连续进栈以后，它们的出栈顺序和进栈顺序一定正好相反。<strong>T</strong></p><p>1-11</p><p>环形队列中有多少个元素可以根据队首指针和队尾指针的值来计算。T</p><p>1-12</p><p>栈和队列的插入和删除操作特殊，所以，栈和队列是非线性结构。F</p><p>1-13</p><p>序列{1,2,3,4,5}依次入栈，则不可能得到{3,4,1,2,5}的出栈序列。 T</p><p>1-14</p><p>队列中允许插入的一端叫队头，允许删除的一端叫队尾。F</p><h4 id="单选题（错题：2-2、2-18）"><a href="#单选题（错题：2-2、2-18）" class="headerlink" title="单选题（错题：2-2、2-18）"></a>单选题（错题：2-2、2-18）</h4><p>2-1</p><p>若用大小为6的数组来实现循环队列，且当前<code>front</code>和<code>rear</code>的值分别为0和4。当从队列中删除两个元素，再加入两个元素后，<code>front</code>和<code>rear</code>的值分别为多少？</p><p>A.2和0</p><p>2-2</p><p>如果循环队列用大小为<code>m</code>的数组表示，且用队头指针<code>front</code>和队列元素个数<code>size</code>代替一般循环队列中的<code>front</code>和<code>rear</code>指针来表示队列的范围，那么这样的循环队列可以容纳的元素个数最多为：</p><p><strong>不知道</strong></p><p>2-3</p><p>以下数据结构中，（ ）是非线性数据结构。</p><p>A.树</p><p>2-4</p><p>设栈S和队列Q的初始状态均为空，元素{1, 2, 3, 4, 5, 6, 7}依次进入栈S。若每个元素出栈后立即进入队列Q，且7个元素出队的顺序是{2, 5, 6, 4, 7, 3, 1}，则栈S的容量至少是：</p><p>D.4</p><p>2-5</p><p>线性表、堆栈、队列的主要区别是什么？</p><p>B.堆栈和队列都是插入、删除受到约束的线性表</p><p>2-6</p><p>栈和队列的共同点( )。</p><p>C.只允许在端点处插入和删除元素</p><p>2-7</p><p>下列关于线性表,栈和队列叙述,错误的是( )。</p><p>A.线性表是给定的n(n必须大于零)个元素组成的序列</p><p>2-8</p><p>设用一个数组A[1……N]来存储一个栈，令A[N]为栈底，用整型变量T指示当前栈顶位置，A[T]为栈顶元素。当从栈中弹出一个元素时，变量T的变化为（ ）。</p><p>A.T=T+1</p><p>2-9</p><p>链式栈与顺序栈相比，一个比较明显的优点是（ ）。</p><p>B.通常不会出现栈满的情况</p><p>2-10</p><p>(neuDS)在循环顺序队列中，假设以少用一个存储单元的方法来区分队列判满和判空的条件，front和rear分别为队首和队尾指针，它们分别指向队首元素和队尾元素的下一个存储单元，队列的最大存储容量为maxSize，则队列的长度是（ ）。</p><p>C.(rear-front+maxSize)%maxSize</p><p>2-11</p><p>(nueDS_C++)设栈S和队列Q的初始状态为空，元素e1、e2、e3、e4、e5、e6依次通过栈S，一个元素出栈后即进入队列Q，若6个元素出队的顺序是e2、e4、e3、e6、e5、e1，则栈S的容量至少应该是（　　 ）。<strong>提示：对于栈，可以全进再依次出；也可以进一个出一个；也可以进一部分，出一个，再进一部分；但是出栈之后，不能再入栈</strong>。</p><p>A.3</p><p>2-12</p><p>关于栈和队列的下列说法正确的是（）</p><p>B.栈是后进先出的结构，出栈时除了栈顶元素，其余元素无需移动；</p><p>2-13</p><p>一个栈的入栈序列是a,b,c,d,e，则栈的出栈序列不可能的是（ ）。</p><p>C.dceab</p><p>2-14</p><p>在一个链表表示的队列中， f和r分别指向队列的头和尾。下列哪个操作能正确地将s结点插入到队列中：</p><p>B.r-&gt;next=s; r=s;</p><p>2-15</p><p>栈和队列具有相同的。</p><p>B.逻辑结构</p><p>2-16</p><p>假定利用数组a[n]顺序存储一个栈，用top表示栈顶指针，用top==-1表示栈空，并已知栈未满，当元素x进栈时所执行的操作为（　）。</p><p>C.a[++top]=x</p><p>2-17</p><p>队列的“先进先出”特性是指（　）。</p><p>Ⅰ.最后插入队列中的元素总是最后被删除<br>Ⅱ.当同时进行插入、删除操作时，总是插入操作优先<br>Ⅲ.每当有删除操作时，总要先做一次插入操作<br>Ⅳ.每次从队列中删除的总是最早插入的元素</p><p>B.Ⅰ、Ⅳ</p><p>2-18</p><p>已知循环队列存储在一维数组A[0…n-1]中，且队列非空时front和rear分别指向队头元素和队尾元素。若初始时队列为空，且要求第一个进入队列的元素存储在A[0]处，则初始时front和rear的值分别是（　）。</p><p><strong>B.0,n-1（原因：……）</strong></p><p>2-19</p><p>执行函数时，其局部变量一般采用（　）进行存储。</p><p>C.栈结构</p><p>2-20</p><p>对空栈 <em>S</em> 进行 Push 和 Pop 操作，入栈序列为 a, b, c, d, e，经过 Push, Push, Pop, Push, Pop, Push, Push, Pop 操作后，得到的出栈序列是：</p><p>D.b, c, e</p><p>2-21</p><p>用S表示入栈操作，X表示出栈操作，若元素入栈的顺序为1234，为了得到1342出栈顺序，相应的S和X的操作串为( )。</p><p>D.SXSSXSXX</p><h4 id="填空题（错题：4-3）"><a href="#填空题（错题：4-3）" class="headerlink" title="填空题（错题：4-3）"></a>填空题（错题：4-3）</h4><p>4-1</p><p>栈的运算遵循 后进先出 的原则。</p><p>4-2</p><p>以下运算实现在链队上的入队列，请在空白处用适当句子予以填充。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnQueue</span><span class="params">(QueptrTp *lq,DataType x)</span></span>&#123;</span><br><span class="line">       LqueueTp *p;</span><br><span class="line">       p=(LqueueTp *)<span class="built_in">malloc</span>(<span class="built_in"><span class="keyword">sizeof</span></span>(LqueueTp));</span><br><span class="line">       p-&gt;data=x;</span><br><span class="line">       p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">       (lq-&gt;rear)-&gt;next=p;</span><br><span class="line">       lq-&gt;rear=p;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>4-3</p><p>以下运算实现在链栈上的初始化，请在空白处用请适当句子予以填充。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line">  DataType data;</span><br><span class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;StackNode,*LStackTp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitStack</span><span class="params">(LStackTp &amp;ls)</span></span>&#123; 不知……;&#125;。</span><br></pre></td></tr></table></figure><h4 id="函数题"><a href="#函数题" class="headerlink" title="函数题"></a>函数题</h4><p><strong>6-3 jmu-ds-舞伴问题 (20 分)</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QueueLen</span><span class="params">(SqQueue Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (Q-&gt;rear-Q-&gt;front+MAXQSIZE)%MAXQSIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">EnQueue</span><span class="params">(SqQueue &amp;Q, Person e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Q-&gt;rear = (Q-&gt;rear+<span class="number">1</span>)%MAXQSIZE;</span><br><span class="line">    Q-&gt;data[Q-&gt;rear] = e;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QueueEmpty</span><span class="params">(SqQueue &amp;Q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(Q-&gt;rear==Q-&gt;front)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DeQueue</span><span class="params">(SqQueue &amp;Q, Person &amp;e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Q-&gt;front = (Q-&gt;front+<span class="number">1</span>)%MAXQSIZE;</span><br><span class="line">    e = Q-&gt;data[Q-&gt;front];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DancePartner</span><span class="params">(Person dancer[], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(dancer[i].sex==<span class="string">&#x27;M&#x27;</span>)</span><br><span class="line">            <span class="built_in">EnQueue</span>(Mdancers,dancer[i]);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">EnQueue</span>(Fdancers,dancer[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">QueueEmpty</span>(Mdancers)&amp;&amp;!<span class="built_in">QueueEmpty</span>(Fdancers))</span><br><span class="line">    &#123;</span><br><span class="line">        Person x,y;</span><br><span class="line">        <span class="built_in">DeQueue</span>(Mdancers,x);</span><br><span class="line">        <span class="built_in">DeQueue</span>(Fdancers,y);</span><br><span class="line">        cout&lt;&lt;y.name&lt;&lt;<span class="string">&quot;  &quot;</span>&lt;&lt;x.name&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>6-4 十进制转二进制（顺序栈设计和应用） (10 分)</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(top==<span class="number">-1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 元素x入栈 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//if(x==MaxSize)cout&lt;&lt;&quot;上溢&quot;&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">//else </span></span><br><span class="line">     mystack[++top]=x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取栈顶元素 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getTop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mystack[top];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 删除栈顶元素 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    top--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编程题-1"><a href="#编程题-1" class="headerlink" title="编程题"></a>编程题</h4><p><strong>7-1 银行业务队列简单模拟 (25 分)</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">1000</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> flag1=<span class="number">0</span>,flag2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> top1=<span class="number">0</span>,top2=<span class="number">0</span>,top=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> a1[n+<span class="number">1</span>],a2[n+<span class="number">1</span>],a[n+<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;arr[i];</span><br><span class="line">        <span class="keyword">if</span>(arr[i]%<span class="number">2</span>!=<span class="number">0</span>)a1[top1++]=arr[i];</span><br><span class="line">        <span class="keyword">else</span> a2[top2++]=arr[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> t1=<span class="number">0</span>,t2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i]%<span class="number">2</span>==<span class="number">0</span>)flag2++;</span><br><span class="line">        <span class="keyword">else</span> flag1++;</span><br><span class="line">        <span class="keyword">if</span>(flag2%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;flag1%<span class="number">4</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[top++]=a1[t1++];</span><br><span class="line">            a[top++]=a1[t1++];</span><br><span class="line">            a[top++]=a2[t2++];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(t1!=top1&amp;&amp;(flag1%<span class="number">2</span>==<span class="number">0</span>||t2==top2))</span><br><span class="line">        &#123;</span><br><span class="line">            a[top++]=a1[t1++];</span><br><span class="line">            a[top++]=a1[t1++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t2!=top2&amp;&amp;(flag2%<span class="number">2</span>==<span class="number">0</span>||t1==top1||flag1%<span class="number">2</span>==<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            a[top++]=a2[t2++];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(top==n)<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout&lt;&lt;a[n<span class="number">-1</span>]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>7-2 堆栈操作合法性 (20 分)</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N,M;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="keyword">int</span> n,x=<span class="number">0</span>;</span><br><span class="line">    cin&gt;&gt;N&gt;&gt;M;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin&gt;&gt;str;</span><br><span class="line">        n = str.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(str[j]==<span class="string">&#x27;S&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x++;</span><br><span class="line">                <span class="keyword">if</span>(x&gt;M)<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(str[j]==<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x--;</span><br><span class="line">                <span class="keyword">if</span>(x&lt;<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">0</span>)cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">        x=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;第一章-绪论&quot;&gt;&lt;a href=&quot;#第一章-绪论&quot; class=&quot;headerlink&quot; title=&quot;第一章 绪论&quot;&gt;&lt;/a&gt;第一章 绪论&lt;/h3&gt;&lt;h4 id=&quot;判断题&quot;&gt;&lt;a href=&quot;#判断题&quot; class=&quot;headerlink&quot; title=&quot;判断题</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>静态博客的创建</title>
    <link href="https://zhang0224gz.github.io/2021/12/04/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%BB%BA%E7%AB%8B/"/>
    <id>https://zhang0224gz.github.io/2021/12/04/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%BB%BA%E7%AB%8B/</id>
    <published>2021-12-04T11:35:25.302Z</published>
    <updated>2021-12-05T11:59:02.337Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-下载node"><a href="#1-下载node" class="headerlink" title="1.下载node"></a>1.下载node</h4><p>​    D:\my app\nodejs</p><h4 id="2-github注册"><a href="#2-github注册" class="headerlink" title="2.github注册"></a>2.github注册</h4><p>​    -&gt;Zhang2002GZ.github.io（用户名.github.io）</p><h4 id="3-下载git"><a href="#3-下载git" class="headerlink" title="3.下载git"></a>3.下载git</h4><p>​    git for windows-&gt;cmd+r: git（D:\my app\Git）</p><h4 id="4-SHH配置"><a href="#4-SHH配置" class="headerlink" title="4.SHH配置"></a>4.SHH配置</h4><p> (1)git_bash打开:$ <strong>ssh-keygen -t rsa -C “<a href="mailto:&#50;&#x32;&#53;&#49;&#x37;&#x38;&#55;&#57;&#50;&#51;&#64;&#x71;&#x71;&#x2e;&#x63;&#111;&#x6d;">&#50;&#x32;&#53;&#49;&#x37;&#x38;&#55;&#57;&#50;&#51;&#64;&#x71;&#x71;&#x2e;&#x63;&#111;&#x6d;</a>“</strong>-&gt;回车(4次)直至结束<br> 记住这行Enter file in which to save the key (/c/Users/Administrator/.ssh/id_rsa) 括号里面的地址是后面要用到的<br> (2)打开github-&gt;setting-&gt;SHH:title:Zhang2002GZ ;key:粘贴文本文档<br>     user-&gt;zhangguozhi-&gt;.ssh-&gt;.pub<br> 在github上建秘钥</p><h4 id="5-hexo使用"><a href="#5-hexo使用" class="headerlink" title="5.hexo使用"></a>5.hexo使用</h4><p>​    -&gt;文档<br>   <strong>npm install hexo-cli -g</strong>   //安装<br>   <strong>hexo init blog</strong>   //初始化博客<br>   <strong>cd blog</strong><br>   <strong>npm install</strong><br>   //hexo server<br> 新建目录blog-&gt;cmd+r-&gt;D:-&gt;cd blog-&gt;npm install hexo-cli -g-&gt;hexo init myblog-&gt;cd myblog-&gt;npm install -&gt;hexo s -p 4000<br> 浏览器输入网址：localhost:4000</p><h4 id="6-sublime安装"><a href="#6-sublime安装" class="headerlink" title="6.sublime安装"></a>6.sublime安装</h4><p>​    -&gt;将博客目录直接拖进-&gt;## hello hexo</p><h4 id="7-hexo发布至github"><a href="#7-hexo发布至github" class="headerlink" title="7.hexo发布至github"></a>7.hexo发布至github</h4><p> hexo-&gt;文档-&gt;部署repo<br> sublime-&gt;_config.yml<br> 开头：<br>   # URL<br>   ## Set your site url here. For example, if you use GitHub Page, set url as ‘<a href="https://username.github.io/project&#39;">https://username.github.io/project&#39;</a><br>   <strong>url</strong>: <a href="https://zhang2002gz.github.io/">https://Zhang2002GZ.github.io</a><br> 末尾<br>   # Deployment<br>   ## Docs: <a href="https://hexo.io/docs/one-command-deployment">https://hexo.io/docs/one-command-deployment</a><br>   deploy:<br>       <strong>type: git<br>       repo: <a href="https://github.com/Zhang2002GZ/Zhang2002GZ.github.io.git">https://github.com/Zhang2002GZ/Zhang2002GZ.github.io.git</a><br>       branch: master</strong><br> hexo-&gt;文档-&gt;部署<br> <strong>hexo g-&gt;npm install hexo-deployer-git –save-&gt;hexo d</strong></p><p>type: git<br> repository: <a href="https://github.com/zhang2002gz/zhang2002gz.github.io.git">https://github.com/zhang2002gz/zhang2002gz.github.io.git</a><br> branch: main</p><p>hexo init( Start blogging with Hexo!)-&gt;静态生成本地的hexo页面hexo s(打开本地服务器：将<a href="http://localhost:4000可以看见博客；ctrl+c关闭服务器就看不见页面）">http://localhost:4000可以看见博客；ctrl+c关闭服务器就看不见页面）</a><br> -&gt;npm install hexo-deployer-git –save-&gt;生成页面hexo g-&gt;将本地文件上传github hexo d<br> （error10054:这个保错就执行git config –global http.sslVerify “false”）<br> **!**登入页面弹窗只在第一次创建的时候出现</p><h4 id="7-美化"><a href="#7-美化" class="headerlink" title="7.美化"></a>7.美化</h4><p> git clone <a href="https://github.com/theme-nexmoe/hexo-theme-nexmoe.git">https://github.com/theme-nexmoe/hexo-theme-nexmoe.git</a> themes/nexmoe<br> (git clone 改页面代码所在地址.git 存到themes目录下/新建的nexmoe)<br> sublime修改_config.yml:theme: nexmoe</p><p>也可以在release里下载压缩包将它解压到themes中</p><p> npm install –save hexo-renderer-pug<br> git clone <a href="https://github.com/liuyib/hexo-theme-stun.git">https://github.com/liuyib/hexo-theme-stun.git</a> themes/stun<br> theme: sbun<br> 清理一下hexo clean ,生成一下 hexo g,hexo s(打开服务器），hexo d(上传）</p><h4 id="8-其他"><a href="#8-其他" class="headerlink" title="8.其他"></a>8.其他</h4><p>检查：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"> git --version</span><br><span class="line"> npm -v</span><br><span class="line"> hexo -v</span><br><span class="line"></span><br><span class="line">ssh</span><br><span class="line"> $ ssh -T git@github.com</span><br><span class="line"> （Hi zhang2002gz! Yo<span class="string">u&#x27;ve successfully authenticated, but GitHub does not provide shell access.）</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">查看npm安装hexo插件的情况 npm ls --depth 0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">安装缺失的插件 npm install acorn --save</span></span><br></pre></td></tr></table></figure><p>万能三件套：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line"></span><br><span class="line">git config --global --unset https.proxy</span><br><span class="line"></span><br><span class="line">git config --global http.sslVerify <span class="string">&quot;false&quot;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.bilibili.com/video/BV1mU4y1j72n?p=5&spm_id_from=pageDriver">【2021最新版】保姆级Hexo+github搭建个人博客_哔哩哔哩_bilibili</a></p><p><a href="https://www.pianshen.com/article/10881955667/">Hexo博客开发之——WARN No layout index.html - 程序员大本营 (pianshen.com)</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Git 全局设置:</span><br><span class="line"> git config --global user.name <span class="string">&quot;zhang-guozhi&quot;</span></span><br><span class="line"> git config --global user.email <span class="string">&quot;10094335+zhang-guozhi@user.noreply.gitee.com&quot;</span></span><br><span class="line"> 创建 git 仓库:</span><br><span class="line"> mkdir zhang-guozhi</span><br><span class="line"> cd zhang-guozhi</span><br><span class="line"> git init</span><br><span class="line"> touch README.md</span><br><span class="line"> git add README.md</span><br><span class="line"> git commit -m <span class="string">&quot;first commit&quot;</span></span><br><span class="line"> git remote add origin https:<span class="comment">//gitee.com/zhang-guozhi/zhang-guozhi.git</span></span><br><span class="line"> git push -u origin master</span><br><span class="line"> 已有仓库?</span><br><span class="line"> cd existing_git_repo</span><br><span class="line"> git remote add origin https:<span class="comment">//gitee.com/zhang-guozhi/zhang-guozhi.git</span></span><br><span class="line"> git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-下载node&quot;&gt;&lt;a href=&quot;#1-下载node&quot; class=&quot;headerlink&quot; title=&quot;1.下载node&quot;&gt;&lt;/a&gt;1.下载node&lt;/h4&gt;&lt;p&gt;​    D:\my app\nodejs&lt;/p&gt;
&lt;h4 id=&quot;2-github注册&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://zhang0224gz.github.io/2021/11/27/hello-world/"/>
    <id>https://zhang0224gz.github.io/2021/11/27/hello-world/</id>
    <published>2021-11-27T13:15:34.628Z</published>
    <updated>2021-11-27T13:15:34.628Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
