<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://zhang0224gz.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhang0224gz.github.io/"/>
  <updated>2022-10-15T03:56:55.060Z</updated>
  <id>https://zhang0224gz.github.io/</id>
  
  <author>
    <name>zhang0224gz</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JAVA基础入门</title>
    <link href="https://zhang0224gz.github.io/2022/09/23/%E7%AC%94%E8%AE%B0/JAVA/"/>
    <id>https://zhang0224gz.github.io/2022/09/23/%E7%AC%94%E8%AE%B0/JAVA/</id>
    <published>2022-09-23T12:53:52.150Z</published>
    <updated>2022-10-15T03:56:55.060Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编程基础"><a class="markdownIt-Anchor" href="#编程基础"></a> 编程基础</h1><h2 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h2><h3 id="基本格式"><a class="markdownIt-Anchor" href="#基本格式"></a> 基本格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修饰符 <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">程序代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>结构定义语句用于声明一个类或方法</li><li>功能执行语句用于实现具体得功能，且最后要用 <code>;</code>结束</li></ul><p><strong>注意：</strong></p><ol><li>JAVA严格区分大小写</li><li>一个连续得字符串不能分成两行书写，但可以分成两个字符串用<code>+</code>连接</li></ol><h4 id="例子"><a class="markdownIt-Anchor" href="#例子"></a> 例子</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> 包名;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 文件名 </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;啦啦&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="注释"><a class="markdownIt-Anchor" href="#注释"></a> 注释</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">单行注释：</span><br><span class="line">//int a = 0;</span><br><span class="line"></span><br><span class="line">多行注释：</span><br><span class="line">/* int a = 0;</span><br><span class="line">   int b = 1; */</span><br><span class="line">  </span><br><span class="line">文档注释（可以使用javadoc命令提取出来）：</span><br><span class="line">/**</span><br><span class="line">*@author nacy</span><br><span class="line">*@version 1.0</span><br><span class="line">**/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="标识符"><a class="markdownIt-Anchor" href="#标识符"></a> 标识符</h3><p>标识符可以由字母、数字、下画线<code>_</code>和美元符号<code>$</code>组成，但标识符不能以数字开头，不能是JAVA中得关键字。</p><p><strong>规则：</strong></p><ul><li><strong>包名</strong>的<strong>所有字母小写</strong>：cn.itcast.test</li><li><strong>类名和接口名</strong>的<strong>每个单词首字母大写</strong>：ArrayList</li><li><strong>常量名</strong>的<strong>所有字母大写，单词间下画线连接</strong>：DAY_OF_MONTH</li><li><strong>变量名和方法名</strong>的<strong>第一个单词首字母小写，其他首字母大写</strong>：lineNumber</li><li>使用有意义的英文单词定义：password</li></ul><h3 id="关键字"><a class="markdownIt-Anchor" href="#关键字"></a> 关键字</h3><ul><li>关键字小写</li><li>关键字不命名标识符</li><li>保留关键字<code>const,goto</code>，无意义但不能作标识符</li><li><code>true,false,null</code>不属于关键字也不作为标识符</li></ul><h2 id="常量"><a class="markdownIt-Anchor" href="#常量"></a> 常量</h2><ul><li>整形常量<ul><li>二进制（0b/0B开头）</li><li>八进制（0开头）</li><li>十进制</li><li>十六进制（0x/0X开头）</li></ul></li><li>浮点数常量<ul><li>单精度浮点数<strong>float</strong> (后缀-F/-f：2e3f)</li><li>双精度浮点数**double **(后缀-D/-d，不加后缀：3.6d)</li></ul></li><li>字符常量<ul><li><code>'</code>一个字符<code>'</code></li><li>Unicode字符集：’\u0000’空白字符</li></ul></li><li>字符串常量<ul><li><code>&quot;</code>一串连续的字符<code>&quot;</code></li></ul></li><li>布尔常量<ul><li>true 和 false</li></ul></li><li>null常量<ul><li>null，表示对象的引用为空</li></ul></li></ul><h2 id="变量"><a class="markdownIt-Anchor" href="#变量"></a> 变量</h2><h3 id="数据类型"><a class="markdownIt-Anchor" href="#数据类型"></a> <strong>数据类型</strong></h3><ul><li>基本数据类型<ul><li>数值型<ul><li>整数类型<ul><li>字节型 <strong>byte</strong>（1B）</li><li>短整型 <strong>short</strong>（2B）</li><li>整形 <strong>int</strong>（4B）</li><li>长整型 <strong>long</strong>（8B，后缀-L/-l）</li></ul></li><li>浮点数类型<ul><li><strong>float</strong>（4B,，后缀-F/-f）</li><li><strong>double</strong>（8B，后缀-D/-d，不加后缀）</li></ul></li></ul></li><li>字符型 <strong>char</strong></li><li>布尔型 <strong>boolean</strong></li></ul></li><li>引用数据类型</li></ul><h3 id="类型转换"><a class="markdownIt-Anchor" href="#类型转换"></a> 类型转换</h3><ul><li><p>自动类型转换/隐式类型转换</p></li><li><p>强制类型转换/显式类型转换</p><p>​<code>byte b = (byte)num;</code></p></li></ul><h3 id="作用域"><a class="markdownIt-Anchor" href="#作用域"></a> 作用域</h3><p>以大括号包围的为范围</p><h2 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> 运算符</h2><h3 id="算术运算符"><a class="markdownIt-Anchor" href="#算术运算符"></a> 算术运算符</h3><p><code>+3,-3,+,-,*,/.%(正负取决于左边的数),a++,++a,a--,--a</code></p><h3 id="赋值运算符"><a class="markdownIt-Anchor" href="#赋值运算符"></a> 赋值运算符</h3><p><code>=,+=,-=,*=,/=,%=</code></p><h3 id="比较运算符"><a class="markdownIt-Anchor" href="#比较运算符"></a> 比较运算符</h3><p><code>==,!=,&lt;,&gt;,&lt;=,&gt;=</code></p><h3 id="逻辑运算符"><a class="markdownIt-Anchor" href="#逻辑运算符"></a> 逻辑运算符</h3><p><code>&amp;与,|或,^异或,!非,&amp;&amp;短路与,||短路或</code></p><h3 id="优先级"><a class="markdownIt-Anchor" href="#优先级"></a> 优先级</h3><img src="C:/Users/zhangguozhi/AppData/Roaming/Typora/typora-user-images/image-20220923215023439.png" alt="image-20220923215023439" style="zoom: 50%;" /><h2 id="结构语句"><a class="markdownIt-Anchor" href="#结构语句"></a> 结构语句</h2><h3 id="选择结构语句"><a class="markdownIt-Anchor" href="#选择结构语句"></a> 选择结构语句</h3><ul><li><p>if条件语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(a &gt;= <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a &lt; <span class="number">100</span> &amp;&amp; a &gt;= <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">b = <span class="number">60</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>三元运算符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a&gt;=<span class="number">100</span>?b=<span class="number">100</span>:(a&lt;<span class="number">100</span>&amp;&amp;a&gt;=<span class="number">60</span>?b=<span class="number">60</span>:b=<span class="number">0</span>);</span><br><span class="line">-&gt; a&gt;=<span class="number">100</span>?b=<span class="number">100</span>:a&lt;<span class="number">100</span>&amp;&amp;a&gt;=<span class="number">60</span>?b=<span class="number">60</span>:b=<span class="number">0</span>;</span><br></pre></td></tr></table></figure></li><li><p>switch条件语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(a)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">100</span>:</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">60</span>:</span><br><span class="line">b = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span></span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="循环结构语句"><a class="markdownIt-Anchor" href="#循环结构语句"></a> 循环结构语句</h3><ul><li><p>while循环语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">while</span>(x &lt;= <span class="number">4</span>)&#123;</span><br><span class="line">x--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>do…while循环语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">x--;</span><br><span class="line">&#125;<span class="keyword">while</span>(x &lt;= <span class="number">4</span>);</span><br></pre></td></tr></table></figure></li><li><p>for循环语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;=<span class="number">4</span>; i++)&#123;</span><br><span class="line">x--;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>跳转语句</p><ul><li>break语句（直接结束当前循环）</li><li>continue语句（跳过循环中的一次）</li></ul></li></ul><h2 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h2><h3 id="语法格式"><a class="markdownIt-Anchor" href="#语法格式"></a> 语法格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">修饰符 返回值类型 方法名(参数类型 参数<span class="number">1</span>, 参数类型 参数<span class="number">2</span>, ...)&#123;</span><br><span class="line">执行语句</span><br><span class="line"><span class="keyword">return</span> 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修饰符：static, final…</li></ul><h3 id="方法重载"><a class="markdownIt-Anchor" href="#方法重载"></a> 方法重载</h3><p>相同的方法名，以不同参数区分不同方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exp02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo02</span> </span>&#123;</span><br><span class="line">    <span class="comment">//Java方法重载</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum1 = add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">int</span> sum2 = add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">double</span> sum3 = add(<span class="number">1.2</span>,<span class="number">2.3</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;sum1=&quot;</span>+sum1);</span><br><span class="line">        System.out.println(<span class="string">&quot;sum2=&quot;</span>+sum2);</span><br><span class="line">        System.out.println(<span class="string">&quot;sum3=&quot;</span>+sum3);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x+y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x+y+z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x+y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h2><h3 id="一维数组"><a class="markdownIt-Anchor" href="#一维数组"></a> 一维数组</h3><ul><li><p>法一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] x;</span><br><span class="line">x = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];<span class="comment">//变量初始值默认都为0</span></span><br><span class="line">x[<span class="number">0</span>] = <span class="number">11</span>;</span><br></pre></td></tr></table></figure></li><li><p>法二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] x = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span><br><span class="line">x[<span class="number">0</span>] = <span class="number">88</span>;</span><br></pre></td></tr></table></figure></li><li><p>法三</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] x = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="keyword">int</span>[] x = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br></pre></td></tr></table></figure></li></ul><p><code>arr = null</code>表示没有指向任何数组，通过该变量访问数组元素会出现空指针异常</p><p><code>arr.length</code>获得数组长度，即元素个数</p><h3 id="二维数组"><a class="markdownIt-Anchor" href="#二维数组"></a> 二维数组</h3><ul><li><p>法一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] x = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">4</span></span><br></pre></td></tr></table></figure></li><li><p>法二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] x = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][];</span><br><span class="line">x[<span class="number">0</span>] = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure></li><li><p>法三</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][] x = &#123;&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;&#125;;</span><br></pre></td></tr></table></figure></li></ul><h2 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exp02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//使用循环语句实现自然数1˜99的遍历</span></span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(x&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            System.out.println(x++);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//在遍历过程中，通过条件判断当前遍历的数是否为奇数，如果是累加，否则不加</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;<span class="number">101</span>; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                sum += i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);<span class="comment">//2500</span></span><br><span class="line">        <span class="comment">//使用任意算法编写程序，实现对数组&#123;25，24，12，76，101，96，28&#125;的降序排列</span></span><br><span class="line">        <span class="comment">//选择排序</span></span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">25</span>,<span class="number">24</span>,<span class="number">12</span>,<span class="number">76</span>,<span class="number">101</span>,<span class="number">96</span>,<span class="number">28</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> maxi;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr.length-<span class="number">1</span>; i++)&#123;</span><br><span class="line">            maxi = i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;arr.length; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[maxi]&lt;arr[j])maxi=j;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(maxi != i)&#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[maxi];</span><br><span class="line">                arr[maxi] = arr[i];</span><br><span class="line">                arr[i] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr.length; i++)</span><br><span class="line">            System.out.println(arr[i]);<span class="comment">//咋样实现不换行输出</span></span><br><span class="line">        <span class="comment">//冒泡排序</span></span><br><span class="line">        <span class="keyword">int</span>[] arr0 = &#123;<span class="number">25</span>,<span class="number">24</span>,<span class="number">12</span>,<span class="number">76</span>,<span class="number">101</span>,<span class="number">96</span>,<span class="number">28</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;arr0.length; i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;arr0.length-i; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr0[j]&lt;arr0[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    <span class="keyword">int</span> temp = arr0[j];</span><br><span class="line">                    arr0[j] = arr0[j+<span class="number">1</span>];</span><br><span class="line">                    arr0[j+<span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;arr0.length; i++)&#123;</span><br><span class="line">            System.out.println(arr0[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="面向对象上"><a class="markdownIt-Anchor" href="#面向对象上"></a> 面向对象（上）</h1><h2 id="面向对象"><a class="markdownIt-Anchor" href="#面向对象"></a> 面向对象</h2><p>面向对象和面向过程：</p><ul><li>面向对象的思想：程序中使用对象映射现实中的事物，使用对象的关系描述事物之间的联系</li><li>面向过程的思想：通过分析得出解决问题所需的步骤，然后写出函数将步骤实现，使用时依次调用</li></ul><p>面向对象的特性：</p><ul><li><strong>封装性</strong></li><li><strong>继承性</strong></li><li><strong>多态性</strong></li></ul><h2 id="类与对象"><a class="markdownIt-Anchor" href="#类与对象"></a> 类与对象</h2><p>类和对象是最基本、最重要的单元。类表示某类群体的一些基本特征的抽象，对象表示一个个具体的事物。</p><p>类用于描述多个对象的共同特征，它是对象的模板。对象用于描述现实中的个体，它是类的实例。对象是根据类创建的，一个类可以对应多个对象。比如车是一个类具有所有车的共性，出租车、卡车、货车是对象还具有特性。</p><h3 id="类的定义"><a class="markdownIt-Anchor" href="#类的定义"></a> 类的定义</h3><p>类是对象的抽象，用于描述一组对象的共同特征和行为。</p><p>类中可以定义成员变量和成员方法。成员变量，又称对象的属性，用于描述对象的特征。成员方法，简称方法，用于描述对象的行为。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义Student类：class+类名</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性/成员变量</span></span><br><span class="line">String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String sex;</span><br><span class="line">    <span class="comment">//方法/成员方法</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;name:&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：类中的成员变量和成员方法中的局部变量可以同名，但方法中变量名访问的是局部变量而不是成员变量。</p><h3 id="对象的创建与使用"><a class="markdownIt-Anchor" href="#对象的创建与使用"></a> 对象的创建与使用</h3><p>要想要使用一个类，必须创建该类的对象。<strong>new关键字</strong>创建对象：</p><ul><li><p>形式一</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.声明对象：类名 对象名 = null;</span></span><br><span class="line"><span class="comment">//声明一个Student类的变量stu（栈内存）</span></span><br><span class="line">Student stu = <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">//2.实例化对象：对象名 = new 类名();</span></span><br><span class="line"><span class="comment">//运算符=将新创建的实例对象地址赋值给变量stu（堆内存）</span></span><br><span class="line">stu = <span class="keyword">new</span> Student();</span><br></pre></td></tr></table></figure></li><li><p>形式二</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br></pre></td></tr></table></figure></li></ul><p>注意：对象名stu保存在栈内存中，而对象属性信息保存在对应的堆内存中。new关键字创建的对象在堆内存中分配空间。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">对象使用</span><br><span class="line"><span class="comment">//对象名.属性名</span></span><br><span class="line">stu.name = <span class="string">&quot;小华&quot;</span>;</span><br><span class="line"><span class="comment">//对象名.方法名</span></span><br><span class="line">stu.read();</span><br></pre></td></tr></table></figure><h3 id="对象的引用传递"><a class="markdownIt-Anchor" href="#对象的引用传递"></a> 对象的引用传递</h3><p>类属于引用数据类型，引用数据类型的内存空间可以同时被多个栈内存引用。所谓的引用传递，就是将一个堆内存空间的使用权分配给多个栈内存空间使用，每个栈内存空间都可以修改堆内存空间的内容，即：多个变量被赋予了同一个实例对象地址（无数的小明……），一个变量把内容修改了所有变量都修改（一个小明剪了平头，所有其他小明同时变成平头）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Student stu = <span class="keyword">new</span> Student();</span><br><span class="line">Student stu1 = <span class="keyword">null</span>;</span><br><span class="line">Student stu2 = <span class="keyword">null</span>;</span><br><span class="line">stu1 = stu;</span><br><span class="line">stu2 = stu;</span><br><span class="line">stu.name = <span class="string">&quot;光头强&quot;</span>;</span><br><span class="line">stu1.name = <span class="string">&quot;熊大&quot;</span>;</span><br><span class="line">stu2.name = <span class="string">&quot;熊二&quot;</span>;</span><br><span class="line">stu.read();</span><br><span class="line">stu1.read();</span><br><span class="line">stu2.read();</span><br><span class="line"><span class="comment">//结果是都输出：name:熊二</span></span><br></pre></td></tr></table></figure><p>注意：一个栈内存空间只能指向一个堆内存空间。如果想要再指向其他堆内存空间，就必须先断开已有的指向，才能分配新的指向。</p><h3 id="4种访问控制权限"><a class="markdownIt-Anchor" href="#4种访问控制权限"></a> 4种访问控制权限</h3><p>4种访问控制权限按级别由低到高：</p><ul><li>private：私有访问权限。修饰类的属性和方法，也可以修饰内部类。类的成员只能在<strong>本类</strong>中访问。</li><li>default：默认访问权限。表现形式：类中属性或方法无任何访问权限声明。类的成员可以被<strong>本包中的其他类</strong>访问，但不能被其他包的类访问。</li><li>protected：受保护的访问权限。类的成员只能被本包以及<strong>不同包的子类</strong>访问</li><li>public：公共访问权限。类的成员可以在所有类中被访问，不限制包。</li></ul><p>注意：外部类的访问权限只能是public和default。<strong>局部成员是没有访问控制权限。</strong></p><h2 id="封装性"><a class="markdownIt-Anchor" href="#封装性"></a> 封装性</h2><p>封装是指将类的实现细节包装、隐藏起来的方法。</p><p>为了避免信息错误（age = -18），设计类时，应该对成员变量的访问做出一些限制，不允许外界随意访问，这就需要实现类的封装。</p><p>封装的具体实现过程：</p><ul><li>定义一个类时，将类中的<strong>属性私有化</strong>（private关键字）</li><li>定义<strong>public修饰的公有方法来访问私有变量</strong>，包括获取属性值的getter方法和设置属性值得setter方法。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> exp02;</span><br><span class="line"></span><br><span class="line"><span class="comment">//个人简历的封装类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Resume</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性私有化</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">//getter方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//setter方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(age&lt;<span class="number">18</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入不小于18岁的年龄！&quot;</span>);</span><br><span class="line">            <span class="comment">//int变量初始值默认为0</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;年龄不小于18岁，输入正确！&quot;</span>);</span><br><span class="line">            <span class="keyword">this</span>.age = age;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;自我介绍&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>+name+<span class="string">&quot; 年龄:&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo04</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Resume re = <span class="keyword">new</span> Resume();</span><br><span class="line">        re.setName(<span class="string">&quot;二狗子&quot;</span>);</span><br><span class="line">        re.setAge(-<span class="number">18</span>);</span><br><span class="line">        re.introduce();</span><br><span class="line">        Resume re1 = <span class="keyword">new</span> Resume();</span><br><span class="line">        re1.setName(<span class="string">&quot;大肥羊&quot;</span>);</span><br><span class="line">        re1.setAge(<span class="number">19</span>);</span><br><span class="line">        re1.introduce();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造方法"><a class="markdownIt-Anchor" href="#构造方法"></a> 构造方法</h2><p>如果需要在实例化对象时为这个对象的属性赋值，可以通过构造方法实现。构造方法，又称为构造器，是类的一个特殊成员方法，<strong>在类实例化对象时自动调用</strong>。</p><h3 id="构造方法的定义"><a class="markdownIt-Anchor" href="#构造方法的定义"></a> 构造方法的定义</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String sex;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了无参构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了有参构造方法实现对属性的赋值&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>构造方法的名字要<strong>与类名一致</strong></li><li>构造方法名前不能有任何返回值类型声明，也不能在构造方法中return值，但可以单return作为方法结束。</li><li>构造方法的调用在关键字new<strong>实例化对象</strong>的时候</li><li>有参构造方法可以实现<strong>方法重载</strong>（参数类型或个数不同）</li><li>每个类至少有一个构造方法。如果没有定义构造方法，系统会自动创建一个默认构造方法（无参无代码）。但类定义了构造方法，系统不会提供默认构造函数。</li><li>可以使用this在构造方法中调用其他构造方法（详见this关键字调用构造方法）</li></ul><h2 id="this关键字"><a class="markdownIt-Anchor" href="#this关键字"></a> this关键字</h2><h3 id="调用本类中的属性"><a class="markdownIt-Anchor" href="#调用本类中的属性"></a> 调用本类中的属性</h3><p>当成员变量和局部变量发生重名问题时，需要用this关键字分辨成员变量和局部变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String sex;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name,<span class="keyword">int</span> age,String sex)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用成员方法"><a class="markdownIt-Anchor" href="#调用成员方法"></a> 调用成员方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">word</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.word();<span class="comment">//this可以省略不写</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用构造方法"><a class="markdownIt-Anchor" href="#调用构造方法"></a> 调用构造方法</h3><p>构造方法在实例化对象时被JAVA虚拟机自动调用，在程序中不能像成员方法那样调用构造函数。但可以在一个构造方法中使用“this(…)”调用其他构造方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String sex;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了无参构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>();<span class="comment">//调用无参构造方法</span></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了有参构造方法实现对属性的赋值&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>只能在构造方法中使用this调用其他的构造方法</li><li>在构造方法中，使用this调用其他的构造方法的语句必须位于第一行，且只能出现一次</li><li>不能在类中使用this互相调用</li></ul><h2 id="代码块"><a class="markdownIt-Anchor" href="#代码块"></a> 代码块</h2><p>{}括起来的一段代码</p><h3 id="普通代码块"><a class="markdownIt-Anchor" href="#普通代码块"></a> 普通代码块</h3><p>一对{}就是一个代码块，main方法中定义了一个局部代码块，实现“分隔”，起到限定作用域的作用，互不影响。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> age = <span class="number">18</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;普通代码块中age=&quot;</span>+age);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> age = <span class="number">30</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;main方法中age=&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="构造块"><a class="markdownIt-Anchor" href="#构造块"></a> 构造块</h3><p>直接在类中定义的代码块</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了构造块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了无参构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结论：</p><ul><li>构造块和构造方法同级，但实例化对象时，构造块比构造方法先执行</li></ul><h3 id="静态代码块"><a class="markdownIt-Anchor" href="#静态代码块"></a> 静态代码块</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    String sex;</span><br><span class="line">    <span class="keyword">static</span> String school = <span class="string">&quot;A大学&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="同步代码块"><a class="markdownIt-Anchor" href="#同步代码块"></a> 同步代码块</h3><p>多线程部分讲解</p><h2 id="static关键字"><a class="markdownIt-Anchor" href="#static关键字"></a> static关键字</h2><p>用于修饰类的成员，如成员变量、成员方法、代码块等。</p><p>如果一个方法与他所在类的实例对象无关，那么它就应该是静态的，而不应该把它写成实例方法。所以所有的实例方法都与实例有关，既然与实例有关，那么创建实例就是必然的步骤。</p><h3 id="静态属性"><a class="markdownIt-Anchor" href="#静态属性"></a> 静态属性</h3><p>静态属性，又称全局属性，可以使用类名直接访问。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> String school = <span class="string">&quot;A大学&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;school=&quot;</span>+school);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Student.school = <span class="string">&quot;B大学&quot;</span>;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>static关键字将school属性变为公共属性，只分配一块内存空间，为Student类所有对象共享。</li><li>某个对象进行school属性的修改，全部对象的school属性都被修改。</li><li>static只能修饰成员变量，不能修饰局部变量</li></ul><h3 id="静态方法"><a class="markdownIt-Anchor" href="#静态方法"></a> 静态方法</h3><p>实现不创建对象的情况下，通过类名直接调用方法。（正常情况下需要将类实例化才能调用成员方法）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> String school = <span class="string">&quot;A大学&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSchool</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> school;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setSchool</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">        school = s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;school=&quot;</span>+school);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Student.setSchool(<span class="string">&quot;B大学&quot;</span>);</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>静态方法只能访问静态成员。</li><li>非静态成员需要先创建对象才能访问，即对象创建后非静态成员才会分配内存。</li><li>**this 关键字不能用于引用类的静态成员。**这是因为this 关键字指向类的当前对象 ，并且静态成员不需要调用任何对象。可以直接访问类的静态成员，而无需在Java中创建对象。</li><li>静态方法不需要通过它所属的类的任何实例就可以被调用，因此在静态方法中不能使用this关键字，也不能直接访问所属类的实例变量和实例方法，但是可以直接访问所属类的静态变量和静态方法（静态方法只能调用静态变量）。</li></ul><h3 id="静态代码块-2"><a class="markdownIt-Anchor" href="#静态代码块-2"></a> 静态代码块</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> String school;</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了构造块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span>&#123;</span><br><span class="line">        school = <span class="string">&quot;A大学&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了静态代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;调用了无参构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>当类被加载时，静态代码块就会执行。由于类只加载一次，所以<strong>静态代码块只执行一次（类第一次使用）</strong>。</li><li>执行顺序：静态代码块-&gt;构造代码块-&gt;构造方法</li></ul><h2 id="例子-2"><a class="markdownIt-Anchor" href="#例子-2"></a> 例子</h2><h1 id="面向对象下"><a class="markdownIt-Anchor" href="#面向对象下"></a> 面向对象（下）</h1><h2 id="继承"><a class="markdownIt-Anchor" href="#继承"></a> 继承</h2><p><strong>概念：</strong></p><ul><li><p>继承描述的是<strong>事物间的从属关系</strong>，通过继承可以使多种事物之间形成一种关系体系。</p></li><li><p>JAVA类的继承是指在一个现有类的基础上构建一个新的类。</p></li><li><p>声明一个类继承另一个类，使用<strong>extends关键字</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 父类</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> 子类 <span class="keyword">extends</span> 父类</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>特点：</strong></p><ul><li>构建的新类叫<strong>子类</strong>，现有的类叫<strong>父类</strong></li><li>子类自动继承父类的属性和方法，子类只能访问父类中用<strong>public</strong>和<strong>protected</strong>修饰的属性和方法</li><li><strong>类只支持单继承</strong>，不允许多继承但允许多层继承，即：一个人只能有一个爸爸，但可以有好多辈祖宗，爸爸可以有好多娃子</li></ul><p><strong>注意：there is no default constructor available in …</strong></p><ul><li><p>这个错误是由于继承引起的，原因是子类里写了并且使用了无参的构造方法但是它的父类（祖先）中却至少有一个是没有无参构造方法的，就会出现这个问题。原因：</p><ul><li><p>1.一个类如果显式的定义了带参构造函数，那么默认无参构造函数自动失效 。我们都知道一个类如果没有定义构造函数，那么会有一个默认的无参构造函数供你调用就是MyClass()。 但是如果你定义了一个带参构造函数，而没有显式的定义无参构造函数，那么无参构造函数就被隐藏了。</p></li><li><p>2.一个类只要有父类，那么在它实例化的时候，一定是从顶级的父类开始创建。对于Java来说要一直追述到Object  祖宗（Object）-&gt; 曾爷爷 -&gt; 爷爷 -&gt; 父亲 -&gt; me</p><p>这个思维很自然，没有祖宗，何来后代？祖宗的一些东西都没准备好，后代怎么继承去用？</p></li></ul></li><li><p>也就是说当你用子类的无参构造函数创建子类对象时，会去先递归调用父类的无参构造方法，这时候如果某个类的父类没有无参构造方法就会出错啦~</p></li><li><p><strong>要么就是父类使用了有参构造，要么让父类再写个无参构造，要么子类继续写有参构造</strong>。</p></li></ul><h3 id="继承的创建和使用"><a class="markdownIt-Anchor" href="#继承的创建和使用"></a> 继承的创建和使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pupil</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"> <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main函数</span></span><br><span class="line">Pupil p = <span class="keyword">new</span> Pupil();</span><br><span class="line">p.getName(<span class="string">&quot;小王&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;姓名：&quot;</span>+<span class="keyword">this</span>.getName());</span><br></pre></td></tr></table></figure><h3 id="方法重写"><a class="markdownIt-Anchor" href="#方法重写"></a> 方法重写</h3><ul><li><p>子类中重写父类，即子类对父类继承的方法进行一些修改。</p></li><li><p>子类重写的方法需要和父类中被重写的方法具有相同的方法名、参数列表以及返回值类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;学生的就读方式&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pupil</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;学生的就读方式为：走读&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//main函数</span></span><br><span class="line">Pupil p = <span class="keyword">new</span> Pupil();</span><br><span class="line">p.mode();</span><br></pre></td></tr></table></figure></li></ul><p>注意：重写时，不能使用比父类的方法更严格的访问权限</p><h3 id="super关键字"><a class="markdownIt-Anchor" href="#super关键字"></a> super关键字</h3><ul><li><p>子类中使用super关键字访问父类成员，例如：子类重写父类的方法后，子类对象将无法访问父类中被子类重写过的函数，使用super关键字可以访问父类成员</p></li><li><p>super关键字可以在子类中访问父类的非私有方法、非私有属性和构造方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;学生的就读方式为：&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pupil</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.mode();</span><br><span class="line">        System.out.println(<span class="string">&quot;走读&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>**注意：**super关键字调用父类构造方法的代码必须位于子类构造方法的第一个行，并且只能出现一次，所以this和super不能同时出现</p><h2 id="final关键字"><a class="markdownIt-Anchor" href="#final关键字"></a> final关键字</h2><ul><li>当父类的成员不希望被子类重写时，可以在声明父类的成员时使用final关键字修饰。</li><li>final关键字修饰类、属性、方法</li></ul><p><strong>注意：</strong></p><ul><li>修饰的类不能是子类，且不可以被继承和派生子类</li><li>修饰的方法不能被子类重写</li><li>修饰的变量是常量，只能在声明时被赋值一次且后续不可修改<ul><li>final声明变量，变量名称要求全部大写</li><li>变量使用public static final声明，为全局常量</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修饰类</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="comment">//修饰变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String school = <span class="string">&quot;曲阜师范大学&quot;</span>;</span><br><span class="line">    <span class="comment">//修饰方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">type</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;全日制学生&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象类和接口"><a class="markdownIt-Anchor" href="#抽象类和接口"></a> 抽象类和接口</h2><h3 id="抽象类"><a class="markdownIt-Anchor" href="#抽象类"></a> 抽象类</h3><p>定义一个类中，有些用于描述类的行为特征而定义出的成员方法，因为<strong>方法的实现方式无法确定</strong>，所以使用abstract关键字修饰的抽象方法来实现，抽象方法在定义时不需要实现方法体。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类：抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Undergraduate</span> <span class="keyword">extends</span> <span class="title">Student</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;毕业生&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>抽象方法和类必须使用Abstract关键字修饰，<strong>包含抽象方法的类必须是抽象类</strong>（不能直接创建对象，可以使用匿名内部类完成抽象方法重写）</li><li>抽象方法在抽象类中定义时不需要实现方法体，抽象方法不能使用private关键词修饰</li><li>非抽象类继承抽象类后必须重写全部抽象方法。</li></ul><h3 id="接口"><a class="markdownIt-Anchor" href="#接口"></a> 接口</h3><p>接口是抽象类衍生的一个概念（面向接口编程：将程序的<strong>不同的业务逻辑分离</strong>，<strong>以接口的形式对接</strong>不同的业务模块。接口中不实现任何业务逻辑，业务逻辑实现和修改由接口的<strong>实现类完成</strong>。）。<br />接口是一种用来定义程序的协议，它用于描述类或结构的一组相关行为。使用接口的目的是克服单继承的限制，因为一个类只有一个父类，而一个类可以同时实现多个父接口。接口由全局常量、抽象方法、默认方法、静态方法组成，都是默认public访问权限（可省略）。</p><ul><li><p><strong>接口声明(interface关键字)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">public</span>] <span class="class"><span class="keyword">interface</span> 接口名 [<span class="keyword">extends</span> 接口1,接口2,...]</span>&#123;</span><br><span class="line">    [<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span>] <span class="keyword">double</span> Pi = <span class="number">3.1415926</span>;</span><br><span class="line">    [<span class="keyword">public</span> <span class="keyword">abstract</span>] <span class="function"><span class="keyword">double</span> <span class="title">area</span><span class="params">(<span class="keyword">double</span> x)</span></span>;</span><br><span class="line">    [<span class="keyword">public</span>] <span class="keyword">static</span> 返回值数据类型 方法名(参数列表)&#123;&#125;</span><br><span class="line">    [<span class="keyword">public</span>] <span class="keyword">default</span> 返回值数据类型 方法名(参数列表)&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>接口实现类定义(implements关键字)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">修饰符 <span class="class"><span class="keyword">class</span> 类名 [<span class="keyword">extends</span> 父类名] <span class="keyword">implements</span> 接口1,接口2,...</span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x*x;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意：</strong></p><ul><li>接口是抽象类衍生的概念。使用接口的目的是克服单继承限制，一个类可以实现多个父接口。</li><li>接口不能实例化，通过接口实现类的实例化对象进行方法调用。接口的访问权限都为public（可省略），可以定义全局变量（public static final）、抽象类（public abstract）、默认方法（public default）、静态方法（public static）。</li><li><strong>接口可以继承多个接口，但不能继承抽象类。</strong></li></ul><h3 id="例子-3"><a class="markdownIt-Anchor" href="#例子-3"></a> 例子</h3><p>设计一个Shape接口和它的两个实现类Square和Circle。要求如下：</p><p>① Shape接口中有一个抽象方法area（），方法接收有一个double类型的参数，返回一个double类型的结果。</p><p>② Square和Circle中实现了Shape接口的area（）抽象方法，分别求正方形和圆形的面积并返回。</p><p>③ 在测试类中创建Square和Circle对象，计算边长为2的正方形面积和半径为3的圆形面积。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">(<span class="keyword">double</span> x)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> x*x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">implements</span> <span class="title">Shape</span></span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">double</span> Pi = <span class="number">3.1415926</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">area</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Pi*x*x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Square s = <span class="keyword">new</span> Square();</span><br><span class="line">        Circle c = <span class="keyword">new</span> Circle();</span><br><span class="line">        System.out.println(<span class="string">&quot;s.area(2): &quot;</span>+s.area(<span class="number">2</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;c.area(3): &quot;</span>+String.format(<span class="string">&quot;%.2f&quot;</span>,c.area(<span class="number">3</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态"><a class="markdownIt-Anchor" href="#多态"></a> 多态</h2><p>多态是指不同类的对象在调用同一个方法时表现出的多种不同行为(重写)或在同一方法中由于参数类型/个数不同而导致执行效果不同的现象(重载)，即实现同一方法名调用出不同行为。多态的两种形式：</p><ul><li>方法的重载</li><li>对象的多态（方法的重写）</li></ul><h3 id="对象类型的转换"><a class="markdownIt-Anchor" href="#对象类型的转换"></a> 对象类型的转换</h3><p>使用对象类型转换解决继承中的多态问题。</p><ul><li><p>向上转型：子类对象 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.36687em;"></span><span class="strut bottom" style="height:0.36687em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mrel">→</span></span></span></span>父类对象</p><p>父类对象想<strong>调用子类重写的父类方法</strong>为对象向上转型，但<strong>父类不能调用子类中定义的方法</strong>。向上转型，程序会自动完成。该方式可以实现新增子类，从而在子类中对父类的功能进行扩展，而不用修改父类的代码，保证程序的安全性。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Animal an1 = <span class="keyword">new</span> Cat(<span class="string">&quot;阳阳&quot;</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure></li><li><p>向下转型：父类对象 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.36687em;"></span><span class="strut bottom" style="height:0.36687em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mrel">→</span></span></span></span>子类对象</p><p>向下转型一般用于向上转型后想调用子类定义的方法。对象进行向下转型前必须先进行向上转型，否则异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Animal an2 = <span class="keyword">new</span> Dog(<span class="string">&quot;土豆&quot;</span>,<span class="number">3</span>);</span><br><span class="line">Dog dog = (Dog) an2;</span><br></pre></td></tr></table></figure></li></ul><h3 id="例子-4"><a class="markdownIt-Anchor" href="#例子-4"></a> 例子</h3><p>参照、优化教材P130 Exmaple14要求如下：</p><p>① Animal有两个私有属性name(String)，age(int)。</p><p>② Cat继承Animal类有一个方法action(),输出“猫捉老鼠”。</p><pre><code>Dog继承Animal类有一个方法eat(),输出“狗啃骨头”。</code></pre><p>③ 编写测试类，实现功能：当是Cat对象时输出基本信息加“喵喵”及“猫捉老鼠”；当是Dog对象时输出基本信息加“汪汪”及“狗啃骨头”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> package01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵喵喵……&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;猫捉老鼠&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Cat(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">        setAge(age);</span><br><span class="line">        setName(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>+<span class="keyword">super</span>.getName()+<span class="string">&quot; 年龄：&quot;</span>+<span class="keyword">super</span>.getAge());</span><br><span class="line">        shout();</span><br><span class="line">        action();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shout</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;汪汪汪……&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;狗啃骨头&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    Dog(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">        setAge(age);</span><br><span class="line">        setName(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">info</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>+<span class="keyword">super</span>.getName()+<span class="string">&quot; 年龄：&quot;</span>+<span class="keyword">super</span>.getAge());</span><br><span class="line">        shout();</span><br><span class="line">        eat();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">demo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Animal an1 = <span class="keyword">new</span> Cat(<span class="string">&quot;阳阳&quot;</span>,<span class="number">2</span>);</span><br><span class="line">        Cat cat = (Cat) an1;</span><br><span class="line">        Animal an2 = <span class="keyword">new</span> Dog(<span class="string">&quot;土豆&quot;</span>,<span class="number">3</span>);</span><br><span class="line">        Dog dog = (Dog) an2;</span><br><span class="line">        cat.info();</span><br><span class="line">        dog.info();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="object类"><a class="markdownIt-Anchor" href="#object类"></a> Object类</h2><p>Object类常用方法</p><h2 id="内部类"><a class="markdownIt-Anchor" href="#内部类"></a> 内部类</h2><p>四种内部类的特点</p><h1 id="关键字总结"><a class="markdownIt-Anchor" href="#关键字总结"></a> 关键字总结</h1><table><thead><tr><th>关键字</th><th>含义</th><th>备注</th></tr></thead><tbody><tr><td>class关键字</td><td>定义一个类</td><td>class 类名{}</td></tr><tr><td>new关键字</td><td>创建一个对象</td><td>类名 对象名=new 类名();</td></tr><tr><td>private关键字</td><td>私有访问权限，类内访问</td><td></td></tr><tr><td>default关键字</td><td>默认访问权限，包内访问</td><td></td></tr><tr><td>protected关键字</td><td>受保护访问权限，本包和不同包的子类访问</td><td></td></tr><tr><td>public关键字</td><td>公共访问权限，全局范围</td><td></td></tr><tr><td>this关键字</td><td>成员变量和局部变量发生重名问题<br/>一个构造方法中使用“this(…)”调用其他构造方法</td><td>调用语句必须位于第一行，且只能出现一次 <br/>不能在类中使用this互相调用</td></tr><tr><td>static关键字</td><td>静态属性，又称全局属性，可以使用类名直接访问<br/>实现不创建对象的情况下，通过类名直接调用方法</td><td>静态方法只能访问静态成员<br/>this 关键字不能用于引用类的静态成员<br/>静态代码块只执行一次，首先执行</td></tr><tr><td>extends关键字</td><td>声明一个类继承另一个类</td><td></td></tr><tr><td>super关键字</td><td>子类访问父类成员</td><td>父类的非私有方法、非私有属性和构造方法</td></tr><tr><td>final关键字</td><td>不被子类重写</td><td>变量使用public static final声明，为全局常量</td></tr><tr><td>abstract关键字</td><td>抽象类和抽象方法</td><td></td></tr><tr><td>interface关键字</td><td>接口声明</td><td></td></tr><tr><td>implements关键字</td><td>接口实现类的定义</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;编程基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#编程基础&quot;&gt;&lt;/a&gt; 编程基础&lt;/h1&gt;
&lt;h2 id=&quot;基本语法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本语法&quot;&gt;&lt;/a&gt; 基本语法&lt;/h2</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JAVA" scheme="https://zhang0224gz.github.io/tags/JAVA/"/>
    
  </entry>
  
  <entry>
    <title>模型</title>
    <link href="https://zhang0224gz.github.io/2022/09/13/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%A8%A1%E5%9E%8B/"/>
    <id>https://zhang0224gz.github.io/2022/09/13/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%A8%A1%E5%9E%8B/</id>
    <published>2022-09-13T14:41:44.711Z</published>
    <updated>2022-09-17T16:54:39.448Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多项式曲线拟合"><a class="markdownIt-Anchor" href="#多项式曲线拟合"></a> 多项式曲线拟合</h1><p><a href="https://zhuanlan.zhihu.com/p/53056358">多项式曲线拟合 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/daunxx/article/details/51588262">(32条消息) 多项式曲线拟合（Polynomial Curve Fitting）_Duanxx的博客-CSDN博客_多项式曲线拟合算法</a></p><p><a href="https://blog.csdn.net/weixin_46211269/article/details/126446435">(32条消息) 2021数学建模国赛B题复盘详细解析_川川菜鸟的博客-CSDN博客</a></p><ul><li><strong>数学表达式</strong>：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>W</mi><mo>)</mo><mo>=</mo><msub><mi>w</mi><mrow><mn>0</mn></mrow></msub><mo>+</mo><msub><mi>w</mi><mrow><mn>1</mn></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mrow><mn>2</mn></mrow></msub><msup><mi>x</mi><mrow><mn>2</mn></mrow></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>w</mi><mrow><mi>M</mi></mrow></msub><msup><mi>x</mi><mrow><mi>M</mi></mrow></msup><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>M</mi></mrow></msubsup><msub><mi>w</mi><mrow><mi>j</mi></mrow></msub><msup><mi>x</mi><mrow><mi>j</mi></mrow></msup></mrow><annotation encoding="application/x-tex">y(x,W)=w_{0}+w_{1}x+w_{2}x^{2}+...+w_{M}x^{M}=\sum_{j=0}^{M}w_{j}x^{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8283360000000006em;"></span><span class="strut bottom" style="height:3.2421130000000007em;vertical-align:-1.4137769999999998em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mop op-limits"><span class="vlist"><span style="top:1.1776689999999999em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span><span style="top:-0.000005000000000254801em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000005em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:-0.41300000000000003em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span>是多项式的阶数（最高次数），<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mn>0</mn></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>w</mi><mrow><mi>M</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{0},...,w_{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mpunct">,</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.02691em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>是多项式的系数，记作<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">W</span></span></span></span>。</p><p>虽然多项式函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>(</mo><mi>x</mi><mo separator="true">,</mo><mi>W</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">y(x,W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>是关于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">x</span></span></span></span>非线性函数，但是却是关于多项式系数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">W</span></span></span></span>的线性函数。</p><ul><li>样本的数目为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">N</span></span></span></span>，对于每一个样本<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>，其对应的输出为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>t</mi><mrow><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>，用平方误差和（均方误差）作为<strong>损失函数来对拟合出的多项式进行评估</strong>：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>(</mo><mi>w</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>N</mi></mrow></msubsup><mo>{</mo><mi>y</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>n</mi></mrow></msub><mo separator="true">,</mo><mi>w</mi><mo>)</mo><mo>−</mo><msub><mi>t</mi><mrow><mi>n</mi></mrow></msub><msup><mo>}</mo><mrow><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">E(w)=\frac{1}{2}\sum_{n=1}^{N}\lbrace y(x_{n},w)-t_{n} \rbrace^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8283360000000002em;"></span><span class="strut bottom" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1671129999999998em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">{</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose"><span class="mclose">}</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></p><p>这里在损失函数前面加入一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.845108em;"></span><span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span>，只是为了后面的推导方便，其并不影响最终的结果。</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913232834358.png" alt="image-20220913232834358" /></p><ul><li>过拟合和欠拟合都不能代表目标函数，且对新数据不具备良好的泛化能力。解决方式一，可以通过增大数据规模有效的减轻模型的过拟合问题。解决方式二，通过正则化实现，就是为误差函数增加一个惩罚项使多项式系数被有效的控制。均方误差函数修改为：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mrow><mi>E</mi></mrow><mo>~</mo></mover><mo>(</mo><mi>w</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>N</mi></mrow></msubsup><mo>{</mo><mi>y</mi><mo>(</mo><msub><mi>x</mi><mrow><mi>n</mi></mrow></msub><mo separator="true">,</mo><mi>w</mi><mo>)</mo><mo>−</mo><msub><mi>t</mi><mrow><mi>n</mi></mrow></msub><msup><mo>}</mo><mrow><mn>2</mn></mrow></msup><mo>+</mo><mfrac><mrow><mi>λ</mi></mrow><mrow><mn>2</mn></mrow></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mrow><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\tilde{E}(w)=\frac{1}{2}\sum_{n=1}^{N}\lbrace y(x_{n},w)-t_{n} \rbrace^{2}+\frac{\lambda}{2}||W||^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.8283360000000002em;"></span><span class="strut bottom" style="height:3.0954490000000003em;vertical-align:-1.267113em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord accent"><span class="vlist"><span style="top:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle cramped"><span class="mord mathit" style="margin-right:0.05764em;">E</span></span></span><span style="top:-0.60233em;margin-left:0.16668em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="accent-body"><span>~</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mop op-limits"><span class="vlist"><span style="top:1.1671129999999998em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span><span style="top:-0.000005000000000143778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span><span class="op-symbol large-op mop">∑</span></span></span><span style="top:-1.2500050000000003em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">N</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">{</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mpunct">,</span><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mbin">−</span><span class="mord"><span class="mord mathit">t</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mclose"><span class="mclose">}</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathrm">2</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathit">λ</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mathrm">∣</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathrm">∣</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>W</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mrow><mn>2</mn></mrow></msup><mo>=</mo><msub><mi>W</mi><mrow><mi>T</mi></mrow></msub><mi>W</mi><mo>=</mo><msubsup><mi>w</mi><mrow><mn>0</mn></mrow><mrow><mn>2</mn></mrow></msubsup><mo>+</mo><msubsup><mi>w</mi><mrow><mn>1</mn></mrow><mrow><mn>2</mn></mrow></msubsup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msubsup><mi>w</mi><mrow><mi>M</mi></mrow><mrow><mn>2</mn></mrow></msubsup></mrow><annotation encoding="application/x-tex">||W||^{2}=W_{T}W=w_{0}^{2}+w_{1}^{2}+...+w_{M}^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.089439em;vertical-align:-0.275331em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">∣</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mord mathrm">∣</span><span class="mord"><span class="mord mathrm">∣</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.13889em;">T</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.24810799999999997em;margin-left:-0.02691em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.24810799999999997em;margin-left:-0.02691em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">1</span></span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">+</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mord mathrm">.</span><span class="mbin">+</span><span class="mord"><span class="mord mathit" style="margin-right:0.02691em;">w</span><span class="vlist"><span style="top:0.275331em;margin-left:-0.02691em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>，这种二次正则项的应用也叫做山脊回归</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913234357148.png" alt="image-20220913234357148" /></p><h1 id="相关性分析"><a class="markdownIt-Anchor" href="#相关性分析"></a> 相关性分析</h1><p>相关性分析是指对两个或多个具备相关性的变量元素进行分析，从而衡量两个变量因素的相关密切程度。相关性的元素之间需要存在一定的联系或者概率才可以进行相关性分析。</p><p><a href="https://zhuanlan.zhihu.com/p/136771737">数据特征分析·相关性分析 - 知乎 (zhihu.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;多项式曲线拟合&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#多项式曲线拟合&quot;&gt;&lt;/a&gt; 多项式曲线拟合&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/53056358&quot;&gt;多项式曲线拟合 -</summary>
      
    
    
    
    <category term="数学建模" scheme="https://zhang0224gz.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
  </entry>
  
  <entry>
    <title>第三章 网际协议IP</title>
    <link href="https://zhang0224gz.github.io/2022/09/13/%E7%AC%94%E8%AE%B0/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%903/"/>
    <id>https://zhang0224gz.github.io/2022/09/13/%E7%AC%94%E8%AE%B0/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%903/</id>
    <published>2022-09-13T11:00:14.171Z</published>
    <updated>2022-09-13T12:33:08.946Z</updated>
    
    <content type="html"><![CDATA[<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913191551069.png" alt="image-20220913191551069" style="zoom:67%;" /><p>TFTP+UDP（可靠传输）：路由器和交换机的配置上</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913190220118.png" alt="image-20220913190220118" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913191705769.png" alt="image-20220913191705769" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913191908523.png" alt="image-20220913191908523" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913192009557.png" alt="image-20220913192009557" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913192103171.png" alt="image-20220913192103171" /></p><h1 id="特殊ip地址"><a class="markdownIt-Anchor" href="#特殊ip地址"></a> 特殊IP地址</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913192515777.png" alt="image-20220913192515777" /></p><p>不支持广播的协议：NBMA(Non Broadcasting Multiple Access)和Frame Relay</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913192628727.png" alt="image-20220913192628727" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913192809985.png" alt="image-20220913192809985" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913193025633.png" alt="image-20220913193025633" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913193119740.png" alt="image-20220913193119740" /></p><h1 id="子网掩码"><a class="markdownIt-Anchor" href="#子网掩码"></a> 子网掩码</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913193241043.png" alt="image-20220913193241043" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913193424621.png" alt="image-20220913193424621" /></p><h1 id="ip数据报的报文格式"><a class="markdownIt-Anchor" href="#ip数据报的报文格式"></a> IP数据报的报文格式</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913193548756.png" alt="image-20220913193548756" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913194440907.png" alt="image-20220913194440907" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913194710310.png" alt="image-20220913194710310" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913194936815.png" alt="image-20220913194936815" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913195051991.png" alt="image-20220913195051991" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913195156720.png" alt="image-20220913195156720" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913195242001.png" alt="image-20220913195242001" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913195331032.png" alt="image-20220913195331032" /></p><h1 id="ip数据报分片"><a class="markdownIt-Anchor" href="#ip数据报分片"></a> IP数据报分片</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913195555659.png" alt="image-20220913195555659" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913202930760.png" alt="image-20220913202930760" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913200023868.png" alt="image-20220913200023868" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913200155076.png" alt="image-20220913200155076" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913200300966.png" alt="image-20220913200300966" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913200434740.png" alt="image-20220913200434740" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913200534002.png" alt="image-20220913200534002" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913200908239.png" alt="image-20220913200908239" /></p><h1 id="ip数据报校验"><a class="markdownIt-Anchor" href="#ip数据报校验"></a> IP数据报校验</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913201053536.png" alt="image-20220913201053536" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913201143233.png" alt="image-20220913201143233" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913201358433.png" alt="image-20220913201358433" /></p><h1 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913201539895.png" alt="image-20220913201539895" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913202139025.png" alt="image-20220913202139025" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913202306688.png" alt="image-20220913202306688" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913202339203.png" alt="image-20220913202339203" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220913191551069.png&quot; alt=&quot;image-20220913191551069&quot; style=&quot;zoom:67%;&quot; /</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="协议分析" scheme="https://zhang0224gz.github.io/tags/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>补充知识：《信号与系统》第四章</title>
    <link href="https://zhang0224gz.github.io/2022/09/11/%E7%AC%94%E8%AE%B0/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/"/>
    <id>https://zhang0224gz.github.io/2022/09/11/%E7%AC%94%E8%AE%B0/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/%E8%A1%A5%E5%85%85%E7%9F%A5%E8%AF%86/</id>
    <published>2022-09-11T06:22:39.544Z</published>
    <updated>2022-10-07T10:39:05.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a class="markdownIt-Anchor" href="#引言"></a> 引言</h1><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001142352445.png" alt="image-20221001142352445" style="zoom:80%;" /><h2 id="时域分析连续信号"><a class="markdownIt-Anchor" href="#时域分析连续信号"></a> 时域分析（连续信号）</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001142709864.png" alt="image-20221001142709864" /></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>∗</mo><mi>δ</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mrow><mi mathvariant="normal">∞</mi></mrow></msubsup><mi>f</mi><mo>(</mo><mi>τ</mi><mo>)</mo><mi>δ</mi><mo>(</mo><mi>t</mi><mo>−</mo><mi>τ</mi><mo>)</mo><mi>d</mi><mi>τ</mi></mrow><annotation encoding="application/x-tex">f(t)=f(t)*\delta(t)=\int_{-\infty}^{\infty}f(\tau)\delta(t-\tau)d\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.805em;"></span><span class="strut bottom" style="height:1.219451em;vertical-align:-0.414451em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mbin">∗</span><span class="mord mathit" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mop"><span class="op-symbol small-op mop" style="margin-right:0.19445em;top:-0.0005599999999999772em;">∫</span><span class="vlist"><span style="top:0.35612em;margin-left:-0.19445em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord">−</span><span class="mord mathrm">∞</span></span></span></span><span style="top:-0.41900000000000004em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">∞</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathit" style="margin-right:0.03785em;">δ</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathit">d</span><span class="mord mathit" style="margin-right:0.1132em;">τ</span></span></span></span></p><p>​基本信号求出基本响应。任意信号可以分解为基本信号的线性组合（求和式）：连续-&gt;卷积积分，所以知道分解就可以求出复杂输入信号的响应。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001145109238.png" alt="image-20221001145109238" style="zoom:50%;" /><p>时域分析的要点：以冲激函数为基本信号，任意输入信号可分解为一系列冲击函数；而</p>y_{zs}(t)=h(t)*f(t)\qquad(卷积)<h2 id="频域分析"><a class="markdownIt-Anchor" href="#频域分析"></a> 频域分析</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001145653880.png" alt="image-20221001145653880" /></p><p>系统分析的独立变量是频率，分析是在频率空间进行的，故称为频率域分析，简称<strong>频域分析（傅里叶分析）</strong>。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911200849193.png" alt="image-20220911200849193" style="zoom:67%;" /><p>​频域分析法要点<strong>以正弦信号和虚指数信号为基本信号</strong>，将任意输入信号分解为一系列不同频率的正弦信号或虚指数信号之和，再利用LTI性质求出系统的响应。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001145818018.png" alt="image-20221001145818018" style="zoom: 50%;" /><h1 id="信号分解为正交函数"><a class="markdownIt-Anchor" href="#信号分解为正交函数"></a> 信号分解为正交函数</h1><p><strong>信号怎样分解最有效？信号分解为正交函数</strong></p><p>信号 -&gt; 矢量</p><ul><li>信号分解 -&gt; 矢量分解 -&gt; 矢量正交 -&gt; 信号正交</li><li>信号 -&gt; 正交集/分解成正交信号的组合</li></ul><h2 id="矢量的正交分解"><a class="markdownIt-Anchor" href="#矢量的正交分解"></a> 矢量的正交分解</h2><ul><li><p>矢量正交：2个矢量的点积/内积为0</p></li><li><p>正交矢量集：n对正交矢量的集合</p></li><li><p>非正交矢量的近似表示及误差 -&gt; 误差最小<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>θ</mi><mrow><msub><mi>V</mi><mrow><mi>e</mi></mrow></msub></mrow></msub><mo>=</mo><mn>9</mn><msup><mn>0</mn><mrow><mi>o</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\theta_{V_{e}}=90^{o}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.94944em;vertical-align:-0.255em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">θ</span><span class="vlist"><span style="top:0.15000000000000002em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.22222em;">V</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.22222em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord scriptscriptstyle cramped"><span class="mord mathit">e</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">9</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit">o</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001150350703.png" alt="image-20221001150350703" />\stackrel{\rightharpoonup}{V_{e}}\stackrel{\Delta}{=}\stackrel{\rightharpoonup}{V_{1}}-c_{12}\stackrel{\rightharpoonup}{V_{2}}\\用与V_{2}成比例的矢量c_{12}\stackrel{\rightharpoonup}{V_{2}}近似表示\stackrel{\rightharpoonup}{V_{1}}\\|c_{12}\stackrel{\rightharpoonup}{V_{2}}|=|\stackrel{\rightharpoonup}{V_{1}}|\cos\theta\\c_{12}=\frac{|\stackrel{\rightharpoonup}{V_{1}}|\cos\theta}{|\stackrel{\rightharpoonup}{V_{2}}|}={|\stackrel{\rightharpoonup}{V_{1}}||\stackrel{\rightharpoonup}{V_{2}}|\cos\theta}{|\stackrel{\rightharpoonup}{V_{2}}||\stackrel{\rightharpoonup}{V_{2}}|}=\frac{\stackrel{\rightharpoonup}{V_{1}}\cdot\stackrel{\rightharpoonup}{V_{2}}}{\stackrel{\rightharpoonup}{V_{2}}\cdot\stackrel{\rightharpoonup}{V_{2}}}\\推广:c_{1r}=\frac{\stackrel{\rightharpoonup}{V_{1}}\cdot\stackrel{\rightharpoonup}{V_{r}}}{\stackrel{\rightharpoonup}{V_{r}}\cdot\stackrel{\rightharpoonup}{V_{r}}}\qquad\stackrel{\rightharpoonup}{V_{r}}是分量\\正交时，\stackrel{\rightharpoonup}{V_{2}}无法表示\stackrel{\rightharpoonup}{V_{1}}，c_{12}=0</p></li><li><p>矢量正交分解：</p></li></ul><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001150737398.png" alt="" /></p><p>-&gt; 推广到n维空间</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001150925530.png" alt="image-20221001150925530" /></p><p><font color="red">思路</font>：将矢量空间正交分解的概念推广到信号空间——在信号空间找到<strong>若干个相互正交的信号作为基本信号</strong>，使得信号空间中任意信号均可表示成它们的线性组合。</p><h2 id="信号的正交分解"><a class="markdownIt-Anchor" href="#信号的正交分解"></a> 信号的正交分解</h2><p><strong>信号空间里怎样构建信号分解？</strong></p><ul><li>信号正交</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911211511055.png" style="zoom:33%;" /><ul><li>正交函数集</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911212048453.png" alt="image-20220911212048453" style="zoom: 33%;" /><ul><li>标准正交函数集：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>K</mi><mrow><mi>i</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">K_{i}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.07153em;">K</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.07153em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">1</span></span></span></span></li><li>完备正交函数集(全部找到又不多找)</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911212204307.png" alt="image-20220911212204307" style="zoom:33%;" /><ul><li><p>典型例子</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911213350683.png" alt="image-20220911213350683" style="zoom:33%;" /></li></ul><h3 id="delta信号的正交分解"><a class="markdownIt-Anchor" href="#delta信号的正交分解"></a> <strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>信号的正交分解</strong></h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215221402.png" alt="image-20220911215221402" style="zoom:50%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001151737883.png" alt="image-20221001151737883" /></p><h3 id="delta广义傅里叶系数"><a class="markdownIt-Anchor" href="#delta广义傅里叶系数"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>广义傅里叶系数</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215403170.png" alt="image-20220911215403170" style="zoom:50%;" /><h2 id="帕斯瓦尔定理"><a class="markdownIt-Anchor" href="#帕斯瓦尔定理"></a> 帕斯瓦尔定理</h2><p>例子：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>是电压，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>加载在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">1\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mord mathrm">Ω</span></span></span></span>的电阻上产生的瞬时功率的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>f</mi><mrow><mn>2</mn></mrow></msup><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f^{2}(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8141079999999999em;"></span><span class="strut bottom" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>：求积分 -&gt; 能量 = 分量和（能量守恒）</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215615624.png" alt="image-20220911215615624" style="zoom:50%;" /><ul><li>详述：<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911215801393.png" alt="image-20220911215801393" style="zoom: 33%;" /></li></ul><h1 id="周期信号傅里叶级数"><a class="markdownIt-Anchor" href="#周期信号傅里叶级数"></a> 周期信号傅里叶级数</h1><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>信号</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>φ</mi><mrow><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\varphi_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">φ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>完备正交函数集</p><h2 id="三角形式的傅里叶级数"><a class="markdownIt-Anchor" href="#三角形式的傅里叶级数"></a> 三角形式的傅里叶级数</h2>f(t)=\sum_{i=1}^{\infty}C_{i}\varphi_{i}(t)\qquad\qquad广义傅里叶展开式\\C_{i}=\frac{\int_{t_{2}}^{t_{1}}f(t)\varphi_{i}(t)dt}{\int_{t_{2}}^{t_{1}}\varphi_{i}(t)\varphi_{i}^{*}(t)dt}\qquad\qquad广义傅里叶系数<p>推广具体，令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>φ</mi><mrow><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\varphi_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">φ</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span>为三角函数集</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001154528732.png" alt="image-20221001154528732" style="zoom: 50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001154612057.png" alt="image-20221001154612057" style="zoom: 50%;" /><h3 id="狄里赫利dirichlet条件"><a class="markdownIt-Anchor" href="#狄里赫利dirichlet条件"></a> 狄里赫利(Dirichlet)条件</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001155223271.png" alt="image-20221001155223271" style="zoom: 33%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001155238503.png" alt="image-20221001155238503" style="zoom:33%;" /><p>间断点为第一类间断点：一个信号在这点间断，但左右导数存在</p><h3 id="余弦形式的傅里叶级数"><a class="markdownIt-Anchor" href="#余弦形式的傅里叶级数"></a> 余弦形式的傅里叶级数</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001155710589.png" alt="image-20221001155710589" style="zoom: 50%;" /><h4 id="例题"><a class="markdownIt-Anchor" href="#例题"></a> 例题</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160013251.png" alt="image-20221001160013251"  /><p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>是奇函数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mrow><mi>n</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_{n}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.64444em;"></span><span class="strut bottom" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">n</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord mathrm">0</span></span></span></span></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160115260.png" alt="image-20221001160115260" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160319854.png" alt="image-20221001160319854" /></p><h4 id="吉布斯现象"><a class="markdownIt-Anchor" href="#吉布斯现象"></a> 吉布斯现象</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001160346217.png" alt="image-20221001160346217" /></p><h3 id="波形的对称性和谐波特性"><a class="markdownIt-Anchor" href="#波形的对称性和谐波特性"></a> 波形的对称性和谐波特性</h3><h4 id="对称性"><a class="markdownIt-Anchor" href="#对称性"></a> 对称性</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165450041.png" alt="image-20221001165450041" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165430915.png" alt="image-20221001165430915" /></p><h4 id="谐波性"><a class="markdownIt-Anchor" href="#谐波性"></a> 谐波性</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165520416.png" alt="image-20221001165520416" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001165548907.png" alt="image-20221001165548907" /></p><h2 id="指数形式的傅里叶级数"><a class="markdownIt-Anchor" href="#指数形式的傅里叶级数"></a> 指数形式的傅里叶级数</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001173647416.png" alt="image-20221001173647416" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001172438805.png" alt="image-20221001172438805" /></p><p>因为n=0时，为\frac{A_{0}}{2}；n为(-\infty,-1)和(1,+\infty)正好构成(-\infty,+\infty)，所以可以合在一起</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001172519381.png" alt="image-20221001172519381" /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001172858648.png" alt="image-20221001172858648" style="zoom: 50%;" /><h4 id="例题-2"><a class="markdownIt-Anchor" href="#例题-2"></a> 例题</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001173239425.png" alt="image-20221001173239425" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001174203167.png" alt="image-20221001174203167" /></p><h2 id="傅里叶系数之间的关系"><a class="markdownIt-Anchor" href="#傅里叶系数之间的关系"></a> 傅里叶系数之间的关系</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001180513079.png" alt="image-20221001180513079" style="zoom: 50%;" />$$2|F_{n}|=A_{n}$$<h1 id="周期信号的频谱"><a class="markdownIt-Anchor" href="#周期信号的频谱"></a> 周期信号的频谱</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211253730.png" alt="image-20221001211253730" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211358246.png" alt="image-20221001211358246" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211416406.png" alt="image-20221001211416406" /></p><h2 id="例题1"><a class="markdownIt-Anchor" href="#例题1"></a> 例题1</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211457037.png" alt="image-20221001211457037" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211609782.png" alt="image-20221001211609782" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221001211525552.png" alt="image-20221001211525552" /></p><h2 id="例题2"><a class="markdownIt-Anchor" href="#例题2"></a> 例题2</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002102758736.png" alt="image-20221002102758736" style="zoom: 67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002102840282.png" alt="image-20221002102840282" style="zoom: 67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002102943627.png" alt="image-20221002102943627" style="zoom:67%;" /><h2 id="频谱的特点"><a class="markdownIt-Anchor" href="#频谱的特点"></a> 频谱的特点</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002110156885.png" alt="image-20221002110156885" style="zoom: 50%;" />$$\textcolor{red}{因为Sa(x)=\frac{sinx}{x}，所以F_{n}=\frac{\tau}{T}Sa(\frac{n\Omega\tau}{2})}$$<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002110950896.png" alt="image-20221002110950896" style="zoom:50%;" /><h3 id="频谱的特点-2"><a class="markdownIt-Anchor" href="#频谱的特点-2"></a> 频谱的特点</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002111050215.png" alt="image-20221002111050215" /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002113935706.png" alt="image-20221002113935706" style="zoom:50%;" /><h3 id="tau和t变化关系"><a class="markdownIt-Anchor" href="#tau和t变化关系"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.1132em;">τ</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">T</span></span></span></span>变化关系</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002111338972.png" alt="image-20221002111338972" style="zoom:50%;" /><p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">T</span></span></span></span>不变，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.43056em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.1132em;">τ</span></span></span></span>变小时，周期不变，脉冲宽度变窄。幅度<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>τ</mi></mrow><mrow><mi>T</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{\tau}{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.695392em;"></span><span class="strut bottom" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.1132em;">τ</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span>下降；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Ω</span></span></span></span>不变；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>2</mn><mi>m</mi><mi>π</mi></mrow><mrow><mi>τ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{2m\pi}{\tau}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.845108em;"></span><span class="strut bottom" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.1132em;">τ</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span><span class="mord mathit">m</span><span class="mord mathit" style="margin-right:0.03588em;">π</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span>零点增大导致零点间远移，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>T</mi></mrow><mrow><mi>τ</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{T}{\tau}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.872331em;"></span><span class="strut bottom" style="height:1.217331em;vertical-align:-0.345em;"></span><span class="base textstyle uncramped"><span class="mord reset-textstyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.345em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.1132em;">τ</span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.394em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">T</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span>两零点间谱线数增多。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002111402152.png" alt="image-20221002111402152" style="zoom:50%;" /><p><font color="red">傅里叶级数向傅里叶变换的节点，非周期信号周期为1，下一周期在无穷远处。</font></p><h3 id="收敛性分析"><a class="markdownIt-Anchor" href="#收敛性分析"></a> 收敛性分析</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002113612829.png" alt="image-20221002113612829" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002113639399.png" alt="image-20221002113639399" style="zoom:50%;" /><h3 id="平均功率parseval等式"><a class="markdownIt-Anchor" href="#平均功率parseval等式"></a> 平均功率——Parseval等式</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002140515705.png" alt="image-20221002140515705" style="zoom:50%;" /><p>表明：对于周期信号，在时域中求得的信号功率与在频域中求得的信号功率相等。</p><h3 id="频带宽度"><a class="markdownIt-Anchor" href="#频带宽度"></a> 频带宽度</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002114502516.png" alt="image-20221002114502516" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002114522013.png" alt="image-20221002114522013" style="zoom:50%;" /><p>例题</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151518586.png" alt="image-20221002151518586" style="zoom:50%;" /><h1 id="非周期信号傅里叶变换"><a class="markdownIt-Anchor" href="#非周期信号傅里叶变换"></a> 非周期信号傅里叶变换</h1><h2 id="非周期信号的频谱"><a class="markdownIt-Anchor" href="#非周期信号的频谱"></a> 非周期信号的频谱</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151600985.png" alt="image-20221002151600985" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151632167.png" alt="image-20221002151632167" style="zoom:50%;" /><p>注意：虽然各频率分量的幅度趋近于无穷小，但无穷小量之间仍有相对大小差别，故引入频谱密度函数。</p><h2 id="频谱密度函数"><a class="markdownIt-Anchor" href="#频谱密度函数"></a> 频谱密度函数</h2><p>​<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002151801570.png" alt="image-20221002151801570" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002152154234.png" alt="image-20221002152154234" style="zoom:50%;" /></p><p>​<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002152239108.png" alt="image-20221002152239108" style="zoom: 33%;" /></p>\textcolor{red}{F_{n}频谱是实际频谱大小，F(j\omega)为非周期信号的频谱，将无穷小放大为无穷大倍，实际为频谱密度}<h2 id="傅里叶变换"><a class="markdownIt-Anchor" href="#傅里叶变换"></a> 傅里叶变换</h2><h3 id="傅里叶正变换ft-rightarrow-fjomega"><a class="markdownIt-Anchor" href="#傅里叶正变换ft-rightarrow-fjomega"></a> 傅里叶正变换<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>→</mo><mi>F</mi><mo>(</mo><mi>j</mi><mi>ω</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t) \rightarrow F(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">→</span><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002163527904.png" alt="image-20221002163527904" /></p>周期函数：F_{n}/A_{n}\sim\Omega\\非周期函数：|F(j\omega)|/\varphi(\omega)\sim\omega<h3 id="傅里叶反变换fjomegarightarrow-ft"><a class="markdownIt-Anchor" href="#傅里叶反变换fjomegarightarrow-ft"></a> 傅里叶反变换<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>j</mi><mi>ω</mi><mo>)</mo><mo>→</mo><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">F(j\omega)\rightarrow f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mrel">→</span><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span></h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164054057.png" alt="image-20221002164054057" /></p><h3 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164254793.png" alt="image-20221002164254793" /></p><h3 id="delta傅里叶变换对"><a class="markdownIt-Anchor" href="#delta傅里叶变换对"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>傅里叶变换对</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164345417.png" alt="image-20221002164345417" /></p><p>​<img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164444007.png" alt="image-20221002164444007"  /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164456092.png" alt="image-20221002164456092"  /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164216208.png" alt="image-20221002164216208" style="zoom: 67%;" /><h2 id="常用函数的傅里叶变换"><a class="markdownIt-Anchor" href="#常用函数的傅里叶变换"></a> 常用函数的傅里叶变换</h2><h3 id="单边指数函数"><a class="markdownIt-Anchor" href="#单边指数函数"></a> 单边指数函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164632973.png" alt="image-20221002164632973" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164701474.png" alt="image-20221002164701474" /></p><h3 id="双边指数函数"><a class="markdownIt-Anchor" href="#双边指数函数"></a> 双边指数函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164735610.png" alt="image-20221002164735610" /></p><h3 id="门函数矩形脉冲"><a class="markdownIt-Anchor" href="#门函数矩形脉冲"></a> 门函数（矩形脉冲）</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164812021.png" alt="image-20221002164812021" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164830519.png" alt="image-20221002164830519" /></p><h3 id="激冲函数"><a class="markdownIt-Anchor" href="#激冲函数"></a> 激冲函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164857492.png" alt="image-20221002164857492" /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002164923662.png" alt="image-20221002164923662" style="zoom: 50%;" /><h3 id="常数1"><a class="markdownIt-Anchor" href="#常数1"></a> 常数1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003103204963.png" alt="image-20221003103204963" style="zoom:50%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165004749.png" alt="image-20221002165004749" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165023247.png" alt="image-20221002165023247" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165042291.png" alt="image-20221002165042291" /></p><h3 id="符号函数"><a class="markdownIt-Anchor" href="#符号函数"></a> 符号函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165130771.png" alt="image-20221002165130771" /></p><h3 id="阶跃函数"><a class="markdownIt-Anchor" href="#阶跃函数"></a> 阶跃函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165151722.png" alt="image-20221002165151722" /></p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165212664.png" alt="image-20221002165212664" /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221002165233481.png" alt="image-20221002165233481" style="zoom:50%;" /><h1 id="傅里叶变换的性质1"><a class="markdownIt-Anchor" href="#傅里叶变换的性质1"></a> 傅里叶变换的性质1</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121128398.png" alt="image-20221003121128398" /></p><p><strong>意义</strong>：傅里叶变换具有唯一性。傅里叶变换的性质揭示了信号的时域特性和频域特性之间的内在联系。讨论傅里叶变换的性质，目的在于:了解时-频域特性的内在联系;利用性质方便求解<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>(</mo><mi>j</mi><mi>ω</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">F(j\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span>;了解在通信系统领域中的应用。</p><p><strong>说明</strong>😦 1)这些性质是建立在变化对的基础上;( 2）常见变换+性质可以解决较复杂的问题。</p><h2 id="线性性质"><a class="markdownIt-Anchor" href="#线性性质"></a> 线性性质</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121533897.png" alt="image-20221003121533897" style="zoom:50%;" /><h3 id="例1"><a class="markdownIt-Anchor" href="#例1"></a> 例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121638539.png" alt="image-20221003121638539" style="zoom:50%;" /><h3 id="例2"><a class="markdownIt-Anchor" href="#例2"></a> 例2</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121924720.png" alt="image-20221003121924720" /></p><h2 id="奇偶性"><a class="markdownIt-Anchor" href="#奇偶性"></a> 奇偶性</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121805935.png" alt="image-20221003121805935" style="zoom:50%;" /><h3 id="fx为实函数"><a class="markdownIt-Anchor" href="#fx为实函数"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span></span></span></span>为实函数</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003121957989.png" alt="image-20221003121957989" /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003130134540.png" alt="image-20221003130134540" style="zoom: 67%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122035776.png" alt="image-20221003122035776" /></p><h4 id="总结-2"><a class="markdownIt-Anchor" href="#总结-2"></a> 总结</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122325375.png" alt="image-20221003122325375" style="zoom:50%;" /><h3 id="fx为虚函数ftjgt"><a class="markdownIt-Anchor" href="#fx为虚函数ftjgt"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span></span></span></span>为虚函数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mo>=</mo><mi>j</mi><mi>g</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)=jg(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span></h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122053855.png" alt="image-20221003122053855" /></p><h2 id="对称性-2"><a class="markdownIt-Anchor" href="#对称性-2"></a> 对称性</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122458266.png" alt="image-20221003122458266" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122547264.png" alt="image-20221003122547264" /></p><h3 id="例1-2"><a class="markdownIt-Anchor" href="#例1-2"></a> 例1</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122712842.png" alt="image-20221003122712842" /></p><h3 id="例3"><a class="markdownIt-Anchor" href="#例3"></a> 例3</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122739364.png" alt="image-20221003122739364" /></p><h2 id="尺度变换特性"><a class="markdownIt-Anchor" href="#尺度变换特性"></a> 尺度变换特性</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122841087.png" alt="image-20221003122841087" /></p><h3 id="0a1时域扩展频带压缩"><a class="markdownIt-Anchor" href="#0a1时域扩展频带压缩"></a> 0&lt;a&lt;1时域扩展，频带压缩</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003122937891.png" alt="image-20221003122937891" /></p><p><strong>0&lt;a&lt;1，脉冲持续时间增加a倍，变化慢了，信号在频域的频带压缩a倍。高频分量减少，幅度上升a倍。</strong></p><h3 id="a1时域压缩频带扩展"><a class="markdownIt-Anchor" href="#a1时域压缩频带扩展"></a> a&gt;1时域压缩，频带扩展</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123226200.png" alt="image-20221003123226200" /></p><p><strong>a&gt;1，脉冲持续持续时间短，变化快了。信号在频域高频分量增加，频带展宽，各分量的幅度下降a倍。</strong></p><h2 id="delta时移特性"><a class="markdownIt-Anchor" href="#delta时移特性"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>时移特性</h2><p><font color="red">原函数延迟一个量或超前一个量的变换。非常重要！<strong>线代通信理论的基础</strong>。</font></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123403128.png" alt="image-20221003123403128" /></p><h3 id="例1-3"><a class="markdownIt-Anchor" href="#例1-3"></a> 例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123450036.png" alt="image-20221003123450036" style="zoom: 67%;" /><h3 id="例2-2"><a class="markdownIt-Anchor" href="#例2-2"></a> 例2</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123546865.png" alt="image-20221003123546865" /></p><h3 id="例3-2"><a class="markdownIt-Anchor" href="#例3-2"></a> 例3</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123605091.png" alt="image-20221003123605091" /></p><h2 id="delta频移特性"><a class="markdownIt-Anchor" href="#delta频移特性"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>频移特性</h2><p><font color="red">通信原理中，<strong>调制解调的基础</strong>。信号为什么能发出去？<strong>频谱搬移</strong></font></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003123847459.png" alt="image-20221003123847459" /></p><h3 id="例2背结果"><a class="markdownIt-Anchor" href="#例2背结果"></a> 例2（背结果）</h3><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003124109687.png" alt="image-20221003124109687" /></p><h3 id="例4"><a class="markdownIt-Anchor" href="#例4"></a> 例4</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221003124848336.png" alt="image-20221003124848336" style="zoom:50%;" /><p>说的一句话信号为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>，信号直接乘<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>ω</mi><mrow><mn>0</mn></mrow></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">cos\omega_{0}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">s</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">t</span></span></span></span>就相当于把它的频谱搬到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo><mi>c</mi><mi>o</mi><mi>s</mi><mo>(</mo><msub><mi>ω</mi><mrow><mn>0</mn></mrow></msub><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)cos(\omega_{0}t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">s</span><span class="mopen">(</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>上，双边谱调制发出去。</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>ω</mi><mrow><mn>0</mn></mrow></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">cos\omega_{0}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">s</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">t</span></span></span></span>为载波信号，相当于汽车，将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>t</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">f(t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">t</span><span class="mclose">)</span></span></span></span>载着运到一个地方去，已调信号发射出去（发到收音机）。</p><p>收音机收到后，要将信号解出来就需要解调。再乘<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mi>o</mi><mi>s</mi><msub><mi>ω</mi><mrow><mn>0</mn></mrow></msub><mi>t</mi></mrow><annotation encoding="application/x-tex">cos\omega_{0}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.61508em;"></span><span class="strut bottom" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord mathit">c</span><span class="mord mathit">o</span><span class="mord mathit">s</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.03588em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">0</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit">t</span></span></span></span>得到音频信号。</p><h2 id="总结-3"><a class="markdownIt-Anchor" href="#总结-3"></a> 总结</h2><p>1.线性：若f_{1}(t)\leftrightarrow F_{2}(j\omega),f_{2}(t)\leftrightarrow F_{2}(j\omega)，则af_{1}(t)+bf_{2}(t)\leftrightarrow aF_{1}(j\omega)+bF_{2}(j\omega)</p><p>2.奇偶性：若f(t)\leftrightarrow F(j\omega)，则f(-t)\leftrightarrow F(-j\omega)</p><p>3.对称性：若f(t)\leftrightarrow F(j\omega)，则F(jt)\leftrightarrow 2\pi f(-\omega)</p><p>4.尺度变换特征：若f(t)\leftrightarrow F(\omega)，则f(at)\leftrightarrow \frac{1}{|a|}F(j\frac{\omega}{a})，a为非零实数</p><p>5.时移特性：若f(t)\leftrightarrow F(j\omega)，则f(t\pm t_{0})\leftrightarrow e^{\pm ja\omega_{0}}F(j\omega)，t_{0}为实常数。\\若F(j\omega)=|F(j\omega)|e^{j\varphi(\omega)}，则f(t\pm t_{0})\leftrightarrow|F(j\omega)|·e^{j[\varphi(\omega)\pm\omega t_{0}]}</p><p>6.频移特性：若f(t)\leftrightarrow F(j\omega)，则e^{\textcolor{red}{\mp }j\omega_{0}t}f(t)\leftrightarrow F[j(\omega\textcolor{red}{\pm }\omega_{0})]，\omega_{0}为实常数。</p><h1 id="傅里叶变换的性质2"><a class="markdownIt-Anchor" href="#傅里叶变换的性质2"></a> 傅里叶变换的性质2</h1><h2 id="delta卷积定理"><a class="markdownIt-Anchor" href="#delta卷积定理"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>卷积定理</h2><img src="C:/Users/zhangguozhi/AppData/Roaming/Typora/typora-user-images/image-20221004164913587.png" alt="image-20221004164913587" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004165600826.png" alt="image-20221004165600826" style="zoom:50%;" /><h3 id="例1-4"><a class="markdownIt-Anchor" href="#例1-4"></a> 例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004165748615.png" alt="image-20221004165748615" style="zoom:50%;" /><h3 id="delta例2"><a class="markdownIt-Anchor" href="#delta例2"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>例2</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004170846860.png" alt="image-20221004170846860" style="zoom:50%;" /><p><font color="red">没听懂调频……4.22卷积定理</font></p><p>调频比调幅好，失真小。调频：频率随着要传出的信息变化。同步解调</p><h2 id="时域微积分特性"><a class="markdownIt-Anchor" href="#时域微积分特性"></a> 时域微积分特性</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185117186.png" alt="image-20221004185117186" style="zoom:50%;" /><h3 id="例1-5"><a class="markdownIt-Anchor" href="#例1-5"></a> 例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185209270.png" alt="image-20221004185209270" style="zoom:50%;" /><h3 id="推论1"><a class="markdownIt-Anchor" href="#推论1"></a> 推论1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185332465.png" alt="image-20221004185332465" style="zoom:50%;" /><h3 id="推论2"><a class="markdownIt-Anchor" href="#推论2"></a> 推论2</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185416193.png" alt="image-20221004185416193" style="zoom:50%;" /><h2 id="频域微积分性质"><a class="markdownIt-Anchor" href="#频域微积分性质"></a> 频域微积分性质</h2><p><strong>解决频域求得n阶导数对应时间函数和原函数关系问题</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185512894.png" alt="image-20221004185512894" style="zoom:50%;" /><h3 id="例2-3"><a class="markdownIt-Anchor" href="#例2-3"></a> 例2</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004185538386.png" alt="image-20221004185538386" style="zoom:50%;" /><h2 id="相关原理"><a class="markdownIt-Anchor" href="#相关原理"></a> 相关原理</h2><p>1.互相关函数\rightarrow f_{1}和f_{2}不相同</p><p>时域相关运算：R_{12}(\tau)=\int_{-\infty}^{+\infty}f_{1}(\tau)f_{2}(t-\tau)dt=f_{1}(t)*f_{2}(-\tau)\qquad时域的卷积=频域的乘法运算</p><p>若f_{1}(t)\leftrightarrow F_{1}(j\omega)，f_{2}(t)\leftrightarrow F_{2}(j\omega)</p><p>则F[R_{12}(\tau)]\leftrightarrow F_{1}(j\omega)F_{2}^{*}(j\omega)，F[R_{21}(\tau)]\leftrightarrow F_{1}^{*}(j\omega)F_{2}(j\omega)</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004191420810.png" alt="image-20221004191420810" style="zoom:50%;" /><p>所以R_{12}(\tau)\leftarrow F_{1}(j\omega)F_{2}^{*}(j\omega)</p><p>2.自相关函数\rightarrow f_{1}和f_{2}为相同的f</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mo>[</mo><mi>R</mi><mo>(</mo><mi>τ</mi><mo>)</mo><mo>]</mo><mo>=</mo><mi>F</mi><mo>(</mo><mi>j</mi><mi>ω</mi><mo>)</mo><msup><mi>F</mi><mrow><mo>∗</mo></mrow></msup><mo>(</mo><mi>j</mi><mi>ω</mi><mo>)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>F</mi><mo>(</mo><mi>j</mi><mi>ω</mi><mo>)</mo><msup><mi mathvariant="normal">∣</mi><mrow><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">F[R(\tau)]=F(j\omega)F^{*}(j\omega)=|F(j\omega)|^{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8641079999999999em;"></span><span class="strut bottom" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mopen">[</span><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mclose">]</span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">∗</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mrel">=</span><span class="mord mathrm">∣</span><span class="mord mathit" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05724em;">j</span><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathrm">∣</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></p><h1 id="能量谱和功率谱"><a class="markdownIt-Anchor" href="#能量谱和功率谱"></a> 能量谱和功率谱</h1><p><strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span> 在随机信号分析中很重要！</strong></p><h2 id="能量谱"><a class="markdownIt-Anchor" href="#能量谱"></a> 能量谱</h2><h3 id="信号能量"><a class="markdownIt-Anchor" href="#信号能量"></a> 信号能量</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004193259060.png" alt="image-20221004193259060" style="zoom:50%;" /><h3 id="delta帕斯瓦尔能量方程"><a class="markdownIt-Anchor" href="#delta帕斯瓦尔能量方程"></a> <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">Δ</span></span></span></span>帕斯瓦尔能量方程</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004193356821.png" alt="image-20221004193356821" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007175622856.png" alt="image-20221007175622856" style="zoom: 67%;" /><h3 id="能量密度谱eomega"><a class="markdownIt-Anchor" href="#能量密度谱eomega"></a> 能量密度谱<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>(</mo><mi>ω</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">E(\omega)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.03588em;">ω</span><span class="mclose">)</span></span></span></span></h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004193606756.png" alt="image-20221004193606756" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004195532002.png" alt="image-20221004195532002" style="zoom:50%;" />$$总结：\\&E=\int^{+\infty}_{-\infty}|f(t)|^{2}dt = \int^{+\infty}_{-\infty}|F(j\omega)|^{2}d\omega\qquad时域不好求可以通过频域求能量\\&R(\tau)\leftrightarrow|F(j\omega)|^{2}=E(\omega)$$<h3 id="例1-6"><a class="markdownIt-Anchor" href="#例1-6"></a> 例1</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201447232.png" alt="image-20221004201447232" style="zoom:50%;" /><h2 id="功率谱"><a class="markdownIt-Anchor" href="#功率谱"></a> 功率谱</h2><h3 id="信号功率"><a class="markdownIt-Anchor" href="#信号功率"></a> 信号功率</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201718253.png" alt="image-20221004201718253" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201814779.png" alt="image-20221004201814779" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004201855823.png" alt="image-20221004201855823" style="zoom:50%;" /><h3 id="功率密度谱"><a class="markdownIt-Anchor" href="#功率密度谱"></a> 功率密度谱</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202025610.png" style="zoom:50%;" /><h3 id="功率密度谱与自相关函数的关系"><a class="markdownIt-Anchor" href="#功率密度谱与自相关函数的关系"></a> 功率密度谱与自相关函数的关系</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202154688.png" alt="image-20221004202154688" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202232073.png" alt="image-20221004202232073" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180351425.png" alt="image-20221007180351425" style="zoom:67%;" /><h4 id="例1-7"><a class="markdownIt-Anchor" href="#例1-7"></a> 例1</h4><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180613295.png" alt="image-20221007180613295" style="zoom:67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180539851.png" alt="image-20221007180539851" style="zoom:67%;" /><h4 id="总结-4"><a class="markdownIt-Anchor" href="#总结-4"></a> 总结</h4><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202304032.png" alt="image-20221004202304032" /></p><h3 id="白噪声功率谱密度"><a class="markdownIt-Anchor" href="#白噪声功率谱密度"></a> 白噪声功率谱密度</h3><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202545862.png" alt="image-20221004202545862" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202509159.png" alt="image-20221004202509159" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202622138.png" alt="image-20221004202622138" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202648880.png" alt="image-20221004202648880" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221004202707832.png" alt="image-20221004202707832" style="zoom:50%;" /><h2 id="能量谱和功率谱的关系"><a class="markdownIt-Anchor" href="#能量谱和功率谱的关系"></a> 能量谱和功率谱的关系</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180738067.png" alt="image-20221007180738067" style="zoom:67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180909408.png" alt="image-20221007180909408" style="zoom: 67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007180948511.png" alt="image-20221007180948511" style="zoom: 67%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007181111580.png" alt="image-20221007181111580" /></p><h1 id="周期信号的傅里叶变换"><a class="markdownIt-Anchor" href="#周期信号的傅里叶变换"></a> 周期信号的傅里叶变换</h1><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221005172634170.png" alt="image-20221005172634170" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221005173237686.png" alt="image-20221005173237686" style="zoom:50%;" /><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007181341762.png" alt="image-20221007181341762" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007181406192.png" alt="image-20221007181406192" /></p><p>结论：1.周期信号可以求出傅里叶变换，2.是\delta函数：冲激序列</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221005173756760.png" alt="image-20221005173756760" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007164937335.png" alt="image-20221007164937335" style="zoom:50%;" /><h2 id="例1-8"><a class="markdownIt-Anchor" href="#例1-8"></a> 例1</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007172634617.png" alt="image-20221007172634617" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007172543799.png" alt="image-20221007172543799" style="zoom:50%;" /><p><strong>结论：\delta序列出来的还是一个\delta序列</strong></p><h2 id="例2-4"><a class="markdownIt-Anchor" href="#例2-4"></a> 例2</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007173027620.png" alt="image-20221007173027620" style="zoom:50%;" /><h2 id="级数和变换的关系"><a class="markdownIt-Anchor" href="#级数和变换的关系"></a> 级数和变换的关系</h2><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20221007173220040.png" alt="image-20221007173220040" style="zoom:50%;" /><h2 id="总结-5"><a class="markdownIt-Anchor" href="#总结-5"></a> 总结</h2><ul><li>公式1：周期信号展开成傅里叶级数从而求得系数，再通过系数由级数求出傅里叶变换</li><li>公式2：把一个周期信号理解成一个基本信号，将整个周期信号理解成一个基本信号和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.69444em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.03785em;">δ</span></span></span></span>序列的卷积。从而，根据时域的卷积等于频域的乘法运算。</li></ul><h1 id="总结-6"><a class="markdownIt-Anchor" href="#总结-6"></a> 总结</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;引言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#引言&quot;&gt;&lt;/a&gt; 引言&lt;/h1&gt;
&lt;img src=&quot;https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-2022100</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="通信原理" scheme="https://zhang0224gz.github.io/tags/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>第一章 绪论</title>
    <link href="https://zhang0224gz.github.io/2022/09/10/%E7%AC%94%E8%AE%B0/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/"/>
    <id>https://zhang0224gz.github.io/2022/09/10/%E7%AC%94%E8%AE%B0/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/%E7%AC%AC%E4%B8%80%E7%AB%A0%20%E7%BB%AA%E8%AE%BA/</id>
    <published>2022-09-10T14:27:24.699Z</published>
    <updated>2022-09-11T06:23:29.105Z</updated>
    
    <content type="html"><![CDATA[<ul><li>**通信（Communication）**按照一般理解就是传输信息，是发送者（人或机器）和接收者之间通过某种媒介进行的信息传递。</li><li>**电信（Telecommunication）**是利用电信号来传输信息的通信方式。</li><li>“通信”这术语一般是指“电信”。广义来讲，光通信也属于电信，因为光也是一种电磁波。</li></ul><h2 id="信息-消息与信号"><a class="markdownIt-Anchor" href="#信息-消息与信号"></a> <strong>信息、消息与信号</strong></h2><ul><li><p>**消息（Message）是指通信系统传输的对象，它是消息的载体。**例如：语音、音乐、活动图片、文字、符号、数据等。</p><ul><li>连续消息</li><li>离散消息</li></ul></li><li><p>**信息（Information）是消息中所包含的有效内容。**消息与信息的关系：消息是信息的物理表现形式，而信息是消息的内涵，例如：语音是天气预报的表现形式，而天气情况是语音的内涵。</p></li><li><p>**信号（Signal）是消息的传输载体。**在电信系统中，传输的是电信号。</p><ul><li>模拟信号（Analog signal）</li><li>数字信号（Digital signal）</li></ul></li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220910225450567.png" alt="image-20220910225450567" style="zoom: 67%;" /><h2 id="通信系统模型"><a class="markdownIt-Anchor" href="#通信系统模型"></a> 通信系统模型</h2><p><strong>通信的目的是传输信息。通信系统是完成通信过程中所需的电子设备和信道的总体</strong>，作用是将信息从信源发送到一个或多个目的地。</p><ul><li><p>通信系统一般模型</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220910230425795.png" alt="image-20220910230425795" style="zoom: 50%;" /><ul><li>**信息源（简称信源）**的作用是把各种消息转换成原始电信号。<ul><li>模拟信源</li><li>数字信源</li></ul></li><li><strong>发送设备</strong>的作用是产生适合于在信道中传输的信号</li><li><strong>信道</strong>是一种物理媒介，用来将来自发送设备的信号传送到接收端。噪声源干扰正常信号的传输。</li><li><strong>接收设备</strong>的功能是将信号放大和反变换（如：译码、解调等），其目的是从受到减损的接收信号中正确恢复原始电信号。</li><li><strong>信宿</strong>是传送消息的目的地，其目的是把原始电信号还原成相应的消息。</li></ul></li><li><p>模拟通信系统模型</p><p>模拟通信系统是利用模拟信号来传递信息的通信系统，包含两种变换。</p><ul><li>第一种变换：在发送端把连续消息变换成原始电信号（基带信号，基带的含义是基本频带 300Hz~3400Hz），在接收端进行相反的变换。这种变换、反变换由信源和信宿来完成。</li><li>第二种变换在模拟通信系统中常常需要进行：把基带信号变换成合适在信道中传输的信号，并在接收端进行反变换。这种变换、反变换由调制器和解调器完成，调制后的信号称为已调信号/带通信号（基本特征：携带有信息；其频谱通常具有带通形式）。</li></ul><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220910234048429.png" alt="image-20220910234048429" style="zoom:50%;" /></li><li><p>数字通信系统模型</p><p>数字通信系统模型是利用数字信号来传递信息的通信系统，涉及：编码/译码、调制/解调、加密/解密、同步</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911000447489.png" alt="image-20220911000447489" style="zoom:80%;" /><ul><li><p>**信源编码（Source Coding）**有两个基本功能：一是提高信息传输的有效性（减少码元数目）；二是完成模/数（A/D）转换（模拟信号 -&gt; 数字信号）。信息译码为逆过程。</p></li><li><p>**信道编码（Channel Coding）**的作用是进行差错控制；信道译码按逆规则解码发现错误和纠正错误，提高通信系统的可靠性（增强抗干扰能力）。</p></li><li><p>**加密（Encryption）<strong>和</strong>解密（Decryption）**为保证所传信息的安全。</p></li><li><p><strong>数字调制</strong>是把数字基带信号的频谱搬移到高频，形成合适在信道中传输的带通信号。</p><ul><li>调制：把信息寄托到载波上参数</li><li>解调：从已调信号中卸载信息</li></ul></li><li><p>**同步（Synchronization）**是时收发两端的信号在时间上保持步调一致，是保证数字通信系统有序、准确、可靠工作的前提条件。（时钟信号）</p><p><strong>数字通信特点：</strong></p><ul><li>抗干扰能力强，且噪声不积累</li><li>传输差错可控</li><li>便于处理、变换、存储</li><li>易于集成</li><li>易于加密处理</li></ul></li></ul></li></ul><h2 id="信息和信息度量"><a class="markdownIt-Anchor" href="#信息和信息度量"></a> 信息和信息度量</h2><p>通信的根本目的在于传输消息中所包含的信息。信息可以说是消息中不确定内容构成，可以利用“信息量”（对这种不确定的定量的描述）去衡量。</p><p>对接收者来说，只有消息中不确定的内容才构成信息，而且信息量的多少与接受者收到消息时感到惊讶程度有关。消息所表达的事件越不可能发生，越不可预测，信息量就越大。</p><p>根据概率论，消息出现的概率越小，则消息中包含的信息量就越大。</p><ul><li>假设P(x)表示消息发生的概率，I表示消息中所含信息量，规律可表示为：</li></ul>I = f[P(x)]\\I= \log_{a}\frac{1}{P(x)}=-\log_{a}P(x)\\P(x)越小，I越大；反之，I越小；且当P(x)=1时，I=0；P(x)=0时，I=\infty.<ul><li>信息量的单位和式中对数的底a有关。若a = 2，则信息量的单位为比特(bit，简记b)；若a = e，则信息量的单位为奈特(nat)；若a = 10，则信息量的单位为哈特莱(Hartley)。广泛使用的是比特：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo>=</mo><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mfrac><mrow><mn>1</mn></mrow><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mfrac><mo>=</mo><mo>−</mo><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo><mspace width="2em"></mspace><mo>(</mo><mi>b</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">I= \log_{2}\frac{1}{P(x)}=-\log_{2}P(x)\qquad(b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.32144em;"></span><span class="strut bottom" style="height:2.25744em;vertical-align:-0.936em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">I</span><span class="mrel">=</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span></span></span></span><span style="top:-0.2300000000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mrel">=</span><span class="mord">−</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathit">x</span><span class="mclose">)</span><span class="mord mspace qquad"></span><span class="mopen">(</span><span class="mord mathit">b</span><span class="mclose">)</span></span></span></span></span></p><p>​**在等概率出现的离散消息的度量情况。**传送二进制波形之一的信息量为1b。在工程应用中，习惯把一个二进制码元成为1b。</p><p>​综上，对于离散信源，M个波形等概率（P = 1/M）发送，且每个波形的出现是独立的，即信源是无记忆的，则**<font color=blue>传送M进制波形之一的信息量</font>**为：</p>I= \log_{2}\frac{1}{P}=\log_{2}\frac{1}{1/M}=\log_{2}M\qquad(b)\\I=\log_{2}2^{k}=k\qquad(b)<ul><li>**在非等概率的离散消息的度量情况。<strong>设离散信源是由M个符号组成的集合，其中每个符号x（i = 1，2，…，M）按一定规律P(x)出现，每个符号所含信息量的统计平均值，即</strong><font color=blue>平均信息量</font>**为：</li></ul>\begin{aligned}H(x)&=P(x_{1})[-\log_{2}P(x_{1})]+P(x_{2})[-\log_{2}P(x_{2})]+...+P(x_{M})[-\log_{2}P(x_{M})]\\&=-\sum_{i=1}^{M}P(x_{i})\log_{2}P(x_{i})\qquad (b/符号)\\由于&H同热力学中熵的形式相似，故通常称它为信息源的熵(Entropy)，其单位为b/符号。显然当\\P(x_{i})=&1/M(每个符号等概率独立出现)时，此时信源的熵有最大值\log_{2}M。\\\\&\qquad\qquad\qquad\qquad I_{总}=M*H(x)\qquad(b)\end{aligned}<h2 id="通信系统主要性能指标"><a class="markdownIt-Anchor" href="#通信系统主要性能指标"></a> 通信系统主要性能指标</h2><p>性能指标也称质量指标，通信系统的性能指标：有效性、可靠性、适应性、经济性、标准性、可维护性等。从研究信息传输的角度来说，有效性和可靠性是通信系统的主要性能指标。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911132556909.png" alt="image-20220911132556909" style="zoom: 67%;" /><h3 id="有效性"><a class="markdownIt-Anchor" href="#有效性"></a> 有效性</h3><p>有效性是指传输一定信息量所占用的频带宽度，即<strong>频带利用率</strong></p><ul><li><p><strong>对于模拟通信系统</strong>，传输同样的信源信号，所需的<font color=blue><strong>传输带宽</strong></font>越小，频带利用率越高，有效性越好。信号带宽与调制方式有关，调幅信号的有效性比调频的好。</p></li><li><p><strong>对于数字通信系统</strong>，其<font color=blue><strong>频带利用率</strong></font>定义为单位带宽（每赫）内的传输速率，即：</p>\eta = \frac{R_{B}}{B}\qquad(Baud/Hz)\\或\qquad\eta_{b}=\frac{R_{b}}{B}\qquad(b/(s·Hz))\\其中，R_{B}为码元传输速率，简称传码率。它被定义为单位时间（每秒）传输码元的数目，单位为波特(Baud)\\。因此，R_{B}又称为波特率。R_{b}为信息传输速率，简称传信率，又称比特率。它定义为单位时间内传输的平均信\\息量，单位为比特/秒（b/s）。B为带宽，\eta为频带利用率，即单位带宽（每赫）内的传输速率。\qquad\qquad<ul><li><p>设<strong>每个码元的长度</strong>为$T_{B}(s) $  ，则有：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mrow><mi>B</mi></mrow></msub><mo>=</mo><mfrac><mrow><mn>1</mn></mrow><mrow><msub><mi>T</mi><mrow><mi>B</mi></mrow></msub></mrow></mfrac><mspace width="2em"></mspace><mo>(</mo><mi>B</mi><mi>a</mi><mi>u</mi><mi>d</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">R_{B}= \frac{1}{T_{B}}\qquad(Baud)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.32144em;"></span><span class="strut bottom" style="height:2.1574400000000002em;vertical-align:-0.8360000000000001em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.00773em;">R</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.00773em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord reset-textstyle displaystyle textstyle uncramped"><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span><span class="mfrac"><span class="vlist"><span style="top:0.686em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle cramped"><span class="mord textstyle cramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span style="top:-0.22999999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped frac-line"></span></span><span style="top:-0.677em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle textstyle uncramped"><span class="mord textstyle uncramped"><span class="mord mathrm">1</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span><span class="mord mspace qquad"></span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="mord mathit">a</span><span class="mord mathit">u</span><span class="mord mathit">d</span><span class="mclose">)</span></span></span></span></span></p></li><li><p>因为一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.68333em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span> 进制码元携带<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mi>M</mi></mrow><annotation encoding="application/x-tex">\log_{2}M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.9388799999999999em;vertical-align:-0.24444em;"></span><span class="base textstyle uncramped"><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span> 比特信息量，所以<strong>码元速率和信息速率的关系</strong>：</p>R_{b}=R_{B}\log_{2}M\qquad(b/s)\\或 \qquad R_{B}=\frac{R_{b}}{\log_{2}M}\qquad(Baud)</li><li><p>若设每个二进制码元的持续时间为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi>b</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">b</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> ，则**<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi>B</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi>b</mi></mrow></msub></mrow><annotation encoding="application/x-tex">T_{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">b</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 的关系**：</p></li></ul></li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>T</mi><mrow><mi>B</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mrow><mi>b</mi></mrow></msub><mo>⋅</mo><msub><mi>log</mi><mrow><mn>2</mn></mrow></msub><mi>M</mi></mrow><annotation encoding="application/x-tex">T_{B}=T_{b}\cdot\log_{2}M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.9388799999999999em;vertical-align:-0.24444em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.05017em;">B</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">T</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">b</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mbin">⋅</span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="vlist"><span style="top:0.24444em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathrm">2</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mathit" style="margin-right:0.10903em;">M</span></span></span></span></span></p><h3 id="可靠性"><a class="markdownIt-Anchor" href="#可靠性"></a> 可靠性</h3><p>可靠性是指传输信息的准确程度。</p><ul><li><strong>模拟通信系统的可靠性</strong>通常用接收端输出信号与噪声功率比（S/N，<font color=blue><strong>信噪比</strong></font>）来度量，它反映了信号经传输后的“保真”程度和抗噪声能力。</li></ul><p>​S/N与调制方式有关，调频信号的S/N比调幅的高，即抗噪能力强；但调频信号所需的传输频带比调幅的宽。</p><ul><li><p><strong>数字通信系统的可靠性</strong>用<font color=blue><strong>差错概率</strong></font>来衡量。差错概率常用误码率和误信率表示：</p><ul><li>误码率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{e}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">e</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 是码元在传输过程中被传错的概率。</li></ul>P_{e}=\frac{错误码元数}{传输总码元数}<ul><li>误信率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>b</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">b</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> ，又称误比特率。</li></ul>P_{b}=\frac{错误比特数}{传输总比特数}</li></ul><p>显然，在二进制中有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mrow><mi>b</mi></mrow></msub><mo>=</mo><msub><mi>P</mi><mrow><mi>e</mi></mrow></msub></mrow><annotation encoding="application/x-tex">P_{b}=P_{e}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.68333em;"></span><span class="strut bottom" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">b</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:-0.13889em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">e</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span> 。</p><h2 id="通信系统分类和通信方式"><a class="markdownIt-Anchor" href="#通信系统分类和通信方式"></a> 通信系统分类和通信方式</h2><h3 id="通信系统分类"><a class="markdownIt-Anchor" href="#通信系统分类"></a> 通信系统分类</h3><ul><li>按通信业务分类，分为：电报通信系统、电话通信系统、数据通信系统、图像通信系统等。</li><li>按调制方式分类，分为：基带传输系统和带通传输系统。</li><li>按信号特征分类，分为：模拟通信系统和数字通信系统。</li><li>按传输媒质分类，分为：有线通信系统和无线通信系统。</li><li>按工作波段分类，分为：长波通信、中波通信、短波通信、远红外线通信等。</li><li>按信号复用方式分类，分为：频分复用、时分复用和码分复用。</li></ul><h3 id="通信方式"><a class="markdownIt-Anchor" href="#通信方式"></a> 通信方式</h3><ul><li>单工、半双工和全双工通信</li><li>并行传输和串行传输</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;**通信（Communication）**按照一般理解就是传输信息，是发送者（人或机器）和接收者之间通过某种媒介进行的信息传递。&lt;/li&gt;
&lt;li&gt;**电信（Telecommunication）**是利用电信号来传输信息的通信方式。&lt;/li&gt;
&lt;li&gt;“通信”这</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="通信原理" scheme="https://zhang0224gz.github.io/tags/%E9%80%9A%E4%BF%A1%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>第一章 以太网的构成</title>
    <link href="https://zhang0224gz.github.io/2022/09/08/%E7%AC%94%E8%AE%B0/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%901/"/>
    <id>https://zhang0224gz.github.io/2022/09/08/%E7%AC%94%E8%AE%B0/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%901/</id>
    <published>2022-09-08T14:26:54.013Z</published>
    <updated>2022-09-10T08:55:48.833Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908223727892.png" alt="image-20220908223727892" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908223813938.png" alt="image-20220908223813938" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908224219533.png" alt="image-20220908224219533" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908225146627.png" alt="image-20220908225146627" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908225229794.png" alt="image-20220908225229794" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908225429162.png" alt="image-20220908225429162" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908225511936.png" alt="image-20220908225511936" /></p><h1 id="mac地址的作用"><a class="markdownIt-Anchor" href="#mac地址的作用"></a> MAC地址的作用</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908225736310.png" alt="image-20220908225736310" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908225919482.png" alt="image-20220908225919482" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220910152819214.png" alt="image-20220910152819214" /></p><p>I/G比特位表示Individual/Group，当I/G位为0时，地址字段表示单个站地址（单播），为1时表示组地址，用来进行多播。</p><p>G/L比特位表示Global/Local，当G/L位为0时是全球管理，保证在全球没有相同的地址，当为1时是本地管理，这时用户可任意分配网络上的地址。</p><h1 id="mac广播地址的作用"><a class="markdownIt-Anchor" href="#mac广播地址的作用"></a> MAC广播地址的作用</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908230030861.png" alt="image-20220908230030861" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908230121471.png" alt="image-20220908230121471" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908230212906.png" alt="image-20220908230212906" /></p><h1 id="以太网的帧格式"><a class="markdownIt-Anchor" href="#以太网的帧格式"></a> ！以太网的帧格式</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908230259205.png" alt="image-20220908230259205" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908230455945.png" alt="image-20220908230455945" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908230720071.png" alt="image-20220908230720071" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908231021879.png" alt="image-20220908231021879" /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908231134747.png" alt="image-20220908231134747" style="zoom:80%;" /><h1 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h1><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908231929502.png" alt="image-20220908231929502" /></p><h1 id="icmp报头格式"><a class="markdownIt-Anchor" href="#icmp报头格式"></a> ICMP报头格式</h1><p>ICMP报文包含在IP数据报中，IP报头在ICMP报文的最前面。一个ICMP报文包括IP报头（至少20字节）、ICMP报头（至少八字节）和ICMP报文（属于ICMP报文的数据部分）。当IP报头中的协议字段值为1时，就说明这是一个ICMP报文。ICMP报头如下图所示。<br /><img src="https://img-blog.csdn.net/20170513005317177?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMTc4NDQ5NQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="ICMP报头格式" /></p><p><strong>各字段说明</strong></p><ul><li>类型：占一字节，标识ICMP报文的类型，目前已定义了14种，从类型值来看ICMP报文可以分为两大类。第一类是取值为1~127的差错报文，第2类是取值128以上的信息报文。</li><li>代码：占一字节，标识对应ICMP报文的代码。它与类型字段一起共同标识了ICMP报文的详细类型。</li><li>校验和：这是对包括ICMP报文数据部分在内的整个ICMP数据报的校验和，以检验报文在传输过程中是否出现了差错。其计算方法与在我们介绍IP报头中的校验和计算方法是一样的。</li><li>标识：占两字节，用于标识本ICMP进程，但仅适用于回显请求和应答ICMP报文，对于目标不可达ICMP报文和超时ICMP报文等，该字段的值为0。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908223727892.png&quot; alt=&quot;image-20220908223727892&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img s</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="协议分析" scheme="https://zhang0224gz.github.io/tags/%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>《计算机网络》——第一章 概述</title>
    <link href="https://zhang0224gz.github.io/2022/08/29/%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%9E%E8%AE%AD/"/>
    <id>https://zhang0224gz.github.io/2022/08/29/%E7%AC%94%E8%AE%B0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%9E%E8%AE%AD/</id>
    <published>2022-08-29T12:09:11.231Z</published>
    <updated>2022-09-11T13:32:57.976Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实训一阶段1基本网络通信"><a class="markdownIt-Anchor" href="#实训一阶段1基本网络通信"></a> 实训一阶段1：基本网络通信</h1><blockquote><p>要求：</p><p>开发一个聊天程序；</p><p>包含客户端和服务器端；</p><p>编程语言不限；</p><p>要能在两台PC上运行。</p></blockquote><h2 id="初级阶段1socket使用"><a class="markdownIt-Anchor" href="#初级阶段1socket使用"></a> 初级阶段1：socket使用</h2><p>在TCP中，客户端的实现流程：（1）创建客户端的socket对象   （2）建立与服务器之间的联系  （3）发送请求  （4）接收数据  （5）关闭连接</p><p>服务端的实现流程：（1）创建服务端的socket对象  （2）绑定服务端的地址 （3）设置监听器 （4）等待客户端的连接 （5）接收客户端的请求  （6）返回处理的结果到客户端</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222037215.png" alt="image-20220908222037215" /></p><p><strong>套接字(Socket)</strong>，就是对网络中不同主机上的应用进程之间进行双向通信的端点的抽象。一个套接字就是网络上进程通信的一端，提供了应用层进程利用网络协议交换数据的机制。从所处的地位来讲，套接字上联应用进程，下联网络协议栈，是应用程序通过网络协议进行通信的接口，是应用程序与网络协议栈进行交互的接口</p><p><strong>应用程序接口</strong>（英语：<strong>A</strong>pplication <strong>P</strong>rogramming <strong>I</strong>nterface，简称：<strong>API</strong>），又称为<strong>应用编程接口</strong>，就是<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6?fromModule=lemma_inlink">软件</a>系统不同组成部分衔接的约定。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">socket编程思路</span><br><span class="line">TCP服务端：</span><br><span class="line">1 创建套接字，绑定套接字到本地IP与端口</span><br><span class="line">   # socket.socket(socket.AF_INET,socket.SOCK_STREAM) , s.bind()</span><br><span class="line">2 开始监听连接                   #s.listen()</span><br><span class="line">3 进入循环，不断接受客户端的连接请求              #s.accept()</span><br><span class="line">4 然后接收传来的数据，并发送给对方数据         #s.recv() , s.sendall()</span><br><span class="line">5 传输完毕后，关闭套接字                     #s.close()</span><br><span class="line"></span><br><span class="line">TCP客户端:</span><br><span class="line">1 创建套接字，连接远端地址</span><br><span class="line">       # socket.socket(socket.AF_INET,socket.SOCK_STREAM) , s.connect()</span><br><span class="line">2 连接后发送数据和接收数据          # s.sendall(), s.recv()</span><br><span class="line">3 传输完毕后，关闭套接字          #s.close()</span><br></pre></td></tr></table></figure><blockquote><p><strong>subprocess 模块</strong>允许我们启动一个新进程，并连接到它们的输入/输出/错误管道，从而获取返回值。</p></blockquote><blockquote><p>Python3 网络编程</p><p>Python 提供了两个级别访问的网络服务。：</p><ul><li>低级别的网络服务支持基本的 Socket，它提供了标准的 BSD Sockets API，可以访问底层操作系统Socket接口的全部方法。</li><li>高级别的网络服务模块 SocketServer， 它提供了服务器中心类，可以简化网络服务器的开发。</li></ul><p>Socket又称&quot;套接字&quot;，应用程序通常通过&quot;套接字&quot;向网络发出请求或者应答网络请求，使主机间或者一台计算机上的进程间可以通讯。</p><p>网络中进程间如何通信，即利用三元组【ip地址，协议，端口】可以进行网络间通信了，那我们应该怎么实现了，因此，我们socket应运而生，它就是利用三元组解决网络通信的一个中间件工具</p><p>TCP建立连接时要传输三个数据包，俗称三次握手（Three-way Handshaking）。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Shake 1</span>] 套接字A：“你好，套接字B，我这里有数据要传送给你，建立连接吧。”</span><br><span class="line">[<span class="meta">Shake 2</span>] 套接字B：“好的，我这边已准备就绪。”</span><br><span class="line">[<span class="meta">Shake 3</span>] 套接字A：“谢谢你受理我的请求。</span><br></pre></td></tr></table></figure></blockquote><table><thead><tr><th>服务器端套接字</th><th></th></tr></thead><tbody><tr><td>s.bind()</td><td>绑定地址（host,port）到套接字， 在AF_INET下,以元组（host,port）的形式表示地址。</td></tr><tr><td>s.listen()</td><td>开始TCP监听。backlog指定在拒绝连接之前，操作系统可以挂起的最大连接数量。该值至少为1，大部分应用程序设为5就可以了。<br/>listen函数中backlog的含义是什么？完成队列的长度 (<a href="https://zhuanlan.zhihu.com/p/78879634">https://zhuanlan.zhihu.com/p/78879634</a>)</td></tr><tr><td>s.accept()</td><td>被动接受TCP客户端连接,(阻塞式)等待连接的到来</td></tr></tbody></table><table><thead><tr><th>客户端套接字</th><th></th></tr></thead><tbody><tr><td>s.connect()</td><td>主动初始化TCP服务器连接，。一般address的格式为元组（hostname,port），如果连接出错，返回socket.error错误。</td></tr></tbody></table><table><thead><tr><th>公共用途的套接字函数</th><th></th></tr></thead><tbody><tr><td>s.recv()</td><td>接收TCP数据，数据以字符串形式返回，bufsize指定要接收的最大数据量。flag提供有关消息的其他信息，通常可以忽略。</td></tr><tr><td>s.send()</td><td>发送TCP数据，将string中的数据发送到连接的套接字。返回值是要发送的字节数量，该数量可能小于string的字节大小。</td></tr><tr><td>s.close()</td><td>关闭套接字</td></tr></tbody></table><h3 id="代码01"><a class="markdownIt-Anchor" href="#代码01"></a> <strong>代码0.1</strong></h3><p><strong>作用：可以实现服务端和客户端简单交互，但仅限同一个局域网内，且一对一，只能发送一句话</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">错误类型：</span><br><span class="line">1.LookupError: unknown encoding: uft-8</span><br><span class="line">这个错误是记录错误类型的,第一次遇到LookupError ,这个是编码格式本来应该是utf-8 自己打字的时候打错了,打成uft-8 了 所以就出现了这个错误.</span><br><span class="line">2.AttributeError: &#x27;tuple&#x27; object has no attribute &#x27;send&#x27;</span><br><span class="line">错误原因： server.accept()的返回值是一对(conn, address)，其中conn是一个新的套接字对象，可用于在连接上发送和接收数据，地址是绑定到连接另一端的套接字的地址。</span><br><span class="line">解决方法：client,addr = server.accept()</span><br><span class="line">3.TimeoutError: [WinError 10060] 由于连接方在一段时间后没有正确答复或连接的主机没有反应，连接尝试失败。</span><br><span class="line">防火墙没开放该端口网上找到这个……经过24小时检验：socket仅限在局域网使用，所以……一个热点IP和学校内网一起玩……不可能，想的话买个服务器。所以要么开两个学校电脑，要么就在自己电脑上玩耍。</span><br><span class="line">host=&#x27;服务器的静态IP&#x27;（IPv4地址）</span><br><span class="line">host = socket.gethostbyname(socket.gethostname()) （土豆那缺儿，我们一直检验都连不起来原来它是IPv4网关……）</span><br><span class="line">4.</span><br><span class="line">这个是端口号未开放的原因，在防火墙里开放就行</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="comment">#客户端IP地址：192.168.55.43</span></span><br><span class="line"><span class="comment">#服务器端IP地址：192.168.120.209</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment">#host = socket.gethostname() #获取本地主机名</span></span><br><span class="line">host = <span class="string">&#x27;192.168.31.129&#x27;</span></span><br><span class="line">port = <span class="number">8800</span> <span class="comment">#设置端口</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line"><span class="comment">##第一步：创建嵌套字，连接远端地址</span></span><br><span class="line">client = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line">client.connect((host,port)) <span class="comment">#连接服务端，指定主机和端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第二步：连接后发送数据/接收数据</span></span><br><span class="line">msg = client.recv(<span class="number">1024</span>) <span class="comment">#接收小于1024字节的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第三步：传输完毕，关闭嵌套字</span></span><br><span class="line">client.close()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(msg.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="comment">#客户端IP地址：192.168.55.43</span></span><br><span class="line"><span class="comment">#服务器端IP地址：192.168.120.209</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment">#host = socket.gethostname() #获取本地主机名</span></span><br><span class="line">host = <span class="string">&#x27;192.168.120.209&#x27;</span></span><br><span class="line">port = <span class="number">8800</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line"><span class="comment">##第一步：创建嵌套字，绑定套接字到本地IP与端口</span></span><br><span class="line">server = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定端口号</span></span><br><span class="line"><span class="comment">#bind():绑定地址（host,port）到套接字,在AF_INET下,以元组（host,port）的形式表示地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第二步：监听连接</span></span><br><span class="line">server.listen(<span class="number">1</span>) <span class="comment">#开始监听;最大连接1台客户端，超过后排队</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第三步：进入循环，不断接受客户端的连接请求</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept() <span class="comment">#创建客户端连接</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接地址：%s&quot;</span>%<span class="built_in">str</span>(addr))</span><br><span class="line">    <span class="comment">##第四步：接收传来的数据/发送给对方数据</span></span><br><span class="line">    msg = <span class="string">&#x27;Hello!&#x27;</span></span><br><span class="line">    client.send(msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="comment">##第五步：传输完毕后，关闭套接字</span></span><br><span class="line">    client.close()</span><br></pre></td></tr></table></figure><blockquote><p><strong>为什么多个客户端可以连接服务器的同个端口？</strong></p><p>我们这里讲Socket连接：<br />1.端口只是一个数字辨识，不是真正的物理端口；<br />2.一个Socket连接的<a href="https://so.csdn.net/so/search?q=%E4%B8%BB%E9%94%AE&amp;spm=1001.2101.3001.7020">主键</a>（即不同socket之间的区分）是由一个五元组{SRC-IP, SRC-PORT, DEST-IP, DEST-PORT, PROTOCOL}组成，即{源地址，源端口，目标地址，目标端口，协议}组成，那些说四元组不包含协议的说法是错误的。<br />3.一个进程可以拥有多个socket连接。</p><p>例子一、两个客户端连接在同个服务器的同个端口80，即有两个socket连接：<br />- socket1 {SRC-A, 100, DEST-X,80, TCP}<br />- socket2{SRC-B, 100, DEST-X,80, TCP}<br />主机A和主机B的地址不同，两台主机同时连接到服务器X的80端口。服务器要怎么处理这个连接是它的事，我们要理解的是为什么一个主机同个端口能监听多个客户端Socket连接。</p><p>解释：<br />1.是因为两个客户端的IP不同，服务器能识别出不同的Socket；<br />2.即使IP地址相同，端口不同，服务器也能够分辨；<br />3.只要服务器知道收到的请求和哪个socket相关，那么它就能使用这个socket正确地回复那个客户端；<br />4.如果对于不同的socket需要不同的端口，那么不仅仅浪费服务器资源，而且每次客户端连接上serverSocket之后还要另外分配新的端口和客户端通信。没必要。</p><p>例子二、不同的进程可以监听同一个端口。</p><ol><li>因此在服务器的两个使用不同协议的进程可以监听同一个端口。</li><li>如果一个socket的辨识只是四元组不包括协议{SRC-IP, SRC-PORT, DEST-IP, DEST-PORT}，那么不同进程是不可能同时监听同一个端口的。没有协议的话一个客户端连接到同一台某个有两个进程监听端口的服务器，那么就没有什么机制可以确定客户端是要连接哪一个进程了。</li></ol><p>总结：</p><ol><li>不同协议可以监听同一个端口（不管是不是在服务器的同个进程）</li><li>某个协议的进程可以监听多个客户端的连接，因为只要五元组不同进程就能分辨。</li><li>从上面的例子可以知道，客户端同个进程也可以在同个端口用不同的协议与客户端建立连接。</li></ol></blockquote><p><a href="https://www.jianshu.com/p/066d99da7cbd">一、Socket技术详解 - 简书 (jianshu.com)</a></p><h3 id="代码02"><a class="markdownIt-Anchor" href="#代码02"></a> <strong>代码0.2</strong></h3><p><strong>作用：在0.1基础上，实现服务器接收数据，客户端发送数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取本地主机名</span></span><br><span class="line">port = <span class="number">9999</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line"><span class="comment">##第一步：创建嵌套字，绑定套接字到本地IP与端口</span></span><br><span class="line">server = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定端口号</span></span><br><span class="line"><span class="comment">#bind():绑定地址（host,port）到套接字,在AF_INET下,以元组（host,port）的形式表示地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第二步：监听连接</span></span><br><span class="line">server.listen(<span class="number">2</span>) <span class="comment">#开始监听;最大连接1台客户端，超过后排队</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第三步：进入循环，不断接受客户端的连接请求</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept() <span class="comment">#创建客户端连接</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接地址：%s&quot;</span>%<span class="built_in">str</span>(addr))</span><br><span class="line">    <span class="comment">##第四步：接收传来的数据和转发对方数据</span></span><br><span class="line">    msg = client.recv(<span class="number">1024</span>) <span class="comment">#接收小于1024字节的数据</span></span><br><span class="line">    <span class="built_in">print</span>(msg.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="comment">##第五步：传输完毕后，关闭套接字</span></span><br><span class="line">    client.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取本地主机名</span></span><br><span class="line"><span class="comment">#host = socket.gethostbyname(socket.gethostname())</span></span><br><span class="line"><span class="comment">#host = &#x27;39.144.108.89&#x27;</span></span><br><span class="line">port = <span class="number">9999</span> <span class="comment">#设置端口</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line"><span class="comment">##第一步：创建嵌套字，连接远端地址</span></span><br><span class="line">client = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line">client.connect((host,port)) <span class="comment">#连接服务端，指定主机和端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第二步：连接后发送数据/接收数据</span></span><br><span class="line">msg = <span class="string">&#x27;Hello!&#x27;</span></span><br><span class="line">client.send(msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">##第三步：传输完毕，关闭嵌套字</span></span><br><span class="line">client.close()</span><br></pre></td></tr></table></figure><h3 id="代码03"><a class="markdownIt-Anchor" href="#代码03"></a> <strong>代码0.3</strong></h3><p><strong>作用：在0.2基础上，实现可传可接收，但存在问题，未解决</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取本地主机名</span></span><br><span class="line"><span class="comment">#host = &#x27;192.168.120.29&#x27; #服务端IP地址</span></span><br><span class="line">port = <span class="number">8800</span></span><br><span class="line">max_connect = <span class="number">1</span> <span class="comment">#最大连接客户端数</span></span><br><span class="line">max_receive_data = <span class="number">1024</span> <span class="comment">#最大接收字节数</span></span><br><span class="line">server_name = <span class="string">&#x27;老王&#x27;</span> <span class="comment">#设置用户名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第一步：创建嵌套字，绑定套接字到本地IP与端口</span></span><br><span class="line">server = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定端口号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第二步：监听连接</span></span><br><span class="line">server.listen(max_connect) <span class="comment">#开始监听;最大连接1台客户端，超过后排队</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Server is ready.&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##第三步：进入循环，不断接受客户端的连接请求</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept() <span class="comment">#创建客户端连接</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接地址：%s&quot;</span>%<span class="built_in">str</span>(addr))</span><br><span class="line">    <span class="comment">##第四步：接收传来的数据/发送给对方数据</span></span><br><span class="line">    <span class="comment">#发送数据</span></span><br><span class="line">    send_msg = <span class="built_in">input</span>(<span class="string">&#x27;请输入：&#x27;</span>)</span><br><span class="line">    send_msg = server_name + <span class="string">&#x27;: &#x27;</span>+ send_msg</span><br><span class="line">    client.send(send_msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> send_msg == <span class="string">&#x27;close&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment">#接收数据</span></span><br><span class="line">    receive_msg = client.recv(max_receive_data)</span><br><span class="line">    <span class="built_in">print</span>(receive_msg.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment">##第五步：传输完毕后，关闭套接字</span></span><br><span class="line">client.close()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取本地主机名</span></span><br><span class="line"><span class="comment">#host = &#x27;192.168.31.129&#x27; #服务端IP地址</span></span><br><span class="line">port = <span class="number">8800</span> <span class="comment">#设置端口</span></span><br><span class="line">max_receive_data = <span class="number">1024</span> <span class="comment">#最大接收字节数</span></span><br><span class="line">client_name = <span class="string">&#x27;老刘&#x27;</span> <span class="comment">#设置用户名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">##第一步：创建嵌套字，连接远端地址</span></span><br><span class="line">client = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line">client.connect((host,port)) <span class="comment">#连接服务端，指定主机和端口</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##第二步：连接后发送数据/接收数据</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment">#接收数据</span></span><br><span class="line">    receive_msg = client.recv(max_receive_data)</span><br><span class="line">    <span class="built_in">print</span>(receive_msg.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> receive_msg.decode(<span class="string">&#x27;utf-8&#x27;</span>)==<span class="string">&#x27;close&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment">#发送数据</span></span><br><span class="line">    send_msg = <span class="built_in">input</span>(<span class="string">&#x27;请输入：&#x27;</span>)</span><br><span class="line">    send_msg = client_name + <span class="string">&#x27;: &#x27;</span>+ send_msg</span><br><span class="line">    client.send(send_msg.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    </span><br><span class="line"><span class="comment">##第三步：传输完毕，关闭嵌套字</span></span><br><span class="line">client.close()</span><br></pre></td></tr></table></figure><h2 id="初级阶段2threading使用"><a class="markdownIt-Anchor" href="#初级阶段2threading使用"></a> 初级阶段2：threading使用</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">服务器端的套接字起到监听的作用（类似电话主机），每连接成功一个客户端，就返回一个和客户端通信的套接字（类似电话的分机），服务器端用每个“分机”和每个客户端进行通信。</span><br><span class="line">因为我们使用的是默认的阻塞套接字，服务器和每个客户端通信的过程都是阻塞的，所以，为了服务器可以“同时”（并发）和客户端进行通信，我们用到了多线程。</span><br></pre></td></tr></table></figure><blockquote><p>hreading(多线程)模块中包含了关于线程操作的丰富功能，包括：常用线程函数，线程对象，锁对象，递归锁对象，事件对象，条件变量对象，信号量对象，定时器对象，栅栏对象。</p><p>创建 Thread 对象有 2 种手段：</p><p>1.直接创建 Thread ，将一个 callable 对象从类的构造器传递进去，这个 callable 就是回调函数，用来处理任务。<br />2.<strong>编写一个自定义类继承 Thread，然后复写 run() 方法，在 run() 方法中编写任务处理代码，然后创建这个 Thread 的子类。</strong></p><p><a href="https://blog.csdn.net/briblue/article/details/85101144">(29条消息) Python多线程编程(一）：threading 模块 Thread 类的用法详解_frank909的博客-CSDN博客_python threading</a></p></blockquote><blockquote><p>Python 将一个列表里面的元素拼接成一个字符串:</p><p>注意: 1. 列表里面的元素必须全是字符串才可以使用join()进行拼接</p><p>2. 返回的是一个字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">item1 = [<span class="string">&quot;lowman&quot;</span>, <span class="string">&quot;isbusy&quot;</span>]</span><br><span class="line">item2 = <span class="string">&quot;,&quot;</span>.join(item1) <span class="comment"># 根据实际需要使用相应的分隔符连接列表元素,如 , : ; 或者空字符串</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>Thread.setDaemon(false)设置为用户线程；通过Thread.setDaemon(true)设置为守护线程。如果不设置次属性，默认为用户线程。</p><p>用户线程和守护线程的区别：</p><p>1.主线程结束后用户线程还会继续运行,JVM存活；主线程结束后守护线程和JVM的状态又下面第2条确定。</p><p>2.如果没有用户线程，都是守护线程，那么JVM结束（随之而来的是所有的一切烟消云散，包括所有的守护线程）。</p><p><a href="https://blog.csdn.net/xyls12345/article/details/26256693">(29条消息) Thread.setDaemon详解_starfe-geek的博客-CSDN博客_thread.setdeamon</a></p></blockquote><table><thead><tr><th>Threading模块的对象</th><th>描述</th></tr></thead><tbody><tr><td>Thread</td><td>线程对象</td></tr></tbody></table><table><thead><tr><th>Threading模块的<a href="https://so.csdn.net/so/search?q=Thread%E7%B1%BB&amp;spm=1001.2101.3001.7020">Thread类</a></th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>线程名（属性）</td></tr><tr><td>ident</td><td>线程标识符（属性）</td></tr><tr><td>daemon</td><td>线程是否是守护线程（属性）</td></tr><tr><td><em>init</em>(group=None, tatget=None, name=None, args=(),kwargs ={}, verbose=None, daemon=None)</td><td>实例化一个线程对象，需要有一个可调用的 target，以及其参数 args或 kwargs。还可以传递 name 或 group 参数，不过后者还未实现。此外， verbose 标 志 也 是 可 接 受 的。 而 daemon 的 值 将 会 设定thread.daemon 属性/标志</td></tr><tr><td>start()</td><td>开启线程</td></tr><tr><td>run()</td><td>定义线程功能的方法（通常在子类中被应用开发者重写）</td></tr></tbody></table><p><a href="https://blog.csdn.net/wqx521/article/details/82754617">(29条消息) Python3——多线程之threading模块_a1314521531的博客-CSDN博客_python3 threading</a></p><blockquote><p><a href="https://www.cnblogs.com/klchang/p/4635040.html">Python中获取异常（Exception）信息</a></p><p>repr(e)</p><p>给出较全的异常信息，包括异常信息的类型，如1/0的异常信息</p><p>“ZeroDivisionError(‘integer division or modulo by zero’,)”</p></blockquote><h3 id="代码04"><a class="markdownIt-Anchor" href="#代码04"></a> <strong>代码0.4</strong></h3><p><strong>作用：在0.3基础上实现多客户端交流，但发送数据和接收数据（显示）安排不合理</strong></p><p><a href="https://blog.csdn.net/wyn1564464568/article/details/122891038">(29条消息) python实现简易聊天室程序_Castria的博客-CSDN博客_python聊天室项目代码</a></p><blockquote><p>首先服务器端创建ServerSocket对象，等待客户连接。</p><p>每当有一个客户连接上时，使用一个线程保存其Socket，把该线程保存在一个HashMap集合中。</p><p>客户端有信息发送给服务器时，服务器先获取要接收者用户名，根据用户名获取保存的线程（如果没有找到该线程则回发给发送者消息提示其需要联系的用户未上线），再根据该线程创建输出流，把消息转发给接收者。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务器</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">host = socket.gethostname()  <span class="comment"># 获取本地主机名</span></span><br><span class="line">port = <span class="number">9999</span>  <span class="comment"># 设置端口</span></span><br><span class="line">max_connect = <span class="number">2</span>  <span class="comment"># 设置最大连接客户端数</span></span><br><span class="line">max_recedata = <span class="number">1024</span>  <span class="comment"># 设置最大接收字节数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 创建socket对象</span></span><br><span class="line">server.bind((host, port))  <span class="comment"># 绑定端口号</span></span><br><span class="line">server.listen(max_connect)  <span class="comment"># 开始监听;最大连接2台客户端，超过后排队</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ServerSocket is ready.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cnt = <span class="number">0</span>  <span class="comment"># 当前在线人数</span></span><br><span class="line">textList = []  <span class="comment"># 存储历史记录</span></span><br><span class="line">socketList = []  <span class="comment"># 存储已有客户端（套接字）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义类继承，重写run()方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadCreate</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, client</span>):</span>  <span class="comment"># 线程初始化</span></span><br><span class="line">        threading.Thread.__init__(self)  <span class="comment"># 当作Thread的固定结构吧……</span></span><br><span class="line">        self.client = client  <span class="comment"># 保存嵌套字（客户端）</span></span><br><span class="line">        socketList.append(client)  <span class="comment"># 把嵌套字存在列表里</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">global</span> cnt</span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> socketList:</span><br><span class="line">                <span class="keyword">if</span> sock == self.client:</span><br><span class="line">                    sock.send((<span class="string">&#x27;Old client.There are %d presons.&#x27;</span>%(cnt)).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sock.send((<span class="string">&#x27;New Client is Coming.There are %d presons.&#x27;</span>%(cnt)).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                word = self.client.recv(max_recedata).decode() <span class="comment">#接收数据</span></span><br><span class="line">                textList.append(word) <span class="comment">#生成历史记录</span></span><br><span class="line">                <span class="keyword">for</span> sock <span class="keyword">in</span> socketList: <span class="comment">#给所有客户端发送新消息</span></span><br><span class="line">                    sock.send((<span class="string">&#x27;\n&#x27;</span>+word).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e: <span class="comment">#客户端强制断开连接（关闭窗口）</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">repr</span>(e)) <span class="comment">#如何加一个时间戳？</span></span><br><span class="line">            cnt = cnt-<span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Lose one person.There are %d persons.&#x27;</span>%(cnt))</span><br><span class="line">            socketList.remove(self.client) <span class="comment">#移除该客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> socketList:</span><br><span class="line">                sock.send((<span class="string">&#x27;Lose one person.There are %d persons.&#x27;</span>%(cnt)).encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client, addr = server.accept()  <span class="comment"># 创建客户端连接，每次接收一个连接</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接地址：%s&quot;</span> % <span class="built_in">str</span>(addr))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 关于历史记录的处理</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(textList) == <span class="number">0</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;No message.&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;\n&#x27;</span>.join(textList).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        cnt = cnt + <span class="number">1</span>  <span class="comment"># 来了一个人加一</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 给用户创建新进程</span></span><br><span class="line">        newThread = ThreadCreate(client)</span><br><span class="line">        newThread.setDaemon(<span class="literal">True</span>)  <span class="comment"># 设置为守护线程</span></span><br><span class="line">        newThread.start()  <span class="comment"># 开启线程</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!The number of people is &#x27;</span> + <span class="built_in">str</span>(cnt) + <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">repr</span>(e))</span><br><span class="line">    <span class="comment"># finally:</span></span><br><span class="line">    <span class="comment">#     client.close()</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname() <span class="comment">#获取本地主机名</span></span><br><span class="line">server_port = <span class="number">9999</span> <span class="comment">#设置端口</span></span><br><span class="line">max_recedata = <span class="number">1024</span>  <span class="comment"># 设置最大接收字节数</span></span><br><span class="line">client_name = <span class="string">&#x27;Nacy&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(server_host)</span><br><span class="line"></span><br><span class="line">client = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line">client.connect((server_host,server_port)) <span class="comment">#连接服务端，指定主机和端口</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">msg = client.recv(max_recedata) <span class="comment">#先接收历史消息</span></span><br><span class="line"><span class="keyword">if</span> msg.decode(<span class="string">&#x27;utf-8&#x27;</span>)!=<span class="string">&#x27;No message.&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(msg.decode(<span class="string">&#x27;utf-8&#x27;</span>)+<span class="string">&#x27;\n------以上是历史消息------\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收文字的线程</span></span><br><span class="line"><span class="comment">#由于用户的发送和接收消息是不同步的，在接收消息时线程会阻塞，所以另开启一个线程进行接收文字</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadReceive</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            receive_msg = client.recv(max_recedata)</span><br><span class="line">            <span class="built_in">print</span>(receive_msg.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">textThread = ThreadReceive()</span><br><span class="line">textThread.start()</span><br><span class="line"></span><br><span class="line"><span class="comment">#发送文字</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        send_msg = <span class="built_in">input</span>(<span class="string">&#x27;请输入：&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> send_msg==<span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        client.send((client_name+<span class="string">&#x27;: &#x27;</span>+send_msg).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">send()</span><br></pre></td></tr></table></figure><h3 id="代码05"><a class="markdownIt-Anchor" href="#代码05"></a> <strong>代码0.5</strong></h3><p><strong>作用：在0.4基础上加了时间戳，将input里的字符删了，直接输就行……</strong></p><p><a href="https://blog.csdn.net/cheneykl/article/details/79717160">(29条消息) Python 给某个文件名添加时间戳_cheney康的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/drdairen/article/details/60962439">(29条消息) python：threading.Thread类的使用详解_啊啊啊西吧的博客-CSDN博客_python thread</a></p><p><a href="https://www.yisu.com/zixun/720956.html">python中的多线程锁lock=threading.Lock()如何使用 - 开发技术 - 亿速云 (yisu.com)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mutex = threading.Lock()</span><br><span class="line">#锁的使用</span><br><span class="line">#创建锁</span><br><span class="line">mutex = threading.Lock()</span><br><span class="line">#锁定</span><br><span class="line">mutex.acquire([timeout])</span><br><span class="line">#释放</span><br><span class="line">mutex.release()</span><br></pre></td></tr></table></figure><p>发现没啥要修改的……</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端import socket</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">host = socket.gethostname()  <span class="comment"># 获取本地主机名</span></span><br><span class="line">port = <span class="number">9999</span>  <span class="comment"># 设置端口</span></span><br><span class="line">max_connect = <span class="number">2</span>  <span class="comment"># 设置最大连接客户端数</span></span><br><span class="line">max_recedata = <span class="number">1024</span>  <span class="comment"># 设置最大接收字节数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 创建socket对象</span></span><br><span class="line">server.bind((host, port))  <span class="comment"># 绑定端口号</span></span><br><span class="line">server.listen(max_connect)  <span class="comment"># 开始监听;最大连接2台客户端，超过后排队</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ServerSocket is ready.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cnt = <span class="number">0</span>  <span class="comment"># 当前在线人数</span></span><br><span class="line">textList = []  <span class="comment"># 存储历史记录</span></span><br><span class="line">socketList = []  <span class="comment"># 存储已有客户端（套接字）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义类继承，重写run()方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadCreate</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, client</span>):</span>  <span class="comment"># 线程初始化</span></span><br><span class="line">        threading.Thread.__init__(self)  <span class="comment"># 当作Thread的固定结构吧……</span></span><br><span class="line">        self.client = client  <span class="comment"># 保存嵌套字（客户端）</span></span><br><span class="line">        socketList.append(client)  <span class="comment"># 把嵌套字存在列表里</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">global</span> cnt</span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> socketList:</span><br><span class="line">                <span class="keyword">if</span> sock == self.client:</span><br><span class="line">                    sock.send((<span class="string">&#x27;Welcome!There are %d presons.&#x27;</span>%(cnt)).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sock.send((<span class="string">&#x27;New Client is Coming.There are %d presons.&#x27;</span>%(cnt)).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                word = self.client.recv(max_recedata).decode() <span class="comment">#接收数据</span></span><br><span class="line">                textList.append(word) <span class="comment">#生成历史记录</span></span><br><span class="line">                <span class="keyword">for</span> sock <span class="keyword">in</span> socketList: <span class="comment">#给所有客户端发送新消息</span></span><br><span class="line">                    sock.send((<span class="string">&#x27;\n&#x27;</span>+word).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e: <span class="comment">#客户端强制断开连接（关闭窗口）</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">repr</span>(e)) <span class="comment">#如何加一个时间戳？</span></span><br><span class="line">            cnt = cnt-<span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Lose one person.There are %d persons.&#x27;</span>%(cnt))</span><br><span class="line">            socketList.remove(self.client) <span class="comment">#移除该客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> socketList:</span><br><span class="line">                sock.send((<span class="string">&#x27;Lose one person.There are %d persons.&#x27;</span>%(cnt)).encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client, addr = server.accept()  <span class="comment"># 创建客户端连接，每次接收一个连接</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;连接地址：%s&quot;</span> % <span class="built_in">str</span>(addr))</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># 关于历史记录的处理</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(textList) == <span class="number">0</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;No message.&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;\n&#x27;</span>.join(textList).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        cnt = cnt + <span class="number">1</span>  <span class="comment"># 来了一个人加一</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 给用户创建新进程</span></span><br><span class="line">        newThread = ThreadCreate(client)</span><br><span class="line">        newThread.setDaemon(<span class="literal">True</span>)  <span class="comment"># 设置为守护线程</span></span><br><span class="line">        newThread.start()  <span class="comment"># 开启线程</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!The number of people is &#x27;</span> + <span class="built_in">str</span>(cnt) + <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">repr</span>(e))</span><br><span class="line">    <span class="comment"># finally:</span></span><br><span class="line">    <span class="comment">#     client.close()</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname() <span class="comment">#获取本地主机名</span></span><br><span class="line">server_port = <span class="number">9999</span> <span class="comment">#设置端口</span></span><br><span class="line">max_recedata = <span class="number">1024</span>  <span class="comment"># 设置最大接收字节数</span></span><br><span class="line">client_name = <span class="string">&#x27;Helen&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(server_host)</span><br><span class="line">lock = threading.Lock() <span class="comment">#创建锁</span></span><br><span class="line"></span><br><span class="line">client = socket.socket(socket.AF_INET,socket.SOCK_STREAM) <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line">client.connect((server_host,server_port)) <span class="comment">#连接服务端，指定主机和端口</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">msg = client.recv(max_recedata) <span class="comment">#先接收历史消息</span></span><br><span class="line"><span class="keyword">if</span> msg.decode(<span class="string">&#x27;utf-8&#x27;</span>)!=<span class="string">&#x27;No message.&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(msg.decode(<span class="string">&#x27;utf-8&#x27;</span>)+<span class="string">&#x27;\n------以上是历史消息------\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收文字的线程</span></span><br><span class="line"><span class="comment">#由于用户的发送和接收消息是不同步的，在接收消息时线程会阻塞，所以另开启一个线程进行接收文字</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadReceive</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                receive_msg = client.recv(max_recedata)</span><br><span class="line">                <span class="built_in">print</span>(receive_msg.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">textThread = ThreadReceive()</span><br><span class="line">textThread.start()</span><br><span class="line"></span><br><span class="line"><span class="comment">#发送文字</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send</span>():</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            send_msg = <span class="built_in">input</span>()</span><br><span class="line">            <span class="keyword">if</span> send_msg == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            client.send((client_name+<span class="string">&#x27;: &#x27;</span>+send_msg).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">send()</span><br></pre></td></tr></table></figure><h2 id="初级阶段3可视化"><a class="markdownIt-Anchor" href="#初级阶段3可视化"></a> 初级阶段3：可视化</h2><h3 id="代码06"><a class="markdownIt-Anchor" href="#代码06"></a> <strong>代码0.6</strong></h3><p><strong>作用：有问题，修理中……主要是服务器老炸了……可能是类的原因</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getIP</span>():</span></span><br><span class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    s.connect((<span class="string">&quot;8.8.8.8&quot;</span>, <span class="number">80</span>))</span><br><span class="line">    ip=s.getsockname()[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> ip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = getIP()  <span class="comment"># 获取本地主机名</span></span><br><span class="line">port = <span class="number">8000</span>  <span class="comment"># 设置端口</span></span><br><span class="line">max_connect = <span class="number">2</span>  <span class="comment"># 设置最大连接客户端数</span></span><br><span class="line">max_recedata = <span class="number">2048</span>  <span class="comment"># 设置最大接收字节数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">cnt = <span class="number">0</span>  <span class="comment"># 当前在线人数</span></span><br><span class="line">textList = []  <span class="comment"># 存储历史记录</span></span><br><span class="line">socketList = []  <span class="comment"># 存储已有客户端（套接字）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 自定义类继承，重写run()方法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadCreate</span>(<span class="params">threading.Thread</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, client</span>):</span></span><br><span class="line">        <span class="comment"># 线程初始化</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        <span class="comment"># 当作Thread的固定结构吧……</span></span><br><span class="line">        self.client = client</span><br><span class="line">        <span class="comment"># 保存嵌套字（客户端）</span></span><br><span class="line">        socketList.append(client)</span><br><span class="line">        <span class="comment"># 把嵌套字存在列表里</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">global</span> cnt</span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> socketList:</span><br><span class="line">                <span class="keyword">if</span> sock == self.client:</span><br><span class="line">                    sock.send((<span class="string">&#x27;Welcome!There are %d presons.&#x27;</span>%(cnt)).encode())</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    sock.send((<span class="string">&#x27;New Client is Coming.There are %d presons.&#x27;</span>%(cnt)).encode())</span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                word = self.client.recv(max_recedata).decode() <span class="comment">#接收数据</span></span><br><span class="line">                textList.append(word)</span><br><span class="line">                <span class="comment"># 生成历史记录</span></span><br><span class="line">                <span class="keyword">for</span> sock <span class="keyword">in</span> socketList:</span><br><span class="line">                    <span class="comment"># 给所有客户端发送新消息</span></span><br><span class="line">                    sock.send((<span class="string">&#x27;\n&#x27;</span>+word).encode())</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="comment"># 客户端强制断开连接（关闭窗口）</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">repr</span>(e)) <span class="comment"># 如何加一个时间戳？</span></span><br><span class="line">            cnt = cnt-<span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Lose one person.There are %d persons.&#x27;</span>%(cnt))</span><br><span class="line">            socketList.remove(self.client) <span class="comment"># 移除该客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> socketList:</span><br><span class="line">                sock.send((<span class="string">&#x27;Lose one person.There are %d persons.&#x27;</span>%(cnt)).encode())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Frame</span>(<span class="params">wx.Frame</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        wx.Frame.__init__(self, <span class="literal">None</span>, title=<span class="string">&#x27;多人聊天系统（服务器）&#x27;</span>, size=(<span class="number">400</span>, <span class="number">300</span>),name=<span class="string">&#x27;frame&#x27;</span>,style=<span class="number">541072960</span>)</span><br><span class="line">        self.qdck = wx.Panel(self)</span><br><span class="line">        self.qdck.SetOwnBackgroundColour((<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>))</span><br><span class="line">        self.Centre()</span><br><span class="line">        self.an1 = wx.Button(self.qdck,size=(<span class="number">120</span>, <span class="number">40</span>),pos=(<span class="number">44</span>, <span class="number">160</span>),label=<span class="string">&#x27;启动客户端&#x27;</span>,name=<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">        self.an1.SetAuthNeeded(<span class="literal">True</span>)</span><br><span class="line">        self.an1.Bind(wx.EVT_BUTTON,self.an1_anbdj)</span><br><span class="line">        self.an2 = wx.Button(self.qdck,size=(<span class="number">120</span>, <span class="number">40</span>),pos=(<span class="number">227</span>, <span class="number">160</span>),label=<span class="string">&#x27;关闭客户端&#x27;</span>,name=<span class="string">&#x27;button&#x27;</span>)</span><br><span class="line">        self.an2.SetAuthNeeded(<span class="literal">True</span>)</span><br><span class="line">        self.an2.Bind(wx.EVT_BUTTON,self.an2_anbdj)</span><br><span class="line">        self.bq1 = wx.StaticText(self.qdck,size=(<span class="number">240</span>, <span class="number">40</span>),pos=(<span class="number">80</span>, <span class="number">35</span>),label=<span class="string">&#x27;多人聊天系统客户端&#x27;</span>,name=<span class="string">&#x27;staticText&#x27;</span>,style=<span class="number">2321</span>)</span><br><span class="line">        bq1_字体 = wx.Font(<span class="number">16</span>,<span class="number">70</span>,<span class="number">90</span>,<span class="number">400</span>,<span class="literal">False</span>,<span class="string">&#x27;Microsoft YaHei UI&#x27;</span>,-<span class="number">1</span>)</span><br><span class="line">        self.bq1.SetFont(bq1_字体)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">an1_anbdj</span>(<span class="params">self,event</span>):</span></span><br><span class="line">        <span class="comment"># print(&#x27;an1,按钮被单击&#x27;)</span></span><br><span class="line">        server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 创建socket对象</span></span><br><span class="line">        server.bind((host, port))  <span class="comment"># 绑定端口号</span></span><br><span class="line">        server.listen(max_connect)  <span class="comment"># 开始监听;最大连接2台客户端，超过后排队</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;ServerSocket is ready.&#x27;</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            client, addr = server.accept()  <span class="comment"># 创建客户端连接，每次接收一个连接</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;连接地址：%s&quot;</span> % <span class="built_in">str</span>(addr))</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">global</span> cnt</span><br><span class="line">                <span class="comment"># 关于历史记录的处理</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(textList) == <span class="number">0</span>:</span><br><span class="line">                    client.send(<span class="string">&#x27;No message.&#x27;</span>.encode())</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    client.send(<span class="string">&#x27;\n&#x27;</span>.join(textList).encode())</span><br><span class="line"></span><br><span class="line">                cnt = cnt + <span class="number">1</span>  <span class="comment"># 来了一个人加一</span></span><br><span class="line"></span><br><span class="line">                <span class="comment"># 给用户创建新进程</span></span><br><span class="line">                newThread = ThreadCreate(client)</span><br><span class="line">                newThread.setDaemon(<span class="literal">True</span>)  <span class="comment"># 设置为守护线程</span></span><br><span class="line">                newThread.start()  <span class="comment"># 开启线程</span></span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!The number of people is &#x27;</span> + <span class="built_in">str</span>(cnt) + <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="built_in">repr</span>(e))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">an2_anbdj</span>(<span class="params">self,event</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;an2,按钮被单击&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myApp</span>(<span class="params">wx.App</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnInit</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.frame = Frame()</span><br><span class="line">        self.frame.Show(<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = myApp()</span><br><span class="line">    app.MainLoop()</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> wx</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep, localtime</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname()</span><br><span class="line"><span class="comment"># 获取本地主机名</span></span><br><span class="line">server_port = <span class="number">8000</span></span><br><span class="line"><span class="comment"># 设置端口</span></span><br><span class="line">max_recedata = <span class="number">2048</span></span><br><span class="line"><span class="comment"># 设置最大接收字节数</span></span><br><span class="line">client_name = socket.gethostname()</span><br><span class="line"><span class="built_in">print</span>(server_host)</span><br><span class="line">lock = threading.Lock()</span><br><span class="line"><span class="comment"># 创建锁</span></span><br><span class="line">host_ip = <span class="string">&#x27;&#x27;</span></span><br><span class="line">client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 创建socket对象</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">chuangkou</span>(<span class="params">wx.Frame</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.liaotian = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 判断是否取过消息记录</span></span><br><span class="line">        <span class="built_in">super</span>(chuangkou, self).__init__(<span class="literal">None</span>, -<span class="number">1</span>, title=<span class="string">&quot;多人聊天程序&quot;</span>, size=(<span class="number">600</span>, <span class="number">600</span>))</span><br><span class="line">        self.a = wx.Panel(self)</span><br><span class="line">        <span class="comment"># 创建一个画板</span></span><br><span class="line">        self.ip=wx.TextCtrl(self.a,style=wx.TE_PROCESS_ENTER ,value=<span class="string">&quot;请输入服务器的ip地址&quot;</span>)</span><br><span class="line">        <span class="comment"># 创建一个输入服务器ip地址的输入框</span></span><br><span class="line">        self.b = wx.Button(self.a, wx.ID_ANY, <span class="string">&quot;确定&quot;</span>)</span><br><span class="line">        self.b.SetAuthNeeded(<span class="literal">True</span>)</span><br><span class="line">        self.b.Bind(wx.EVT_BUTTON, self.b_anbdj)</span><br><span class="line">        <span class="comment"># 创建一个聊天创建的输入框</span></span><br><span class="line">        self.text = wx.TextCtrl(self.a,</span><br><span class="line">                             style=wx.TE_READONLY | wx.TE_MULTILINE | wx.TE_RICH2 | wx.BORDER_SIMPLE | wx.HSCROLL)</span><br><span class="line">        self.text.SetBackgroundColour(<span class="string">&#x27;#d1d1d1&#x27;</span>)  <span class="comment"># 颜色改变为灰</span></span><br><span class="line">        self.ctrl = wx.TextCtrl(self.a, style=wx.TE_PROCESS_ENTER | wx.TE_MULTILINE,value=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="comment"># 创建一个输入发送聊天内容的输入框</span></span><br><span class="line">        self.sent = wx.Button(self.a, wx.ID_ANY, <span class="string">&quot;发送&quot;</span>)</span><br><span class="line">        self.sent.SetAuthNeeded(<span class="literal">True</span>)</span><br><span class="line">        self.sent.Bind(wx.EVT_BUTTON, self.sent_anbdj)</span><br><span class="line">        box = wx.BoxSizer(wx.HORIZONTAL)  <span class="comment"># 创建一个垂直布局</span></span><br><span class="line">        box1 = wx.BoxSizer(wx.VERTICAL)  <span class="comment"># 创建一个平行布局</span></span><br><span class="line">        box1.Add(self.ip,proportion=<span class="number">3</span>, flag=wx.EXPAND|wx.TOP,border=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 输入ip地址的输入框的布局</span></span><br><span class="line">        box1.Add(self.b, proportion=<span class="number">1</span>, flag=wx.EXPAND | wx.TOP, border=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 查看聊天记录按钮的布局</span></span><br><span class="line">        box1.Add(self.text, proportion=<span class="number">30</span>, flag=wx.EXPAND | wx.TOP, border=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 接收输入框的布局</span></span><br><span class="line">        box1.Add(self.ctrl, proportion=<span class="number">20</span>, flag=wx.EXPAND | wx.TOP, border=<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 发送的输入框的布局</span></span><br><span class="line">        box1.Add(self.sent, proportion=<span class="number">3</span>, flag=wx.EXPAND | wx.TOP, border=<span class="number">0</span>)</span><br><span class="line">        self.a.SetSizer(box1)  <span class="comment"># 布局设置在a画板上</span></span><br><span class="line">        self.msg=<span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">b_anbdj</span>(<span class="params">self,event</span>):</span></span><br><span class="line">        <span class="keyword">global</span> msg</span><br><span class="line">        host_ip=self.ip.GetValue()</span><br><span class="line">        toastone = wx.MessageDialog(<span class="literal">None</span>, <span class="string">&quot;链接的服务器地址为&quot;</span>+host_ip, <span class="string">&quot;信息提示&quot;</span>, wx.YES_DEFAULT | wx.ICON_QUESTION)</span><br><span class="line">        <span class="keyword">if</span> toastone.ShowModal() == wx.ID_YES:</span><br><span class="line">            <span class="comment"># 如果点击了提示框的确定按钮</span></span><br><span class="line">            toastone.Destroy()</span><br><span class="line">            <span class="comment"># 则关闭提示框</span></span><br><span class="line">        client.connect((host_ip, server_port))  <span class="comment"># 连接服务端，指定主机和端口</span></span><br><span class="line">        toastone = wx.MessageDialog(<span class="literal">None</span>, <span class="string">&quot;Connecting is successful!&quot;</span>, <span class="string">&quot;信息提示&quot;</span>, wx.YES_DEFAULT | wx.ICON_QUESTION)</span><br><span class="line">        <span class="keyword">if</span> toastone.ShowModal() == wx.ID_YES:</span><br><span class="line">            <span class="comment"># 如果点击了提示框的确定按钮</span></span><br><span class="line">            toastone.Destroy()</span><br><span class="line">            <span class="comment"># 则关闭提示框</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sent_anbdj</span>(<span class="params">self,event</span>):</span></span><br><span class="line">        send_msg = self.ctrl.GetValue()</span><br><span class="line">        client.send((client_name + <span class="string">&#x27;: &#x27;</span> + send_msg).encode())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接收文字的线程</span></span><br><span class="line">    <span class="comment"># 由于用户的发送和接收消息是不同步的，在接收消息时线程会阻塞，所以另开启一个线程进行接收文字</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">ThreadReceive</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            self.msg = client.recv(max_recedata)</span><br><span class="line">            self.text.AppendText(self.msg.decode() + <span class="string">&quot;\n\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = wx.App()  <span class="comment"># 初始化</span></span><br><span class="line">    shili = chuangkou()  <span class="comment"># 创建实例</span></span><br><span class="line">    shili.Show()  <span class="comment"># 显示窗口</span></span><br><span class="line">    app.MainLoop()  <span class="comment"># 窗口主循环</span></span><br></pre></td></tr></table></figure><h2 id="初级阶段4线程改版tkinter使用"><a class="markdownIt-Anchor" href="#初级阶段4线程改版tkinter使用"></a> 初级阶段4：线程改版+tkinter使用</h2><h3 id="05"><a class="markdownIt-Anchor" href="#05"></a> <strong>0.5</strong></h3><p><strong>作用:换了个线程控制方式</strong></p><blockquote><p>变化：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server.listen() #监听</span><br><span class="line">server = socket.socket() #创建server对象</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务器端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取当前主机的IP地址</span></span><br><span class="line">port = <span class="number">8000</span> <span class="comment">#设置防火墙开放端口</span></span><br><span class="line">SocketList = [] <span class="comment">#存储客户端套接字的列表</span></span><br><span class="line">TextList = [] <span class="comment">#存储聊天记录</span></span><br><span class="line">cnt = <span class="number">0</span> <span class="comment">#当前客户端人数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket() <span class="comment">#创建server对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定</span></span><br><span class="line">server.listen() <span class="comment">#监听</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;服务器准备就绪！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收一个客户端连接，及其发送来数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_client</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接受客户端发送来的数据</span></span><br><span class="line">        <span class="keyword">return</span> s.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment">#客户端异常，连接失败，则删除该socket</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(addr)+<span class="string">&#x27;已下线！&#x27;</span>)</span><br><span class="line">        SocketList.remove(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">#多线程：将收到的消息发送给所有客户端</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_client</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = read_client(s) <span class="comment">#客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> content <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#如果没有结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#如果有将消息保存到历史记录</span></span><br><span class="line">                TextList.append(<span class="built_in">str</span>(addr)+<span class="string">&#x27;: &#x27;</span>+content)</span><br><span class="line">            <span class="comment">#将一个客户端发送过来的数据广播给其他客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                sock.send((<span class="built_in">str</span>(addr)+<span class="string">&#x27;: &#x27;</span>+content).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;广播未成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept()</span><br><span class="line">    SocketList.append(client)</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(addr)+<span class="string">&#x27;已加入！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#历史消息生成</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(TextList)==<span class="number">0</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;No message.&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;\n&#x27;</span>.join(TextList).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#每当有客户连接后，就启动一个线程为其服务</span></span><br><span class="line">        threading.Thread(target=send_client, args=(client,)).start()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">repr</span>(e))</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname()</span><br><span class="line">server_port = <span class="number">8000</span></span><br><span class="line"></span><br><span class="line">client = socket.socket() <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line">client.connect((server_host,server_port)) <span class="comment">#连接服务端，指定主机和端口</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line"></span><br><span class="line">content = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> content != <span class="string">&#x27;No message.&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(content + <span class="string">&#x27;\n------以上是历史消息------\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_server</span>(<span class="params">c</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="comment">#子线程负责从服务端接受数据并打印</span></span><br><span class="line">        content = c.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(content)</span><br><span class="line">threading.Thread(target=read_server, args=(client,)).start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    word = <span class="built_in">input</span>()</span><br><span class="line">    <span class="keyword">if</span> word == <span class="string">&#x27;close&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># 主线程负责将用户输入的数据发送到socket中</span></span><br><span class="line">    client.send(word.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="06"><a class="markdownIt-Anchor" href="#06"></a> <strong>0.6</strong></h3><p><strong>作用：0.5基础上优化（nickname）+进行图形界面可视化；</strong></p><blockquote><p>Python 提供了多个图形开发界面的库，几个常用 Python GUI 库如下：</p><ul><li><strong>Tkinter：</strong> Tkinter 模块(Tk 接口)是 Python 的标准 Tk GUI 工具包的接口 .Tk 和 Tkinter 可以在大多数的 Unix 平台下使用,同样可以应用在 Windows 和 Macintosh 系统里。Tk8.0 的后续版本可以实现本地窗口风格,并良好地运行在绝大多数平台中。</li></ul><p><strong>注意</strong>*：Python3.x 版本使用的库名为 tkinter,即首写字母 T 为小写*</p><p>创建一个GUI程序</p><ul><li>1、导入 Tkinter 模块</li><li>2、创建控件</li><li>3、指定这个控件的 master， 即这个控件属于哪一个</li><li>4、告诉 GM(geometry manager) 有一个控件产生了。</li></ul></blockquote><blockquote><p>[Python GUI 编程(Tkinter) | 菜鸟教程 (<a href="http://runoob.com">runoob.com</a>)](<a href="https://www.runoob.com/python/python-gui-tkinter.html#:~:text=Tkinter">https://www.runoob.com/python/python-gui-tkinter.html#:~:text=Tkinter</a> 是 Python 的标准 GUI 库。 Python 使用,Tkinter 库、而且 IDLE 也是用 Tkinter 编写而成、对于简单的图形界面 Tkinter 还是能应付自如。)</p><p><a href="https://blog.csdn.net/Eider1998/article/details/104725180">(29条消息) TK-StringVar_Eider1998的博客-CSDN博客_stringvar()作用</a></p><p><a href="https://www.runoob.com/python/python-tk-frame.html">Python Tkinter 框架控件（Frame） | 菜鸟教程 (runoob.com)</a></p><p><a href="https://blog.csdn.net/Bugest/article/details/81557112">(29条消息) python弹窗——tkinter.messagebox学习总结_鹿鹿有为啊的博客-CSDN博客_python tkinter 弹窗</a></p><p><a href="https://www.cnblogs.com/zmzzm/p/11973217.html">tkinter的set()与get() - 做梦者造梦 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/qq_46018418/article/details/105927203">(29条消息) tkinter库最全使用教程_千禧皓月的博客-CSDN博客_tkinter</a></p><p><a href="https://blog.csdn.net/superfanstoprogram/article/details/83713196">(29条消息) 用tkinter.pack设计复杂界面布局_快乐清风客的博客-CSDN博客_tkinter复杂界面</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取当前主机的IP地址</span></span><br><span class="line">port = <span class="number">8000</span> <span class="comment">#设置防火墙开放端口</span></span><br><span class="line">SocketList = [] <span class="comment">#存储客户端套接字的列表</span></span><br><span class="line">TextList = [] <span class="comment">#存储聊天记录</span></span><br><span class="line">Nickname = [] <span class="comment">#存储用户呢称</span></span><br><span class="line">cnt = <span class="number">0</span> <span class="comment">#当前客户端人数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket() <span class="comment">#创建server对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定</span></span><br><span class="line">server.listen() <span class="comment">#监听</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;服务器准备就绪！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收一个客户端连接，及其发送来数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接受客户端发送来的数据</span></span><br><span class="line">        <span class="keyword">return</span> s.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment">#客户端异常，连接失败，则删除该socket</span></span><br><span class="line">        <span class="comment"># print(str(addr)+&#x27;已下线！&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(nickname + <span class="string">&#x27;已下线！&#x27;</span>)</span><br><span class="line">        SocketList.remove(s)</span><br><span class="line">        Nickname.remove(nickname)</span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">            sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已下线！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#多线程：将收到的消息发送给所有客户端</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        s.send((<span class="string">&#x27;,&#x27;</span>.join(Nickname)).encode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment">#将用户列表发送给各客户端</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = read_client(s) <span class="comment">#客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> content <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#如果没有结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#如果有将消息保存到历史记录</span></span><br><span class="line">                <span class="comment"># TextList.append(str(addr)+&#x27;: &#x27;+content)</span></span><br><span class="line">                TextList.append(nickname + <span class="string">&#x27;: &#x27;</span> + content)</span><br><span class="line">            <span class="comment">#将一个客户端发送过来的数据广播给其他客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((nickname + <span class="string">&#x27;: &#x27;</span> + content).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;广播未成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept()</span><br><span class="line">    SocketList.append(client)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        nickname = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="comment"># print(str(addr)+&#x27;已加入！&#x27;)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> nickname <span class="keyword">in</span> Nickname:</span><br><span class="line">            i = <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                <span class="keyword">if</span> nickname+<span class="built_in">str</span>(i) <span class="keyword">in</span> Nickname:</span><br><span class="line">                    i = i+<span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    nickname = nickname + <span class="built_in">str</span>(i)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        Nickname.append(nickname)</span><br><span class="line">        <span class="built_in">print</span>(nickname + <span class="string">&#x27;已加入！&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">            sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已加入！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment">#历史消息生成</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(TextList)==<span class="number">0</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;No message.&#x27;</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            client.send(<span class="string">&#x27;\n&#x27;</span>.join(TextList).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">        cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#每当有客户连接后，就启动一个线程为其服务</span></span><br><span class="line">        <span class="comment">#加入线程中跑，加入函数为send_client，参数为client,nickname</span></span><br><span class="line">        threading.Thread(target=send_client, args=(client,nickname,)).start()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">repr</span>(e))</span><br></pre></td></tr></table></figure><h3 id="065"><a class="markdownIt-Anchor" href="#065"></a> <strong>0.65</strong></h3><p><strong>作用：0.6基础上的修改（显示在线人数和历史消息暂时删了，仅保留了聊天功能），先能用……还要解决子线程如何关闭的问题……</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取当前主机的IP地址</span></span><br><span class="line">port = <span class="number">9999</span> <span class="comment">#设置防火墙开放端口</span></span><br><span class="line">SocketList = [] <span class="comment">#存储客户端套接字的列表</span></span><br><span class="line">TextList = [] <span class="comment">#存储聊天记录</span></span><br><span class="line">Nickname = [] <span class="comment">#存储用户呢称</span></span><br><span class="line">cnt = <span class="number">0</span> <span class="comment">#当前客户端人数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket() <span class="comment">#创建server对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定</span></span><br><span class="line">server.listen() <span class="comment">#监听</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;服务器准备就绪！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收一个客户端连接，及其发送来数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接受客户端发送来的数据</span></span><br><span class="line">        <span class="keyword">return</span> s.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment">#客户端异常，连接失败，则删除该socket</span></span><br><span class="line">        <span class="comment"># print(str(addr)+&#x27;已下线！&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(nickname + <span class="string">&#x27;已下线！&#x27;</span>)</span><br><span class="line">        SocketList.remove(s)</span><br><span class="line">        Nickname.remove(nickname)</span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">            sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已下线！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#多线程：将收到的消息发送给所有客户端</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># s.send((&#x27;,&#x27;.join(Nickname)).encode(&#x27;utf-8&#x27;)) #将用户列表发送给各客户端</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = read_client(s,nickname) <span class="comment">#客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> content <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#如果没有结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#如果有将消息保存到历史记录</span></span><br><span class="line">                <span class="comment"># TextList.append(str(addr)+&#x27;: &#x27;+content)</span></span><br><span class="line">                TextList.append(nickname + <span class="string">&#x27;: &#x27;</span> + content)</span><br><span class="line">            <span class="comment">#将一个客户端发送过来的数据广播给其他客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((nickname + <span class="string">&#x27;: &#x27;</span> + content).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># print(repr())</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;广播未成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept()</span><br><span class="line">    SocketList.append(client)</span><br><span class="line"></span><br><span class="line">    nickname = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(str(addr)+&#x27;已加入！&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> nickname <span class="keyword">in</span> Nickname:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> nickname+<span class="built_in">str</span>(i) <span class="keyword">in</span> Nickname:</span><br><span class="line">                i = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nickname = nickname + <span class="built_in">str</span>(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    Nickname.append(nickname)</span><br><span class="line">    <span class="built_in">print</span>(nickname + <span class="string">&#x27;已加入！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">        sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已加入！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># #历史消息生成</span></span><br><span class="line">    <span class="comment"># if len(TextList)==0:</span></span><br><span class="line">    <span class="comment">#     client.send(&#x27;No message.&#x27;.encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">    <span class="comment"># else:</span></span><br><span class="line">    <span class="comment">#     client.send(&#x27;\n&#x27;.join(TextList).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line"></span><br><span class="line">    cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#每当有客户连接后，就启动一个线程为其服务</span></span><br><span class="line">    <span class="comment">#加入线程中跑，加入函数为send_client，参数为client,nickname</span></span><br><span class="line">    threading.Thread(target=send_client, args=(client,nickname,)).start()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox <span class="comment">#弹窗库</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> scrolledtext  <span class="comment">#滚动文本框</span></span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname()</span><br><span class="line">server_port = <span class="number">9999</span></span><br><span class="line"></span><br><span class="line">client = socket.socket() <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#登入窗口：输入呢称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">LoginWindow</span>():</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · 登录&#x27;</span>) <span class="comment">#窗口标题</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;300x150&#x27;</span>) <span class="comment">#窗口大小</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>) <span class="comment">#改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line">    nickname = StringVar() <span class="comment">#昵称变量（对象）:在使用界面编程的时候，有些时候是需要跟踪变量的值的变化，以保证值的变更随时可以显示在界面上</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将窗口大小设置为不可变</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录函数（检查用户名是否为空，以及长度）</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Login_in</span>():</span></span><br><span class="line">        name = nickname.get() <span class="comment">#????</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名为空！&#x27;</span>) <span class="comment">#消息警告框</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(name) &gt; <span class="number">10</span>:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名过长！最多为十个字符！&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            root.destroy()</span><br><span class="line">            client.connect((server_host, server_port))  <span class="comment"># 连接服务端，指定主机和端口</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line">            client.send(name.encode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># 传递用户昵称</span></span><br><span class="line">            ChatRoom(name)  <span class="comment"># 打开聊天窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录按钮、输入提示标签、输入框</span></span><br><span class="line">    Button(root, text=<span class="string">&quot;登录&quot;</span>, command=Login_in, width=<span class="number">8</span>, height=<span class="number">1</span>).place(x=<span class="number">100</span>, y=<span class="number">90</span>, width=<span class="number">100</span>, height=<span class="number">35</span>)</span><br><span class="line">    Label(root, text=<span class="string">&#x27;请输入昵称&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">12</span>)).place(x=<span class="number">10</span>, y=<span class="number">20</span>, height=<span class="number">50</span>, width=<span class="number">80</span>)</span><br><span class="line">    Entry(root, textvariable=nickname, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">11</span>)).place(x=<span class="number">100</span>, y=<span class="number">30</span>, height=<span class="number">30</span>, width=<span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#聊天窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChatRoom</span>(<span class="params">nickname</span>):</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.geometry(<span class="string">&#x27;650x400&#x27;</span>)  <span class="comment"># 窗口大小</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 将窗口大小设置为不可变</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>)  <span class="comment"># 改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    <span class="comment"># if content != &#x27;No message.&#x27;:</span></span><br><span class="line">    <span class="comment">#     past_text = content + &#x27;\n------以上是历史消息------\n&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从服务器端获取当前用户列表</span></span><br><span class="line">    <span class="comment"># UserList = []</span></span><br><span class="line">    <span class="comment"># UserList = client.recv(2048).decode(&#x27;utf-8&#x27;).split(&#x27;,&#x27;)</span></span><br><span class="line">    <span class="comment"># UserList.insert(0, &#x27;------当前用户列表------&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 窗口标题</span></span><br><span class="line">    <span class="comment"># nickname = UserList[len(UserList)-1]</span></span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · &#x27;</span> + nickname)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># name_text = StringVar()</span></span><br><span class="line">    <span class="comment"># name_text.set(UserList)  # 用户列表文本设置</span></span><br><span class="line">    <span class="comment"># listbox1 = Listbox(root, listvariable=name_text)  # 用户列表，使用Listbox组件</span></span><br><span class="line">    <span class="comment"># listbox1.place(x=5, y=0, width=500, height=400)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天界面</span></span><br><span class="line">    content = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    ChatBox = scrolledtext.ScrolledText(root)  <span class="comment"># 聊天信息窗口，使用ScrolledText组件制作</span></span><br><span class="line">    ChatBox.place(x=<span class="number">5</span>, y=<span class="number">0</span>, width=<span class="number">500</span>, height=<span class="number">300</span>)</span><br><span class="line">    <span class="comment"># ChatBox.pack()</span></span><br><span class="line">    ChatBox.insert(<span class="string">&#x27;end&#x27;</span>,content)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_server</span>(<span class="params">c</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = c.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            ChatBox.insert(<span class="string">&#x27;end&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>+content+<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">            ChatBox.see(tkinter.END)  <span class="comment"># ScrolledText组件方法，自动定位到结尾，否则只有消息在涨，窗口拖动条不动</span></span><br><span class="line">            ChatBox.update()  <span class="comment"># 更新聊天信息窗口，显示新的信息</span></span><br><span class="line">    threading.Thread(target=read_server, args=(client,)).start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天输入框</span></span><br><span class="line">    word = StringVar()</span><br><span class="line">    word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    SentBox = Entry(root,width=<span class="number">140</span>,textvariable=word) <span class="comment">#建一个输入框</span></span><br><span class="line">    SentBox.place(x=<span class="number">5</span>,y=<span class="number">305</span>,width=<span class="number">600</span>,height=<span class="number">95</span>) <span class="comment">#设置大小和位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送按钮</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendtext</span>():</span></span><br><span class="line">        content = word.get() <span class="comment">#获得文本内容</span></span><br><span class="line">        <span class="keyword">if</span> content==<span class="string">&#x27;end&#x27;</span>:</span><br><span class="line">            client.close()</span><br><span class="line">        client.send(content.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">#用了一个标记记录点击的状态，不管内容是什么点了就变</span></span><br><span class="line"></span><br><span class="line">    sendButton = Button(root, text=<span class="string">&#x27;发 送&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">18</span>), bg=<span class="string">&#x27;white&#x27;</span>, command=sendtext)</span><br><span class="line">    sendButton.place(x=<span class="number">500</span>, y=<span class="number">305</span>, width=<span class="number">150</span>, height=<span class="number">95</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line">LoginWindow()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="067"><a class="markdownIt-Anchor" href="#067"></a> <strong>0.67</strong></h3><p><strong>作用：0.65上改了点细节（可视化界面加了个图片），先能用……要解决子线程关闭问题</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务器</span></span><br><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取当前主机的IP地址</span></span><br><span class="line">port = <span class="number">9999</span> <span class="comment">#设置防火墙开放端口</span></span><br><span class="line">SocketList = [] <span class="comment">#存储客户端套接字的列表</span></span><br><span class="line">TextList = [] <span class="comment">#存储聊天记录</span></span><br><span class="line">Nickname = [] <span class="comment">#存储用户呢称</span></span><br><span class="line">cnt = <span class="number">0</span> <span class="comment">#当前客户端人数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket() <span class="comment">#创建server对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定</span></span><br><span class="line">server.listen() <span class="comment">#监听</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;服务器准备就绪！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收一个客户端连接，及其发送来数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接受客户端发送来的数据</span></span><br><span class="line">        <span class="keyword">return</span> s.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment">#客户端异常，连接失败，则删除该socket</span></span><br><span class="line">        <span class="comment"># print(str(addr)+&#x27;已下线！&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(nickname + <span class="string">&#x27;已下线！&#x27;</span>)</span><br><span class="line">        SocketList.remove(s)</span><br><span class="line">        Nickname.remove(nickname)</span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">            sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已下线！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#多线程：将收到的消息发送给所有客户端</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># s.send((&#x27;,&#x27;.join(Nickname)).encode(&#x27;utf-8&#x27;)) #将用户列表发送给各客户端</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = read_client(s,nickname) <span class="comment">#客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> content <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#如果没有结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#如果有将消息保存到历史记录</span></span><br><span class="line">                <span class="comment"># TextList.append(str(addr)+&#x27;: &#x27;+content)</span></span><br><span class="line">                TextList.append(nickname + <span class="string">&#x27;: &#x27;</span> + content)</span><br><span class="line">            <span class="comment">#将一个客户端发送过来的数据广播给其他客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((nickname + <span class="string">&#x27;: &#x27;</span> + content).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># print(repr())</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;广播未成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept()</span><br><span class="line">    SocketList.append(client)</span><br><span class="line"></span><br><span class="line">    nickname = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(str(addr)+&#x27;已加入！&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> nickname <span class="keyword">in</span> Nickname:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> nickname+<span class="built_in">str</span>(i) <span class="keyword">in</span> Nickname:</span><br><span class="line">                i = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nickname = nickname + <span class="built_in">str</span>(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    Nickname.append(nickname)</span><br><span class="line">    <span class="built_in">print</span>(nickname + <span class="string">&#x27;已加入！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">        sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已加入！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># #历史消息生成</span></span><br><span class="line">    <span class="comment"># if len(TextList)==0:</span></span><br><span class="line">    <span class="comment">#     client.send(&#x27;No message.&#x27;.encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">    <span class="comment"># else:</span></span><br><span class="line">    <span class="comment">#     client.send(&#x27;\n&#x27;.join(TextList).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line"></span><br><span class="line">    cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#每当有客户连接后，就启动一个线程为其服务</span></span><br><span class="line">    <span class="comment">#加入线程中跑，加入函数为send_client，参数为client,nickname</span></span><br><span class="line">    threading.Thread(target=send_client, args=(client,nickname,)).start()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox <span class="comment">#弹窗库</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> scrolledtext  <span class="comment">#滚动文本框</span></span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname()</span><br><span class="line">server_port = <span class="number">9999</span></span><br><span class="line"></span><br><span class="line">client = socket.socket() <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#登入窗口：输入呢称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">LoginWindow</span>():</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · 登录&#x27;</span>) <span class="comment">#窗口标题</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;300x150&#x27;</span>) <span class="comment">#窗口大小</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>) <span class="comment">#改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line">    nickname = StringVar() <span class="comment">#昵称变量（对象）:在使用界面编程的时候，有些时候是需要跟踪变量的值的变化，以保证值的变更随时可以显示在界面上</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将窗口大小设置为不可变</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录函数（检查用户名是否为空，以及长度）</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Login_in</span>():</span></span><br><span class="line">        name = nickname.get() <span class="comment">#????</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名为空！&#x27;</span>) <span class="comment">#消息警告框</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(name) &gt; <span class="number">10</span>:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名过长！最多为十个字符！&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            root.destroy()</span><br><span class="line">            client.connect((server_host, server_port))  <span class="comment"># 连接服务端，指定主机和端口</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line">            client.send(name.encode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># 传递用户昵称</span></span><br><span class="line">            ChatRoom(name)  <span class="comment"># 打开聊天窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录按钮、输入提示标签、输入框</span></span><br><span class="line">    Button(root, text=<span class="string">&quot;登录&quot;</span>, command=Login_in, width=<span class="number">8</span>, height=<span class="number">1</span>).place(x=<span class="number">100</span>, y=<span class="number">90</span>, width=<span class="number">100</span>, height=<span class="number">35</span>)</span><br><span class="line">    Label(root, text=<span class="string">&#x27;请输入昵称&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">12</span>)).place(x=<span class="number">10</span>, y=<span class="number">20</span>, height=<span class="number">50</span>, width=<span class="number">80</span>)</span><br><span class="line">    Entry(root, textvariable=nickname, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">11</span>)).place(x=<span class="number">100</span>, y=<span class="number">30</span>, height=<span class="number">30</span>, width=<span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#聊天窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChatRoom</span>(<span class="params">nickname</span>):</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.geometry(<span class="string">&#x27;650x400&#x27;</span>)  <span class="comment"># 窗口大小</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 将窗口大小设置为不可变</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>)  <span class="comment"># 改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    <span class="comment"># if content != &#x27;No message.&#x27;:</span></span><br><span class="line">    <span class="comment">#     past_text = content + &#x27;\n------以上是历史消息------\n&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从服务器端获取当前用户列表</span></span><br><span class="line">    <span class="comment"># UserList = []</span></span><br><span class="line">    <span class="comment"># UserList = client.recv(2048).decode(&#x27;utf-8&#x27;).split(&#x27;,&#x27;)</span></span><br><span class="line">    <span class="comment"># UserList.insert(0, &#x27;------当前用户列表------&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 窗口标题</span></span><br><span class="line">    <span class="comment"># nickname = UserList[len(UserList)-1]</span></span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · &#x27;</span> + nickname)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># name_text = StringVar()</span></span><br><span class="line">    <span class="comment"># name_text.set(UserList)  # 用户列表文本设置</span></span><br><span class="line">    <span class="comment"># listbox1 = Listbox(root, listvariable=name_text)  # 用户列表，使用Listbox组件</span></span><br><span class="line">    <span class="comment"># listbox1.place(x=5, y=0, width=500, height=400)</span></span><br><span class="line"></span><br><span class="line">    img_png = PhotoImage(file=<span class="string">&#x27;QQ图片20220901201640.png&#x27;</span>)</span><br><span class="line">    label_img = Label(root, image=img_png)</span><br><span class="line">    label_img.place(x=<span class="number">400</span>, y=<span class="number">0</span>, width=<span class="number">350</span>, height=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天界面</span></span><br><span class="line">    content = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    ChatBox = scrolledtext.ScrolledText(root)  <span class="comment"># 聊天信息窗口，使用ScrolledText组件制作</span></span><br><span class="line">    ChatBox.place(x=<span class="number">5</span>, y=<span class="number">0</span>, width=<span class="number">470</span>, height=<span class="number">300</span>)</span><br><span class="line">    <span class="comment"># ChatBox.pack()</span></span><br><span class="line">    ChatBox.insert(<span class="string">&#x27;end&#x27;</span>,content)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_server</span>(<span class="params">c</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = c.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            ChatBox.insert(<span class="string">&#x27;end&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>+content+<span class="string">&#x27;\n\n&#x27;</span>)</span><br><span class="line">            ChatBox.see(tkinter.END)  <span class="comment"># ScrolledText组件方法，自动定位到结尾，否则只有消息在涨，窗口拖动条不动</span></span><br><span class="line">            ChatBox.update()  <span class="comment"># 更新聊天信息窗口，显示新的信息</span></span><br><span class="line">    threading.Thread(target=read_server, args=(client,)).start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天输入框</span></span><br><span class="line">    word = StringVar()</span><br><span class="line">    word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    SentBox = Entry(root,width=<span class="number">140</span>,textvariable=word) <span class="comment">#建一个输入框</span></span><br><span class="line">    SentBox.place(x=<span class="number">5</span>,y=<span class="number">305</span>,width=<span class="number">475</span>,height=<span class="number">90</span>) <span class="comment">#设置大小和位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送按钮</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendtext</span>():</span></span><br><span class="line">        content = word.get() <span class="comment">#获得文本内容</span></span><br><span class="line">        <span class="keyword">if</span> content==<span class="string">&#x27;end&#x27;</span>:</span><br><span class="line">            client.close()</span><br><span class="line">        client.send(content.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">#用了一个标记记录点击的状态，不管内容是什么点了就变</span></span><br><span class="line"></span><br><span class="line">    sendButton = Button(root, text=<span class="string">&#x27;发 送&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">18</span>), bg=<span class="string">&#x27;white&#x27;</span>, command=sendtext)</span><br><span class="line">    sendButton.place(x=<span class="number">490</span>, y=<span class="number">308</span>, width=<span class="number">150</span>, height=<span class="number">85</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line">LoginWindow()</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/zc666ying/article/details/104444733">(29条消息) Python—多线程编程（一）线程的创建，管理，停止_onesalatree的博客-CSDN博客_python线程开始结束</a></p><p><a href="https://blog.csdn.net/wangyunhe5120/article/details/121846368">(29条消息) python GUI 多线程 暂停 恢复 结束_为此残生的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_41082014/article/details/92085252">(29条消息) Python多线程的退出控制_Messy…的博客-CSDN博客_python关闭线程的方法</a></p><p><a href="https://blog.csdn.net/qq_45956730/article/details/124120897">(29条消息) python多线程之 终止子线程_水w的博客-CSDN博客_python 结束线程</a></p></blockquote><h1 id="实训一阶段2可靠传输"><a class="markdownIt-Anchor" href="#实训一阶段2可靠传输"></a> 实训一阶段2：可靠传输</h1><blockquote><p>要求：</p><p>了解聊天程序的一般原理；</p><p>按照带流量控制的协议改造聊天程序；</p><p>编程语言不限；</p><p>要能在两台PC上运行。</p></blockquote><h2 id="初级阶段5可靠传输与流量控制"><a class="markdownIt-Anchor" href="#初级阶段5可靠传输与流量控制"></a> 初级阶段5：可靠传输与流量控制</h2><blockquote><p>可靠传输：使用<a href="https://zhuanlan.zhihu.com/p/405221648">差错检测技术</a>，接收方的数据链路层就可以检测出帧在传输过程中是否产生了误码。</p><p>如果可靠传输，能够在检测出误码之后，返回一个通知帧，告诉发送方之前传输的帧存在误码，也许可以解决误码重传的问题</p><ul><li>数据链路层传输差错：比特差错、分组丢失、分组失序、分组重复</li><li><strong>可靠传输</strong>：想方法实现<strong>发送端发送什么，接收端就收到什么</strong></li></ul></blockquote><p><img src="https://img-blog.csdnimg.cn/20210424181454154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1Nzc4Njc2,size_16,color_FFFFFF,t_70" alt="img" /></p><p><strong>计算机网络之流量控制（停止-等待协议1:1、滑动窗口：后退N帧协议GBN、选择重传协议SR）、滑动窗口、可靠传输机制</strong></p><p>1.什么是<a href="https://so.csdn.net/so/search?q=%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6&amp;spm=1001.2101.3001.7020">流量控制</a>？</p><ul><li>流量控制是数据链路层的一种功能，流量控制对数据链路上的帧的发送速率进行控制，以使接收方有足够的缓冲空间来接受每个帧</li><li>流量控制的基本方法是由接收方控制发送方发送数据的速率</li><li>常见的流量控制方式有两种：<code>停止-等待协议、滑动窗口协议</code></li></ul><p>2.什么是可靠传输机制？</p><ul><li><p>​可靠传输机制是为了使数据可以正确稳定的传输和接收而制定的规则。</p></li><li><p>数据链路层的可靠传输通常使用确认和超时重传两种机制来完成。</p></li><li><p>确认是一种无数据的控制帧，这种控制帧使得接收方可以让发送方知道哪些内容被正确接收。有些情况下为了提高传输效率，将确认捎带在一个回复帧中，称为捎带确认。</p></li><li><p>超时重传是指发送方在发送某一个数据帧以后就开始一个计时器，在一定时间内如果没有得到发送的数据帧的确认帧，那么就重新发送该数据帧，直到发送成功为止。</p></li><li><p>自动重传请求（Auto Repeat reQuest，ARQ），通过接收方请求发送方重传出错的数据帧来恢复出错的帧，是通信中用于处理信道所带来差错的方法之一。</p></li><li><p>传统自动重传请求分为三种，即停等式（Stop-and-Wait）ARQ、后退N帧（Go-Back-N）ARQ以及选择性重传（Selective Repeat）ARQ。后两种协议是滑动窗口技术与请求重发技术的结合，由于窗口尺寸开到足够大，帧在线路上可以连续地流动，因此又称为连续ARQ协议。</p></li></ul><p>3.什么是滑动窗口机制？</p><ul><li>滑动窗口协议的基本原理就是在任意时刻，发送方都维持了一个连续的允许发送的帧的序号，称为发送窗口；同时，接收方也维持了一个连续的允许接收的帧的序号，称为接收窗口。</li><li>发送窗口和接收窗口的序号的上下界不一定要一样，甚至大小也可以不同。<br />不同的滑动窗口协议窗口大小一般不同。</li><li>发送方窗口内的序列号代表了那些已经被发送，但是还没有被确认的帧，或者是那些可以被发送的帧。</li></ul><p>PS：直接看王道考研-计算机网络 3.4</p><h3 id="06-2"><a class="markdownIt-Anchor" href="#06-2"></a> <strong>0.6</strong></h3><p><strong>作用：CRC校验有问题，基础功能实现</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox <span class="comment">#弹窗库</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> scrolledtext  <span class="comment">#滚动文本框</span></span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname()</span><br><span class="line">server_port = <span class="number">9999</span></span><br><span class="line"></span><br><span class="line">client = socket.socket() <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#登入窗口：输入呢称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">LoginWindow</span>():</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · 登录&#x27;</span>) <span class="comment">#窗口标题</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;300x150&#x27;</span>) <span class="comment">#窗口大小</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>) <span class="comment">#改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line">    nickname = StringVar() <span class="comment">#昵称变量（对象）:在使用界面编程的时候，有些时候是需要跟踪变量的值的变化，以保证值的变更随时可以显示在界面上</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将窗口大小设置为不可变</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录函数（检查用户名是否为空，以及长度）</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Login_in</span>():</span></span><br><span class="line">        name = nickname.get() <span class="comment">#????</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名为空！&#x27;</span>) <span class="comment">#消息警告框</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(name) &gt; <span class="number">10</span>:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名过长！最多为十个字符！&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            root.destroy()</span><br><span class="line">            client.connect((server_host, server_port))  <span class="comment"># 连接服务端，指定主机和端口</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line">            client.send(name.encode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># 传递用户昵称</span></span><br><span class="line">            ChatRoom(name)  <span class="comment"># 打开聊天窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录按钮、输入提示标签、输入框</span></span><br><span class="line">    Button(root, text=<span class="string">&quot;登录&quot;</span>, command=Login_in, width=<span class="number">8</span>, height=<span class="number">1</span>).place(x=<span class="number">100</span>, y=<span class="number">90</span>, width=<span class="number">100</span>, height=<span class="number">35</span>)</span><br><span class="line">    Label(root, text=<span class="string">&#x27;请输入昵称&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">12</span>)).place(x=<span class="number">10</span>, y=<span class="number">20</span>, height=<span class="number">50</span>, width=<span class="number">80</span>)</span><br><span class="line">    Entry(root, textvariable=nickname, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">11</span>)).place(x=<span class="number">100</span>, y=<span class="number">30</span>, height=<span class="number">30</span>, width=<span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#聊天窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChatRoom</span>(<span class="params">nickname</span>):</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.geometry(<span class="string">&#x27;650x400&#x27;</span>)  <span class="comment"># 窗口大小</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 将窗口大小设置为不可变</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>)  <span class="comment"># 改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    <span class="comment"># if content != &#x27;No message.&#x27;:</span></span><br><span class="line">    <span class="comment">#     past_text = content + &#x27;\n------以上是历史消息------\n&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从服务器端获取当前用户列表</span></span><br><span class="line">    <span class="comment"># UserList = []</span></span><br><span class="line">    <span class="comment"># UserList = client.recv(2048).decode(&#x27;utf-8&#x27;).split(&#x27;,&#x27;)</span></span><br><span class="line">    <span class="comment"># UserList.insert(0, &#x27;------当前用户列表------&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 窗口标题</span></span><br><span class="line">    <span class="comment"># nickname = UserList[len(UserList)-1]</span></span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · &#x27;</span> + nickname)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># name_text = StringVar()</span></span><br><span class="line">    <span class="comment"># name_text.set(UserList)  # 用户列表文本设置</span></span><br><span class="line">    <span class="comment"># listbox1 = Listbox(root, listvariable=name_text)  # 用户列表，使用Listbox组件</span></span><br><span class="line">    <span class="comment"># listbox1.place(x=5, y=0, width=500, height=400)</span></span><br><span class="line"></span><br><span class="line">    img_png = PhotoImage(file=<span class="string">&#x27;QQ图片20220901201640.png&#x27;</span>)</span><br><span class="line">    label_img = Label(root, image=img_png)</span><br><span class="line">    label_img.place(x=<span class="number">400</span>, y=<span class="number">0</span>, width=<span class="number">350</span>, height=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天界面</span></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    ChatBox = scrolledtext.ScrolledText(root)  <span class="comment"># 聊天信息窗口，使用ScrolledText组件制作</span></span><br><span class="line">    ChatBox.place(x=<span class="number">5</span>, y=<span class="number">0</span>, width=<span class="number">470</span>, height=<span class="number">300</span>)</span><br><span class="line">    <span class="comment"># ChatBox.pack()</span></span><br><span class="line">    <span class="comment"># ChatBox.insert(&#x27;end&#x27;,content)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_server</span>(<span class="params">c</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = c.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            ChatBox.insert(<span class="string">&#x27;end&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>+content+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            ChatBox.see(tkinter.END)  <span class="comment"># ScrolledText组件方法，自动定位到结尾，否则只有消息在涨，窗口拖动条不动</span></span><br><span class="line">            ChatBox.update()  <span class="comment"># 更新聊天信息窗口，显示新的信息</span></span><br><span class="line">    threading.Thread(target=read_server, args=(client,)).start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天输入框</span></span><br><span class="line">    word = StringVar()</span><br><span class="line">    word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    SentBox = Entry(root,width=<span class="number">140</span>,textvariable=word) <span class="comment">#建一个输入框</span></span><br><span class="line">    SentBox.place(x=<span class="number">5</span>,y=<span class="number">305</span>,width=<span class="number">475</span>,height=<span class="number">90</span>) <span class="comment">#设置大小和位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送按钮</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendtext</span>():</span></span><br><span class="line">        content = word.get() <span class="comment">#获得文本内容</span></span><br><span class="line">        <span class="keyword">if</span> content==<span class="string">&#x27;end&#x27;</span>:</span><br><span class="line">            client.close()</span><br><span class="line">        client.send(content.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">#用了一个标记记录点击的状态，不管内容是什么点了就变</span></span><br><span class="line"></span><br><span class="line">    sendButton = Button(root, text=<span class="string">&#x27;发 送&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">18</span>), bg=<span class="string">&#x27;white&#x27;</span>, command=sendtext)</span><br><span class="line">    sendButton.place(x=<span class="number">490</span>, y=<span class="number">308</span>, width=<span class="number">150</span>, height=<span class="number">85</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line">LoginWindow()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取当前主机的IP地址</span></span><br><span class="line">port = <span class="number">9999</span> <span class="comment">#设置防火墙开放端口</span></span><br><span class="line">SocketList = [] <span class="comment">#存储客户端套接字的列表</span></span><br><span class="line">TextList = [] <span class="comment">#存储聊天记录</span></span><br><span class="line">Nickname = [] <span class="comment">#存储用户呢称</span></span><br><span class="line">cnt = <span class="number">0</span> <span class="comment">#当前客户端人数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket() <span class="comment">#创建server对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定</span></span><br><span class="line">server.listen() <span class="comment">#监听</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;服务器准备就绪！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CRC</span>(<span class="params">crc,poly=<span class="string">&#x27;11001&#x27;</span></span>):</span></span><br><span class="line">    test_crc = <span class="built_in">int</span>(crc,<span class="number">16</span>) <span class="comment">#将str类型转化成16进制</span></span><br><span class="line">    poly_crc8 = <span class="built_in">int</span>(poly,<span class="number">16</span>)</span><br><span class="line">    <span class="comment"># print(test_crc,poly_crc8)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> bit <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">        <span class="keyword">if</span> test_crc&amp;<span class="number">0x800</span> != <span class="number">0</span>: <span class="comment">#最高位是否为1</span></span><br><span class="line">            test_crc &lt;&lt;= <span class="number">1</span></span><br><span class="line">            test_crc ^= poly_crc8</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            test_crc &lt;&lt;= <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(test_crc)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">hex</span>(test_crc)</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收一个客户端连接，及其发送来数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接受客户端发送来的数据</span></span><br><span class="line">        <span class="keyword">return</span> s.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment">#客户端异常，连接失败，则删除该socket</span></span><br><span class="line">        <span class="comment"># print(str(addr)+&#x27;已下线！&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(nickname + <span class="string">&#x27;已下线！&#x27;</span>)</span><br><span class="line">        SocketList.remove(s)</span><br><span class="line">        Nickname.remove(nickname)</span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">            sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已下线！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#多线程：将收到的消息发送给所有客户端</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># s.send((&#x27;,&#x27;.join(Nickname)).encode(&#x27;utf-8&#x27;)) #将用户列表发送给各客户端</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = read_client(s,nickname) <span class="comment">#客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> content <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#如果没有结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#如果有将消息保存到历史记录</span></span><br><span class="line">                <span class="comment"># TextList.append(str(addr)+&#x27;: &#x27;+content)</span></span><br><span class="line">                TextList.append(nickname + <span class="string">&#x27;: &#x27;</span> + content)</span><br><span class="line">            <span class="comment">#将一个客户端发送过来的数据广播给其他客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((nickname + <span class="string">&#x27;: &#x27;</span> + content).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">            data = CRC(content)</span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((<span class="string">&#x27;Teacher: &#x27;</span> + data).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># print(repr())</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;广播未成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">QianYan = [<span class="string">&#x27;你好呀！今天我们一起来学习SW。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;可靠传输机制是为了使数据可以正确稳定的传输和接收而制定的规则。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;流量控制是数据链路层的一种功能，流量控制对数据链路上的帧的发送速率进行控制，以使接收方有足够的缓冲空间来接受每个帧。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;流量控制的基本方法是由接收方控制发送方发送数据的速率。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;常见的流量控制方式有两种：`停止-等待协议、滑动窗口协议&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;那么，让我们开始体验停止-等待协议SW的魅力吧！&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;\n\n请输入十六进制数据&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept()</span><br><span class="line">    SocketList.append(client)</span><br><span class="line"></span><br><span class="line">    nickname = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(str(addr)+&#x27;已加入！&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> nickname <span class="keyword">in</span> Nickname:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> nickname+<span class="built_in">str</span>(i) <span class="keyword">in</span> Nickname:</span><br><span class="line">                i = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nickname = nickname + <span class="built_in">str</span>(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    Nickname.append(nickname)</span><br><span class="line">    <span class="built_in">print</span>(nickname + <span class="string">&#x27;已加入！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> QianYan:</span><br><span class="line">            sock.send((<span class="string">&#x27;Teacher: &#x27;</span> + i).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#每当有客户连接后，就启动一个线程为其服务</span></span><br><span class="line">    <span class="comment">#加入线程中跑，加入函数为send_client，参数为client,nickname</span></span><br><span class="line">    threading.Thread(target=send_client, args=(client,nickname,)).start()</span><br></pre></td></tr></table></figure><h3 id="065-2"><a class="markdownIt-Anchor" href="#065-2"></a> <strong>0.65</strong></h3><p><strong>作用：早上灵光一现，以为CRC是取模了……</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取当前主机的IP地址</span></span><br><span class="line">port = <span class="number">9999</span> <span class="comment">#设置防火墙开放端口</span></span><br><span class="line">SocketList = [] <span class="comment">#存储客户端套接字的列表</span></span><br><span class="line">TextList = [] <span class="comment">#存储聊天记录</span></span><br><span class="line">Nickname = [] <span class="comment">#存储用户呢称</span></span><br><span class="line">cnt = <span class="number">0</span> <span class="comment">#当前客户端人数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket() <span class="comment">#创建server对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定</span></span><br><span class="line">server.listen() <span class="comment">#监听</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;服务器准备就绪！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">DEC</span>(<span class="params">data</span>):</span></span><br><span class="line">    s = data</span><br><span class="line">    d = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> s:</span><br><span class="line">        d = d*<span class="number">2</span> + (<span class="built_in">ord</span>(s[<span class="number">0</span>]) -<span class="built_in">ord</span>(<span class="string">&#x27;0&#x27;</span>))</span><br><span class="line">        s = s[<span class="number">1</span>:]</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CRC</span>(<span class="params">crc,poly=<span class="string">&#x27;11001&#x27;</span></span>):</span></span><br><span class="line">    p = DEC(poly)</span><br><span class="line">    c = DEC(crc+<span class="string">&#x27;0000&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(p,c)</span><br><span class="line">    res = c%p</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收一个客户端连接，及其发送来数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接受客户端发送来的数据</span></span><br><span class="line">        <span class="keyword">return</span> s.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment">#客户端异常，连接失败，则删除该socket</span></span><br><span class="line">        <span class="comment"># print(str(addr)+&#x27;已下线！&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(nickname + <span class="string">&#x27;已下线！&#x27;</span>)</span><br><span class="line">        SocketList.remove(s)</span><br><span class="line">        Nickname.remove(nickname)</span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">            sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已下线！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#多线程：将收到的消息发送给所有客户端</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># s.send((&#x27;,&#x27;.join(Nickname)).encode(&#x27;utf-8&#x27;)) #将用户列表发送给各客户端</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = read_client(s,nickname) <span class="comment">#客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> content <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#如果没有结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#如果有将消息保存到历史记录</span></span><br><span class="line">                <span class="comment"># TextList.append(str(addr)+&#x27;: &#x27;+content)</span></span><br><span class="line">                TextList.append(nickname + <span class="string">&#x27;: &#x27;</span> + content)</span><br><span class="line">            <span class="comment">#将一个客户端发送过来的数据广播给其他客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((nickname + <span class="string">&#x27;: &#x27;</span> + content).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">            data = CRC(content)</span><br><span class="line">            <span class="keyword">if</span> data==<span class="number">0</span>:</span><br><span class="line">                word = <span class="string">&#x27;发送帧没问题。&#x27;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                word = <span class="string">&#x27;发送帧有问题。&#x27;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((<span class="string">&#x27;Teacher: &#x27;</span> + word).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># print(repr())</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;广播未成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">QianYan = [<span class="string">&#x27;你好呀！今天我们一起来学习SW。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;可靠传输机制是为了使数据可以正确稳定的传输和接收而制定的规则。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;流量控制是数据链路层的一种功能，流量控制对数据链路上的帧的发送速率进行控制，以使接收方有足够的缓冲空间来接受每个帧。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;流量控制的基本方法是由接收方控制发送方发送数据的速率。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;常见的流量控制方式有两种：`停止-等待协议、滑动窗口协议&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;那么，让我们开始体验停止-等待协议SW的魅力吧！&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;\n\n请输入十六进制数据&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept()</span><br><span class="line">    SocketList.append(client)</span><br><span class="line"></span><br><span class="line">    nickname = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(str(addr)+&#x27;已加入！&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> nickname <span class="keyword">in</span> Nickname:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> nickname+<span class="built_in">str</span>(i) <span class="keyword">in</span> Nickname:</span><br><span class="line">                i = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nickname = nickname + <span class="built_in">str</span>(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    Nickname.append(nickname)</span><br><span class="line">    <span class="built_in">print</span>(nickname + <span class="string">&#x27;已加入！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> QianYan:</span><br><span class="line">            sock.send((<span class="string">&#x27;Teacher: &#x27;</span> + i).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#每当有客户连接后，就启动一个线程为其服务</span></span><br><span class="line">    <span class="comment">#加入线程中跑，加入函数为send_client，参数为client,nickname</span></span><br><span class="line">    threading.Thread(target=send_client, args=(client,nickname,)).start()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox <span class="comment">#弹窗库</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> scrolledtext  <span class="comment">#滚动文本框</span></span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname()</span><br><span class="line">server_port = <span class="number">9999</span></span><br><span class="line"></span><br><span class="line">client = socket.socket() <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#登入窗口：输入呢称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">LoginWindow</span>():</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · 登录&#x27;</span>) <span class="comment">#窗口标题</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;300x150&#x27;</span>) <span class="comment">#窗口大小</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>) <span class="comment">#改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line">    nickname = StringVar() <span class="comment">#昵称变量（对象）:在使用界面编程的时候，有些时候是需要跟踪变量的值的变化，以保证值的变更随时可以显示在界面上</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将窗口大小设置为不可变</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录函数（检查用户名是否为空，以及长度）</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Login_in</span>():</span></span><br><span class="line">        name = nickname.get() <span class="comment">#????</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名为空！&#x27;</span>) <span class="comment">#消息警告框</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(name) &gt; <span class="number">10</span>:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名过长！最多为十个字符！&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            root.destroy()</span><br><span class="line">            client.connect((server_host, server_port))  <span class="comment"># 连接服务端，指定主机和端口</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line">            client.send(name.encode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># 传递用户昵称</span></span><br><span class="line">            ChatRoom(name)  <span class="comment"># 打开聊天窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录按钮、输入提示标签、输入框</span></span><br><span class="line">    Button(root, text=<span class="string">&quot;登录&quot;</span>, command=Login_in, width=<span class="number">8</span>, height=<span class="number">1</span>).place(x=<span class="number">100</span>, y=<span class="number">90</span>, width=<span class="number">100</span>, height=<span class="number">35</span>)</span><br><span class="line">    Label(root, text=<span class="string">&#x27;请输入昵称&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">12</span>)).place(x=<span class="number">10</span>, y=<span class="number">20</span>, height=<span class="number">50</span>, width=<span class="number">80</span>)</span><br><span class="line">    Entry(root, textvariable=nickname, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">11</span>)).place(x=<span class="number">100</span>, y=<span class="number">30</span>, height=<span class="number">30</span>, width=<span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#聊天窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChatRoom</span>(<span class="params">nickname</span>):</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.geometry(<span class="string">&#x27;650x400&#x27;</span>)  <span class="comment"># 窗口大小</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 将窗口大小设置为不可变</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>)  <span class="comment"># 改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    <span class="comment"># if content != &#x27;No message.&#x27;:</span></span><br><span class="line">    <span class="comment">#     past_text = content + &#x27;\n------以上是历史消息------\n&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从服务器端获取当前用户列表</span></span><br><span class="line">    <span class="comment"># UserList = []</span></span><br><span class="line">    <span class="comment"># UserList = client.recv(2048).decode(&#x27;utf-8&#x27;).split(&#x27;,&#x27;)</span></span><br><span class="line">    <span class="comment"># UserList.insert(0, &#x27;------当前用户列表------&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 窗口标题</span></span><br><span class="line">    <span class="comment"># nickname = UserList[len(UserList)-1]</span></span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · &#x27;</span> + nickname)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># name_text = StringVar()</span></span><br><span class="line">    <span class="comment"># name_text.set(UserList)  # 用户列表文本设置</span></span><br><span class="line">    <span class="comment"># listbox1 = Listbox(root, listvariable=name_text)  # 用户列表，使用Listbox组件</span></span><br><span class="line">    <span class="comment"># listbox1.place(x=5, y=0, width=500, height=400)</span></span><br><span class="line"></span><br><span class="line">    img_png = PhotoImage(file=<span class="string">&#x27;QQ图片20220901201640.png&#x27;</span>)</span><br><span class="line">    label_img = Label(root, image=img_png)</span><br><span class="line">    label_img.place(x=<span class="number">400</span>, y=<span class="number">0</span>, width=<span class="number">350</span>, height=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天界面</span></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    ChatBox = scrolledtext.ScrolledText(root)  <span class="comment"># 聊天信息窗口，使用ScrolledText组件制作</span></span><br><span class="line">    ChatBox.place(x=<span class="number">5</span>, y=<span class="number">0</span>, width=<span class="number">470</span>, height=<span class="number">300</span>)</span><br><span class="line">    <span class="comment"># ChatBox.pack()</span></span><br><span class="line">    <span class="comment"># ChatBox.insert(&#x27;end&#x27;,content)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_server</span>(<span class="params">c</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = c.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            ChatBox.insert(<span class="string">&#x27;end&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>+content+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            ChatBox.see(tkinter.END)  <span class="comment"># ScrolledText组件方法，自动定位到结尾，否则只有消息在涨，窗口拖动条不动</span></span><br><span class="line">            ChatBox.update()  <span class="comment"># 更新聊天信息窗口，显示新的信息</span></span><br><span class="line">    threading.Thread(target=read_server, args=(client,)).start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天输入框</span></span><br><span class="line">    word = StringVar()</span><br><span class="line">    word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    SentBox = Entry(root,width=<span class="number">140</span>,textvariable=word) <span class="comment">#建一个输入框</span></span><br><span class="line">    SentBox.place(x=<span class="number">5</span>,y=<span class="number">305</span>,width=<span class="number">475</span>,height=<span class="number">90</span>) <span class="comment">#设置大小和位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送按钮</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendtext</span>():</span></span><br><span class="line">        content = word.get() <span class="comment">#获得文本内容</span></span><br><span class="line">        <span class="keyword">if</span> content==<span class="string">&#x27;end&#x27;</span>:</span><br><span class="line">            client.close()</span><br><span class="line">        client.send(content.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">#用了一个标记记录点击的状态，不管内容是什么点了就变</span></span><br><span class="line"></span><br><span class="line">    sendButton = Button(root, text=<span class="string">&#x27;发 送&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">18</span>), bg=<span class="string">&#x27;white&#x27;</span>, command=sendtext)</span><br><span class="line">    sendButton.place(x=<span class="number">490</span>, y=<span class="number">308</span>, width=<span class="number">150</span>, height=<span class="number">85</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line">LoginWindow()</span><br></pre></td></tr></table></figure><h3 id="07"><a class="markdownIt-Anchor" href="#07"></a> 0.7</h3><p><strong>作用：拿的网上的CRC但感觉还是错的……</strong></p><blockquote><p><a href="https://cn.bing.com/search?q=crc%E5%8E%9F%E7%90%86Python&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;pq=crc%E5%8E%9F%E7%90%86python&amp;sc=0-11&amp;sk=&amp;cvid=66D0F3FB7AC54F3683ABFEB1122DA0BF&amp;ghsh=0&amp;ghacc=0&amp;ghpl=">crc原理Python - Search (bing.com)</a></p><p><a href="https://blog.csdn.net/smallfox233/article/details/111242813">https://blog.csdn.net/smallfox233/article/details/111242813</a></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#服务端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">host = socket.gethostname() <span class="comment">#获取当前主机的IP地址</span></span><br><span class="line">port = <span class="number">9999</span> <span class="comment">#设置防火墙开放端口</span></span><br><span class="line">SocketList = [] <span class="comment">#存储客户端套接字的列表</span></span><br><span class="line">TextList = [] <span class="comment">#存储聊天记录</span></span><br><span class="line">Nickname = [] <span class="comment">#存储用户呢称</span></span><br><span class="line">cnt = <span class="number">0</span> <span class="comment">#当前客户端人数</span></span><br><span class="line"><span class="built_in">print</span>(host)</span><br><span class="line"></span><br><span class="line">server = socket.socket() <span class="comment">#创建server对象</span></span><br><span class="line">server.bind((host,port)) <span class="comment">#绑定</span></span><br><span class="line">server.listen() <span class="comment">#监听</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;服务器准备就绪！&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">TurnBin</span>(<span class="params">expression</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;将生成多项式转换为二进制字符串输出&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="comment"># 输入数据处理</span></span><br><span class="line">    expression = expression.upper()  <span class="comment"># 大写转换</span></span><br><span class="line">    lis = <span class="built_in">list</span>(expression.split(<span class="string">&quot;+&quot;</span>))  <span class="comment"># 以加号为标志进行分割</span></span><br><span class="line">    string = lis[-<span class="number">1</span>]  <span class="comment"># 多项式末尾的数字1</span></span><br><span class="line">    <span class="keyword">del</span> lis[-<span class="number">1</span>]</span><br><span class="line">    lis = lis[::-<span class="number">1</span>]  <span class="comment"># 倒序</span></span><br><span class="line">    <span class="comment">##    print(lis)</span></span><br><span class="line">    <span class="comment"># 二进制转换</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(lis)):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(string) == <span class="built_in">int</span>(lis[i][<span class="number">1</span>]):  <span class="comment"># 满足位数与变量的数字相同时</span></span><br><span class="line">            string += <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(lis[i][<span class="number">1</span>]) - <span class="built_in">len</span>(string)):  <span class="comment"># 用0补全相差的位数</span></span><br><span class="line">                string += <span class="string">&quot;0&quot;</span></span><br><span class="line">            string += <span class="string">&quot;1&quot;</span></span><br><span class="line">    <span class="keyword">return</span> string[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">XOR</span>(<span class="params">string1, string2</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;将两个二进制串进行异或操作，不同为1&#x27;&#x27;&#x27;</span></span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 输入数据处理</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(string1) &lt; <span class="built_in">len</span>(string2):  <span class="comment"># 若前者的位数不足时</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(string2) - <span class="built_in">len</span>(string1)):  <span class="comment"># 对string1的首位补0</span></span><br><span class="line">            string1 = <span class="string">&quot;0&quot;</span> + string1</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(string1) &gt; <span class="built_in">len</span>(string2):  <span class="comment"># 若后者的位数不足时</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(string1) - <span class="built_in">len</span>(string2)):  <span class="comment"># 对string2的首位补0</span></span><br><span class="line">            string2 = <span class="string">&quot;0&quot;</span> + string2</span><br><span class="line">    <span class="comment">##    print(string1,string2)</span></span><br><span class="line">    <span class="comment"># 异或计算</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(string1)):</span><br><span class="line">        <span class="keyword">if</span> string1[i] != string2[i]:</span><br><span class="line">            result += <span class="string">&quot;1&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result += <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="comment">##    print(result)</span></span><br><span class="line">    <span class="comment"># 输出数据处理</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(result)):  <span class="comment"># 消除异或结果中的无效0</span></span><br><span class="line">        <span class="keyword">if</span> result[i] == <span class="string">&quot;1&quot;</span>:  <span class="comment"># 找到第一个有效数据时</span></span><br><span class="line">            <span class="keyword">return</span> result[i::]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CRC</span>(<span class="params">string, expression</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;产生CRC校验码&#x27;&#x27;&#x27;</span></span><br><span class="line">    crc = <span class="string">&quot;&quot;</span>  <span class="comment"># 最终的crc校验码</span></span><br><span class="line">    <span class="comment"># 输入数据处理</span></span><br><span class="line">    bin_expression = TurnBin(expression)  <span class="comment"># 转换为二进制串</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(bin_expression) - <span class="number">1</span>):  <span class="comment"># 在二进制串末尾补0</span></span><br><span class="line">        string += <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="comment">##    print(string,bin_expression)</span></span><br><span class="line">    <span class="comment"># CRC计算</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(string)):  <span class="comment"># 遍历被除数二进制串</span></span><br><span class="line">        crc += string[i]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(crc) == <span class="built_in">len</span>(bin_expression):  <span class="comment"># 当位数足够异或计算时</span></span><br><span class="line">            crc = XOR(crc, bin_expression)</span><br><span class="line">    <span class="comment">##    print(crc)</span></span><br><span class="line">    <span class="comment"># 输出数据处理</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(crc) &lt; <span class="built_in">len</span>(bin_expression) - <span class="number">1</span>:  <span class="comment"># 当crc位数不足时</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(bin_expression) - <span class="built_in">len</span>(crc)):  <span class="comment"># 在首部补0</span></span><br><span class="line">            crc = <span class="string">&quot;0&quot;</span> + crc</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(crc) &gt; <span class="built_in">len</span>(bin_expression) - <span class="number">1</span>:  <span class="comment"># 当crc位数过多时</span></span><br><span class="line">        crc = crc[<span class="built_in">len</span>(crc) - <span class="built_in">len</span>(bin_expression) + <span class="number">1</span>::]  <span class="comment"># 切片，消除首部多余的0</span></span><br><span class="line">    <span class="keyword">return</span> crc</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CheckCRC</span>(<span class="params">string, expression=<span class="string">&#x27;x4+x3+1&#x27;</span></span>):</span>  <span class="comment"># 检测传输数据是否正确，并打印结果</span></span><br><span class="line">    <span class="comment"># 输入数据处理</span></span><br><span class="line">    bin_expression = TurnBin(expression)  <span class="comment"># 转换为二进制串</span></span><br><span class="line">    right_crc = string[<span class="built_in">len</span>(string) - <span class="built_in">len</span>(bin_expression) + <span class="number">1</span>::]  <span class="comment"># 原数据末尾的crc校验码</span></span><br><span class="line">    <span class="comment"># CRC计算</span></span><br><span class="line">    crc = CRC(string[:<span class="built_in">len</span>(string) - <span class="built_in">len</span>(bin_expression) + <span class="number">1</span>:], expression)</span><br><span class="line">    <span class="comment"># 检验</span></span><br><span class="line">    <span class="keyword">if</span> right_crc == crc:  <span class="comment"># 当尾部的CRC校验码，与首部数据生成的CRC校验码一致时</span></span><br><span class="line">        word =<span class="string">&quot;数据传输过程正常..\n检测出的校验码：&quot;</span>+<span class="built_in">str</span>(crc)+<span class="string">&#x27;\n数据尾部校验码：&#x27;</span>+<span class="built_in">str</span>(right_crc)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        word =<span class="string">&quot;数据传输过程出错..\n检测出的校验码：&quot;</span>+<span class="built_in">str</span>(crc)+<span class="string">&#x27;\n数据尾部校验码：&#x27;</span>+<span class="built_in">str</span>(right_crc)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">        <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">        sock.send((<span class="string">&#x27;Teacher: &#x27;</span> + word).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#接收一个客户端连接，及其发送来数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接受客户端发送来的数据</span></span><br><span class="line">        <span class="keyword">return</span> s.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="comment">#客户端异常，连接失败，则删除该socket</span></span><br><span class="line">        <span class="comment"># print(str(addr)+&#x27;已下线！&#x27;)</span></span><br><span class="line">        <span class="built_in">print</span>(nickname + <span class="string">&#x27;已下线！&#x27;</span>)</span><br><span class="line">        SocketList.remove(s)</span><br><span class="line">        Nickname.remove(nickname)</span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">            sock.send((<span class="string">&#x27;系统消息：&#x27;</span> + nickname + <span class="string">&#x27;已下线！&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#多线程：将收到的消息发送给所有客户端</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_client</span>(<span class="params">s,nickname</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># s.send((&#x27;,&#x27;.join(Nickname)).encode(&#x27;utf-8&#x27;)) #将用户列表发送给各客户端</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = read_client(s,nickname) <span class="comment">#客户端消息</span></span><br><span class="line">            <span class="keyword">if</span> content <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#如果没有结束循环</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>: <span class="comment">#如果有将消息保存到历史记录</span></span><br><span class="line">                <span class="comment"># TextList.append(str(addr)+&#x27;: &#x27;+content)</span></span><br><span class="line">                TextList.append(nickname + <span class="string">&#x27;: &#x27;</span> + content)</span><br><span class="line">            <span class="comment">#将一个客户端发送过来的数据广播给其他客户端</span></span><br><span class="line">            <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">                <span class="comment"># sock.send((str(addr)+&#x27;: &#x27;+content).encode(&#x27;utf-8&#x27;))</span></span><br><span class="line">                sock.send((nickname + <span class="string">&#x27;: &#x27;</span> + content).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">            CheckCRC(content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="comment"># print(repr())</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;广播未成功！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">QianYan = [</span><br><span class="line">    <span class="string">&#x27;你好呀！今天我们一起来学习SW。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;可靠传输机制是为了使数据可以正确稳定的传输和接收而制定的规则。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;流量控制是数据链路层的一种功能，流量控制对数据链路上的帧的发送速率进行控制，以使接收方有足够的缓冲空间来接受每个帧。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;流量控制的基本方法是由接收方控制发送方发送数据的速率。&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;常见的流量控制方式有两种：`停止-等待协议、滑动窗口协议&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;那么，让我们开始体验停止-等待协议SW的魅力吧！&#x27;</span>,</span><br><span class="line">           <span class="string">&#x27;\n\n请输入高于4位的二进制数据&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    client,addr = server.accept()</span><br><span class="line">    SocketList.append(client)</span><br><span class="line"></span><br><span class="line">    nickname = client.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    <span class="comment"># print(str(addr)+&#x27;已加入！&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> nickname <span class="keyword">in</span> Nickname:</span><br><span class="line">        i = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> nickname+<span class="built_in">str</span>(i) <span class="keyword">in</span> Nickname:</span><br><span class="line">                i = i+<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nickname = nickname + <span class="built_in">str</span>(i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    Nickname.append(nickname)</span><br><span class="line">    <span class="built_in">print</span>(nickname + <span class="string">&#x27;已加入！&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> sock <span class="keyword">in</span> SocketList:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> QianYan:</span><br><span class="line">            sock.send((<span class="string">&#x27;Teacher: &#x27;</span> + i).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    cnt = cnt + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#每当有客户连接后，就启动一个线程为其服务</span></span><br><span class="line">    <span class="comment">#加入线程中跑，加入函数为send_client，参数为client,nickname</span></span><br><span class="line">    threading.Thread(target=send_client, args=(client,nickname,)).start()</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#客户端</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> tkinter.messagebox <span class="comment">#弹窗库</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> scrolledtext  <span class="comment">#滚动文本框</span></span><br><span class="line"></span><br><span class="line">server_host = socket.gethostname()</span><br><span class="line">server_port = <span class="number">9999</span></span><br><span class="line"></span><br><span class="line">client = socket.socket() <span class="comment">#创建socket对象</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connecting......&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#登入窗口：输入呢称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">LoginWindow</span>():</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · 登录&#x27;</span>) <span class="comment">#窗口标题</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;300x150&#x27;</span>) <span class="comment">#窗口大小</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>) <span class="comment">#改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line">    nickname = StringVar() <span class="comment">#昵称变量（对象）:在使用界面编程的时候，有些时候是需要跟踪变量的值的变化，以保证值的变更随时可以显示在界面上</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">#将窗口大小设置为不可变</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录函数（检查用户名是否为空，以及长度）</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Login_in</span>():</span></span><br><span class="line">        name = nickname.get() <span class="comment">#????</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> name:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名为空！&#x27;</span>) <span class="comment">#消息警告框</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">len</span>(name) &gt; <span class="number">10</span>:</span><br><span class="line">            tkinter.messagebox.showwarning(<span class="string">&#x27;Warning&#x27;</span>, message=<span class="string">&#x27;用户名过长！最多为十个字符！&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            root.destroy()</span><br><span class="line">            client.connect((server_host, server_port))  <span class="comment"># 连接服务端，指定主机和端口</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Connecting is successful!&#x27;</span>)</span><br><span class="line">            client.send(name.encode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># 传递用户昵称</span></span><br><span class="line">            ChatRoom(name)  <span class="comment"># 打开聊天窗口</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#登录按钮、输入提示标签、输入框</span></span><br><span class="line">    Button(root, text=<span class="string">&quot;登录&quot;</span>, command=Login_in, width=<span class="number">8</span>, height=<span class="number">1</span>).place(x=<span class="number">100</span>, y=<span class="number">90</span>, width=<span class="number">100</span>, height=<span class="number">35</span>)</span><br><span class="line">    Label(root, text=<span class="string">&#x27;请输入昵称&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">12</span>)).place(x=<span class="number">10</span>, y=<span class="number">20</span>, height=<span class="number">50</span>, width=<span class="number">80</span>)</span><br><span class="line">    Entry(root, textvariable=nickname, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">11</span>)).place(x=<span class="number">100</span>, y=<span class="number">30</span>, height=<span class="number">30</span>, width=<span class="number">180</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line"><span class="comment">#聊天窗口</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ChatRoom</span>(<span class="params">nickname</span>):</span></span><br><span class="line">    root = Tk()</span><br><span class="line">    root.geometry(<span class="string">&#x27;650x400&#x27;</span>)  <span class="comment"># 窗口大小</span></span><br><span class="line">    root.resizable(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 将窗口大小设置为不可变</span></span><br><span class="line">    root.geometry(<span class="string">&#x27;+500+300&#x27;</span>)  <span class="comment"># 改变窗体位置（‘+横坐标+纵坐标’）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    <span class="comment"># if content != &#x27;No message.&#x27;:</span></span><br><span class="line">    <span class="comment">#     past_text = content + &#x27;\n------以上是历史消息------\n&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 从服务器端获取当前用户列表</span></span><br><span class="line">    <span class="comment"># UserList = []</span></span><br><span class="line">    <span class="comment"># UserList = client.recv(2048).decode(&#x27;utf-8&#x27;).split(&#x27;,&#x27;)</span></span><br><span class="line">    <span class="comment"># UserList.insert(0, &#x27;------当前用户列表------&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 窗口标题</span></span><br><span class="line">    <span class="comment"># nickname = UserList[len(UserList)-1]</span></span><br><span class="line">    root.title(<span class="string">&#x27;一起来聊天 · &#x27;</span> + nickname)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># name_text = StringVar()</span></span><br><span class="line">    <span class="comment"># name_text.set(UserList)  # 用户列表文本设置</span></span><br><span class="line">    <span class="comment"># listbox1 = Listbox(root, listvariable=name_text)  # 用户列表，使用Listbox组件</span></span><br><span class="line">    <span class="comment"># listbox1.place(x=5, y=0, width=500, height=400)</span></span><br><span class="line"></span><br><span class="line">    img_png = PhotoImage(file=<span class="string">&#x27;QQ图片20220901201640.png&#x27;</span>)</span><br><span class="line">    label_img = Label(root, image=img_png)</span><br><span class="line">    label_img.place(x=<span class="number">400</span>, y=<span class="number">0</span>, width=<span class="number">350</span>, height=<span class="number">300</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天界面</span></span><br><span class="line">    <span class="comment"># content = client.recv(2048).decode(&#x27;utf-8&#x27;)</span></span><br><span class="line">    ChatBox = scrolledtext.ScrolledText(root)  <span class="comment"># 聊天信息窗口，使用ScrolledText组件制作</span></span><br><span class="line">    ChatBox.place(x=<span class="number">5</span>, y=<span class="number">0</span>, width=<span class="number">470</span>, height=<span class="number">300</span>)</span><br><span class="line">    <span class="comment"># ChatBox.pack()</span></span><br><span class="line">    <span class="comment"># ChatBox.insert(&#x27;end&#x27;,content)</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">read_server</span>(<span class="params">c</span>):</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            content = c.recv(<span class="number">2048</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">            ChatBox.insert(<span class="string">&#x27;end&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>+content+<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            ChatBox.see(tkinter.END)  <span class="comment"># ScrolledText组件方法，自动定位到结尾，否则只有消息在涨，窗口拖动条不动</span></span><br><span class="line">            ChatBox.update()  <span class="comment"># 更新聊天信息窗口，显示新的信息</span></span><br><span class="line">    threading.Thread(target=read_server, args=(client,)).start()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#聊天输入框</span></span><br><span class="line">    word = StringVar()</span><br><span class="line">    word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    SentBox = Entry(root,width=<span class="number">140</span>,textvariable=word) <span class="comment">#建一个输入框</span></span><br><span class="line">    SentBox.place(x=<span class="number">5</span>,y=<span class="number">305</span>,width=<span class="number">475</span>,height=<span class="number">90</span>) <span class="comment">#设置大小和位置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#发送按钮</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sendtext</span>():</span></span><br><span class="line">        content = word.get() <span class="comment">#获得文本内容</span></span><br><span class="line">        <span class="keyword">if</span> content==<span class="string">&#x27;end&#x27;</span>:</span><br><span class="line">            client.close()</span><br><span class="line">        client.send(content.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        word.<span class="built_in">set</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">#用了一个标记记录点击的状态，不管内容是什么点了就变</span></span><br><span class="line"></span><br><span class="line">    sendButton = Button(root, text=<span class="string">&#x27;发 送&#x27;</span>, font=(<span class="string">&#x27;Fangsong&#x27;</span>, <span class="number">18</span>), bg=<span class="string">&#x27;white&#x27;</span>, command=sendtext)</span><br><span class="line">    sendButton.place(x=<span class="number">490</span>, y=<span class="number">308</span>, width=<span class="number">150</span>, height=<span class="number">85</span>)</span><br><span class="line"></span><br><span class="line">    root.mainloop()</span><br><span class="line"></span><br><span class="line">LoginWindow()</span><br></pre></td></tr></table></figure><h1 id="实训二阶段"><a class="markdownIt-Anchor" href="#实训二阶段"></a> 实训二阶段</h1><blockquote><p><a href="https://blog.csdn.net/Protinx/article/details/124586695">(29条消息) Cisco Packet Tracer安装详解_@Protinx的博客-CSDN博客_cisco packet tracer</a></p><p><a href="https://so.csdn.net/so/search?q=%E6%80%9D%E7%A7%91%E6%A8%A1%E6%8B%9F%E5%99%A8&amp;spm=1001.2101.3001.7020">思科模拟器</a>Cisco Packet <a href="https://so.csdn.net/so/search?q=Tracer&amp;spm=1001.2101.3001.7020">Tracer</a>是一个功能强大的网络仿真程序，允许学生实验与网络行为。但是这个软件是纯软件模拟，和真实的环境有差距，命令也不全。适合新手教程教学使用。</p><p><a href="https://blog.csdn.net/qq_41625827/article/details/106115226">(29条消息) 思科Packet Tracer基础使用教程_冰镇阔落的博客-CSDN博客_cisco packet tracer教程</a></p><p><a href="https://blog.csdn.net/qq_43598138/article/details/104317148">(29条消息) Cisco Packet Tracer软件介绍与使用方法_发光吖的博客-CSDN博客_packet tracer</a></p><ul><li><p>一般选择高型号的路由器（可支持的命令比较多），在Packet Tracer 5.3里面推荐选择2811系列路由器。</p></li><li><p>交换机也选择高型号的，推荐选择2960系列。（注：2xxx系列为二层交换机，3xxx系列为三层交换机。两者交换功能相同，但三层交换机多了路由功能，在一些情况下三层交换机可以代替路由器，但不能完全替代路由器）</p><p>交换机（Switch）意为“<a href="https://baike.baidu.com/item/%E5%BC%80%E5%85%B3/2275072?fromModule=lemma_inlink">开关</a>”是一种用于电（光）信号转发的<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/7667828?fromModule=lemma_inlink">网络设备</a>。它可以为接入交换机的任意两个<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E8%8A%82%E7%82%B9/9338583?fromModule=lemma_inlink">网络节点</a>提供独享的电信号通路。</p></li><li><p>一般情况下选择（自动线）即可，或选择（直通线）。若方案要求选择专线，则需要选择（专线）。方案中线路大多为直通线（即以太网线），少数会有专线要求。<br />点击一下所要使用的线，然后点击需要连线的设备接口，从一个设备接口连线至另一个设备接口。（注：自动线不需要选择接口，其他两种线需要手动选择接口。直通线选择Fast开头的接口，专线选择Serial开头的接口）<br />注：自动线连好为虚线；直通线连好为实线。</p></li></ul><p>交换机是用来连接局域网的，路由器是用来连接互联网的（也可以连接多个局域网）</p></blockquote><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220902192351180.png" alt="image-20220902192351180" style="zoom: 50%;" /><p>各线缆两端有不同颜色的圆点，它们分别表示什么样的含义呢？</p><table><thead><tr><th>链路圆点的状态</th><th>含义</th></tr></thead><tbody><tr><td>亮绿色</td><td>物理连接准备就绪，还没有Line Protocol status 的指示</td></tr><tr><td>闪烁的绿色</td><td>连接激活</td></tr><tr><td>红色</td><td>物理连接不通，没有信号</td></tr><tr><td>黄色</td><td>交换机端口处于&quot;阻塞&quot;状态</td></tr></tbody></table><blockquote><p>路由器和交换机区别</p><ul><li>路由器：寻址，转发（依靠 IP 地址），交换机：过滤，转发（依靠 MAC 地址）</li><li>交换机用于连接局域网，数据包在局域网内网的数据转发，路由器用于连接局域网和外网，数据包可以在不同局域网转发。</li><li>交换机工作于TCP/IP协议的最后一层数据链路层（物理层），路由器工作于网络层</li><li>交换机负责具体的数据包传输，路由器不负责包的实际传输，路由器只封装好要传输的数据包，然后交给交换机去传输（不一定是交换机，可能是其他传输技术），用java比喻大概简单理解为路由器是抽象类，定义好传输的数据包格式，交换机是具体实现类，也可以有其他实现类</li><li>交换机没有MAC地址和IP地址，路由器有MAC地址和IP地址（指纯碎的交换机和路由器，三层交换机是可以有IP地址的，路由器也有内置交换机功能的）<br />原文链接：<a href="https://blog.csdn.net/qq_21187515/article/details/119416934">https://blog.csdn.net/qq_21187515/article/details/119416934</a></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Router&gt;enable </span><br><span class="line">Router<span class="comment">#</span></span><br><span class="line">(Router&gt;en)</span><br><span class="line">在用户模式下输入enable即可进入特权模式。第二级别模式，可以对设备进行所有的查看、测试及简单的配置。</span><br><span class="line"></span><br><span class="line">Router<span class="comment">#configure terminal </span></span><br><span class="line">Enter configuration commands, one per line.  End <span class="keyword">with</span> CNTL/Z.</span><br><span class="line">Router(config)<span class="comment">#</span></span><br><span class="line">(Router<span class="comment">#conf t)</span></span><br><span class="line">在特权模式下，输入configure terminal即可进入配置模式。第三级别模式，可以对设备进行管理配置。</span><br><span class="line"></span><br><span class="line">Router(config)<span class="comment">#interface fastEthernet 0/0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#</span></span><br><span class="line">(Router(config)<span class="comment">#int fa0/0  //定义0/0接口)</span></span><br><span class="line">其他配置模式Router(config-???)<span class="comment">#。第四级别模式，可以对设备进行各种专用配置。如，进入配置设备接口的模式</span></span><br><span class="line"></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#ip address 192.168.1.2 255.255.255.0</span></span><br><span class="line">(Router(config-<span class="keyword">if</span>)<span class="comment">#ip add 192.168.1.254 255.255.255.0)</span></span><br><span class="line">配置ip地址</span><br><span class="line"></span><br><span class="line">R2(config-<span class="keyword">if</span>)<span class="comment">#no shutdown</span></span><br><span class="line">(Router(config-<span class="keyword">if</span>)<span class="comment">#no sh)</span></span><br><span class="line">激活接口</span><br><span class="line"></span><br><span class="line">(Router(config-<span class="keyword">if</span>)<span class="comment">#do wr)</span></span><br><span class="line">Building configuration...</span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#do show ip rou               //显示所有IP路由</span></span><br><span class="line"></span><br><span class="line">C    <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> <span class="keyword">is</span> directly connected, FastEthernet0/<span class="number">0</span>//路由表</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">路由器配置</span><br><span class="line">Router&gt;en</span><br><span class="line">Router<span class="comment">#</span></span><br><span class="line">Router<span class="comment">#conf t</span></span><br><span class="line">Router(config)<span class="comment">#int fa0/0                       //定义0/0接口</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#ip add 192.168.1.254 255.255.255.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#no sh </span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#int fa0/1                    //定义0/1接口</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#ip add 192.168.2.254 255.255.255.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#no sh                        //激活接口</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#do wr</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="comment">#do show ip rou               //显示所有IP路由</span></span><br><span class="line">Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP</span><br><span class="line">       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area</span><br><span class="line">       N1 - OSPF NSSA external <span class="built_in">type</span> <span class="number">1</span>, N2 - OSPF NSSA external <span class="built_in">type</span> <span class="number">2</span></span><br><span class="line">       E1 - OSPF external <span class="built_in">type</span> <span class="number">1</span>, E2 - OSPF external <span class="built_in">type</span> <span class="number">2</span>, E - EGP</span><br><span class="line">       i - IS-IS, L1 - IS-IS level-<span class="number">1</span>, L2 - IS-IS level-<span class="number">2</span>, ia - IS-IS inter area</span><br><span class="line">       * - candidate default, U - per-user static route, o - ODR</span><br><span class="line">       P - periodic downloaded static route</span><br><span class="line"> </span><br><span class="line">Gateway of last resort <span class="keyword">is</span> <span class="keyword">not</span> <span class="built_in">set</span></span><br><span class="line"> </span><br><span class="line">C    <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> <span class="keyword">is</span> directly connected, FastEthernet0/<span class="number">0</span>      //路由表</span><br><span class="line">C    <span class="number">192.168</span><span class="number">.2</span><span class="number">.0</span>/<span class="number">24</span> <span class="keyword">is</span> directly connected, FastEthernet0/<span class="number">1</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/qq_39524009/article/details/81073693">(29条消息) 交换机实验、VLAN创建_Air_Echo的博客-CSDN博客_创建vlan</a></p></blockquote><blockquote><p>打开**【PC中 &gt;&gt; Desktop &gt;&gt; Commond prompt】**</p><p>pc0上 ping 192.168.20.1 (PC1)的ip地址</p></blockquote><blockquote><p><a href="https://blog.csdn.net/VariatioZbw/article/details/108212741">(29条消息) Cisco Packet Tracer 命令大全 【思科交换机模拟器命令大全】_zhangbw~的博客-CSDN博客_cisco packet tracer命令行</a></p><p><a href="https://blog.csdn.net/qq_40163937/article/details/88818072">(29条消息) Cisco Packet Tracer—VLAN配置详解_HOPEAMOR的博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_34194317/article/details/92553357">(29条消息) cisco交换机 配置一组端口,interface range_weixin_34194317的博客-CSDN博客</a></p></blockquote><blockquote><p>当使用<strong>interface range</strong>命令时有如下的规则:</p><p>有效的组范围:<br />vlan从1 到4094<br />fastethernet 槽位/{first port} - {last port}, 槽位为0<br />gigabitethernet槽位/{first port} - {last port},槽位为0<br />port-channel port-channel-number - port-channel-number, port-channel号从1到64<br />端口号之间需要加入空格，如：interface range fastethernet 0/1 – 5 是有效的，而interface range fastethernet 0/1-5 是无效的.<br />interface range 命令只能配置已经存在的interface vlan<br />所有在同一组的端口必须是相同类别的。<br />见以下例子:</p><p>Switch# configure terminal<br />Switch(config)# interface range fastethernet0/1 - 5</p></blockquote><blockquote><p><strong>#switch trunk encapsulation dot1q</strong></p><p><strong>IEEE 802.1Q协议</strong>，是vlan的一种封装方式，是公有协议。 还有一种trunk协议，是ISL，也是vlan的一种封装方式，不过这是Cisco思科私有协议，其他厂商不能用。</p><p><strong>#switchport trunk</strong>是配置允许通过的vlan；<br />　　switchport mode trunk是将端口配置成trunk模式；<br />　　mode trunk //端口模式为trunk<br />　　switchport trunk encapsulation dot1q //trunk协议封装为dot1q<br />　　dot1q就是 IEEE 802.1Q协议，是vlan的一种封装方式，是公有协议。<br />　　还有一种trunk协议，是ISL，也是vlan的一种封装方式，不过这是Cisco思科私有协议，其他厂商不能用。</p></blockquote><h2 id="实训1局域网分层结构"><a class="markdownIt-Anchor" href="#实训1局域网分层结构"></a> 实训1：局域网分层结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.基本任务</span><br><span class="line">三层交换上实现VLAN间路由；</span><br><span class="line">两层交换机上划分VLAN；</span><br><span class="line">VLAN数目不少于2个；</span><br><span class="line">自行规划IP地址</span><br></pre></td></tr></table></figure><blockquote><p>技术原理</p><ul><li>三层交换机具备网络层的功能，实现 VLAN 相互访问的原理是：利用三层交换机的路由功能，通过识别数据包的 IP 地址，查找路由表进行选路转发，三层交换机利用直连路由可以实现不同 VLAN 之间的相互访问。</li><li>三层交换机给接口配置 IP 地址。采用 SVI（交换虚拟接口）的方式实现 VLAN 间互连。<strong>SVI 是指为交换机中的VLAN 创建虚拟接口，并且配置 IP 地址</strong>。</li><li>Tag VLAN是基于交换机端口的一种类型，主要用于<strong>使交换机的相同Vlan内的主机之间</strong>可以直接访问，同时对于不同Vlan的主机进行隔离。</li><li>trunk主要用在<strong>连接其它交换机</strong>，以便在线路上承载多个vlanWLAN是Wireless Local Area Network的简称，指应用无线通信技术将计算机设备互联起来，构成可以互相通信和实现资源共享的网络体系。</li><li>802.1x协议是WLAN第二代的认证技术，它是基于客户端-服务器（Client-Server)结构的访问控制和认证协议。它可以限制未经授权的用户/设备通过接入端口（Access Port)访问LAN/WLAN。</li><li>DOT1Q是提供VLAN识别和服务质量(QoS)级别的IEEE标准。电气和电子工程师协会（IEEE，全称是Institute of Electrical and Electronics Engineers）是一个美国的电子技术与信息科学工程师的协会，是世界上最大的非营利性专业技术学会。</li><li>ip routing 启用IP路由功能no ip routing 关闭IP路由功能</li></ul></blockquote><blockquote><p><strong>二层交换机与三层交换机区别</strong></p><p>我们习惯说，<strong>在二层网络环境中相同vlan之间可以通信，不同vlan之间不可以通信，如果想通信必须借助三层设备</strong>，所以说<strong>三层交换机必须要做的事情是路由转发</strong>，但是二、三层交换机具体有什么区别呢？</p><ul><li><p>二层交换机工作于OSI模型的第2层(数据链路层)，故而称为二层交换机。二层交换技术发展比较成熟，二层交换机属数据链路层设备，可以<strong>识别数据包中的MAC地址信息，根据MAC地址进行转发</strong>，并将这些MAC地址与对应的端口记录在自己内部的一个地址表中。具体的工作流程如下：</p><p>（1） 当交换机从某个端口收到一个数据包，它先读取包头中的源MAC地址，这样它就知道源MAC地址的机器是连在哪个端口上的；</p><p>（2） 再去读取包头中的目的MAC地址，并在地址表中查找相应的端口；</p><p>（3） 如表中有与这目的MAC地址对应的端口，把数据包直接复制到这端口上；</p><p>（4） 如表中找不到相应的端口则把数据包广播到所有端口上，当目的机器对源机器回应时，交换机又可以学习一目的MAC地址与哪个端口对应，在下次传送数据时就不再需要对所有端口进行广播了。</p><p>​不断的循环这个过程，对于全网的MAC地址信息都可以学习到，二层交换机就是这样建立和维护它自己的地址表。二层交换技术从网桥发展到VLAN（虚拟局域网），在局域网建设和改造中得到了广泛的应用。第二层交换技术是工作在OSI七层网络模型中的第二层，即数据链路层。它按照所接收到数据包的目的MAC地址来进行转发，对于网络层或者高层协议来说是透明的。<strong>它不处理网络层的IP地址</strong>，不处理高层协议的诸如TCP、UDP的端口地址，它只需要数据包的物理地址即MAC地址，<strong>数据交换是靠硬件来实现的，其速度相当快，这是二层交换的一个显著的优点</strong>。但是，它<strong>不能处理不同IP子网之间的数据交换</strong>。</p><p>​传统的路由器可以处理大量的跨越IP子网的数据包，但是它的转发效率比二层低，因此要想利用二层转发效率高这一优点，又要处理三层IP数据包，三层交换技术就诞生了。</p></li><li><p>三层交换（也称多层交换技术，或IP交换技术）是相对于传统交换概念而提出的。众所周知，传统的交换技术是在OSI网络标准模型中的第二层——数据链路层进行操作的，而三层交换技术是在网络模型中的第三层实现了数据包的高速转发。简单地说，**三层交换技术就是：二层交换技术＋三层转发技术。**三层交换机就是具有部分路由器功能的交换机。三层交换机的最重要目的是加快大型局域网内部的数据交换，所具有的路由功能也是为这目的服务的，能够做到一次路由，多次转发。对于数据包转发等规律性的过程由硬件高速实现，而像路由信息更新、路由表维护、路由计算、路由确定等功能，由软件实现。三层交换技术就是二层交换技术+三层转发技术。三层交换技术的出现，解决了局域网中网段划分之后，网段中子网必须依赖路由器进行管理的局面，解决了传统路由器低速、复杂所造成的网络瓶颈问题。</p></li></ul></blockquote><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222219745.png" alt="image-20220908222219745" style="zoom:67%;" /><blockquote><p>实验步骤</p><p>1）在二层交换机上配置 VLAN2、VLAN3，分别将端口 2、端口 3 划分给 VLAN2、VLAN3。<br />（2）<strong>将二层交换机与三层交换机相连的端口 fa 0/1 都定义为 tag Vlan 模式。</strong><br />（3）在三层交换机上配置 VLAN2、VLAN3，此时验证二层交换机 VLAN2、VLAN3下的主机之间不能相互通信。<br />（4）设置三层交换机 VLAN 间的通信，创建 VLAN2,VLAN3 的虚接口，并配置虚接口 VLAN2、VLAN3 的 IP 地址。<br />（5）查看三层交换机路由表。<br />（6）将二层交换机 VLAN2、VLAN3 下的主机默认网关分别设置为相应虚拟接口的 IP 地址。<br />（7）验证二层交换机 VLAN2,VALN3 下的主机之间可以相互通信。</p></blockquote><blockquote><p><strong>switchport access vlan 3</strong><br />语法：<br />switchport access vlan vlan-id<br />no switchport access vlan</p><p><strong>该命令把一个Access接口指派给一个VLAN</strong>。使用 no 选项可以把接口指派到缺省的VLAN中。</p><p>缺省值：接口缺省的VLAN是 VLAN 1。</p><p>命令模式：接口配置模式</p><p>适用接口：2层物理接口。</p><p>说明：如果指定的VLAN不存在，则系统会创建这个VLAN，并把接口设置为该VLAN的成员。如果指定的VLAN已经存在，则把接口添加到该VLAN中。如果接口是一个Trunk口，该操作没有任何作用。可以用 show vlan 命令查看VLAN信息。</p><p>范例：<br />Ruijie(config)# interface f0/1<br />Ruijie(config)# switchport<br />Ruijie(config-if)# switchport access vlan 10<br />本例把 <strong>FastEthernat 0/1 口设置为2层口，并把它加入到 VLAN 10 中。</strong></p><p><strong>#switchport mode trunk</strong></p><p>语法：</p><p>switchport mode { access | trunk }</p><p>no switchport mode</p><p>该命令**指定一个2层接口的模式，可以把接口指定为 access 接口或者 trunk 接口。**使用 no 选项可以把接口模式恢复为缺省值。</p><p>缺省值：接口的缺省模式是 access。</p><p>命令模式：接口配置模式</p><p>适用接口：2层物理接口、2层Aggregateport接口。</p><p>说明：如果一个接口的模式是 access，则该接口只能成为一个VLAN的成员，可以使用 switchport access vlan 命令把它指定给一个VLAN；如果一个接口的模式是 trunk，则该接口可以是多个VLAN的成员，可以用 switchport trunk 命令定义许可VLAN列表决定它所在的VLAN。</p><p>范例：</p><p>Ruijie(config)# interface f0/1<br />Ruijie(config-if)# switchport mode trunk<br /><strong>本例把 FastEthernat 0/1 口设置为 Trunk 接口。</strong></p><p><a href="https://blog.csdn.net/ahleung/article/details/100102099">(29条消息) Switchport详细用法_天地良心的博客-CSDN博客</a></p></blockquote><blockquote><p>三个空的的口令分别是：</p><ol><li>interface e0 //根据图示这个是E0口。</li><li>192.168.2.1 255.255.255.0 //R1的S0接口的IP地址和子网掩码。</li><li>s0 //这个是送出接口</li></ol><p><strong>ip routing 是用在三层交换机上打开路由功能，默认是关闭的</strong>，ip router ospf 是在路由器上启用ospf等路由协议，ospf后面还要加个进程号，范围是0-65535，只具有本地意义</p><p>ip routing启用IP路由功能：</p><ol><li><p>配置三层交换机启动路由功能：ip routing 。</p></li><li><p>配置VLAN IP地址：</p><p>interface vlan vlan-id</p><p>Ip address ip-address subnet-mask</p><p>No shutdown</p></li><li><p>配置接口为三层模式：</p><p>no switchport</p></li><li><p>配置DHCP中继转发：</p><p>int vlan vlan-i</p><p>Ip helper-address Dhcpserver-address</p></li><li><p>配置静态路由：</p><p>ip route targetnet-address netmask nexthop-address</p></li><li><p>配置RIP协议：</p><p>router rip</p></li><li><p>查看FIB表：</p><p>show ip cef</p></li><li><p>查看邻接关系表：</p><p>show adjacency detail</p></li><li><p>查看路由表：</p><p>show ip route</p></li></ol></blockquote><blockquote><p>PC1IP: 192.168.1.2   Submark: 255.255.255.0   Gateway: 192.168.1.1</p><p>PC2IP: 192.168.2.2   Submark: 255.255.255.0   Gateway: 192.168.2.1</p><p>PC3    IP: 192.168.1.3   Submark: 255.255.255.0   Gateway: 192.168.1.1</p><p>二层交换机<br /><strong>Switch&gt;en</strong><br /><strong>Switch#conf t</strong><br />Enter configuration commands, one per line. End with CNTL/Z.</p><p><strong>Switch(config)#vlan 2</strong><br /><strong>Switch(config-vlan)#exit</strong><br /><strong>Switch(config)#vlan 3</strong></p><p><strong>Switch(config-vlan)#int fa 0/2</strong><br /><strong>Switch(config-if)#switchport access vlan 2</strong><br />Switch(config-if)#int fa 0/3<br />Switch(config-if)#switchport access vlan 3</p><p><strong>Switch(config-if)#int fa 0/1</strong><br /><strong>Switch(config-if)#switchport mode trunk</strong></p><p>%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/1, changed state to down</p><p>%LINEPROTO-5-UPDOWN: Line protocol on Interface FastEthernet0/1, changed state to up</p><p><strong>Switch(config-if)#end</strong><br />Switch#<br />%SYS-5-CONFIG_I: Configured from console by console</p><p><strong>Switch#show vlan</strong></p><p>VLAN Name Status Ports</p><hr /><p>1 default active Fa0/4, Fa0/5, Fa0/6, Fa0/7<br />Fa0/8, Fa0/9, Fa0/10, Fa0/11<br />Fa0/12, Fa0/13, Fa0/14, Fa0/15<br />Fa0/16, Fa0/17, Fa0/18, Fa0/19<br />Fa0/20, Fa0/21, Fa0/22, Fa0/23<br />Fa0/24, Gig1/1, Gig1/2<br />2 VLAN0002 active Fa0/2<br />3 VLAN0003 active Fa0/3<br />1002 fddi-default act/unsup<br />1003 token-ring-default act/unsup<br />1004 fddinet-default act/unsup<br />1005 trnet-default act/unsup</p><p>VLAN Type SAID MTU Parent RingNo BridgeNo Stp BrdgMode Trans1 Trans2</p><hr /><p>1 enet 100001 1500 - - - - - 0 0<br />2 enet 100002 1500 - - - - - 0 0<br />3 enet 100003 1500 - - - - - 0 0<br />1002 fddi 101002 1500 - - - - - 0 0<br />–More–</p></blockquote><blockquote><p>三层交换机<br /><strong>Switch&gt;en</strong><br /><strong>Switch#conf t</strong><br />Enter configuration commands, one per line. End with CNTL/Z.</p><p><strong>Switch(config)#vlan 2</strong><br /><strong>Switch(config-vlan)#exit</strong><br /><strong>Switch(config)#vlan 3</strong><br /><strong>Switch(config-vlan)#exit</strong></p><p><strong>Switch(config)#int fa 0/1</strong><br /><strong>Switch(config-if)#switchport trunk encapsulation dot1q</strong><br /><strong>Switch(config-if)#switchport mode trunk</strong><br /><strong>Switch(config-if)#switchport trunk allowed vlan 2,3</strong><br /><strong>Switch(config-if)#exit</strong></p><p><strong>Switch(config)#int fa 0/2</strong><br /><strong>Switch(config-if)#switchport access vlan 2</strong><br /><strong>Switch(config-if)#exit</strong></p><p><strong>Switch(config)#int vlan 2</strong></p><p>%LINK-5-CHANGED: Interface Vlan2, changed state to up</p><p>%LINEPROTO-5-UPDOWN: Line protocol on Interface Vlan2, changed state to up<br /><strong>Switch(config-if)#ip address 192.168.1.1 255.255.255.0</strong><br /><strong>Switch(config-if)#no shutdown</strong><br /><strong>Switch(config-if)#exit</strong><br />Switch(config)#int vlan 3</p><p>%LINK-5-CHANGED: Interface Vlan3, changed state to up</p><p>%LINEPROTO-5-UPDOWN: Line protocol on Interface Vlan3, changed state to up<br />Switch(config-if)#ip address 192.168.2.1 255.255.255.0<br />Switch(config-if)#no shutdown<br />Switch(config-if)#exit</p><p><strong>Switch(config)#ip routing</strong><br /><strong>Switch(config)#exit</strong><br />Switch#<br />%SYS-5-CONFIG_I: Configured from console by console</p><p><strong>Switch#show ip route</strong><br />Codes: C - connected, S - static, I - IGRP, R - RIP, M - mobile, B - BGP<br />D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area<br />N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2<br />E1 - OSPF external type 1, E2 - OSPF external type 2, E - EGP<br />i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area</p><ul><li><ul><li>candidate default, U - per-user static route, o - ODR<br />P - periodic downloaded static route</li></ul></li></ul><p>Gateway of last resort is not set</p><p>C 192.168.1.0/24 is directly connected, Vlan2<br />C 192.168.2.0/24 is directly connected, Vlan3</p><p><strong>Switch#show vlan</strong></p><p>VLAN Name Status Ports</p><hr /><p>1 default active Fa0/3, Fa0/4, Fa0/5, Fa0/6<br />Fa0/7, Fa0/8, Fa0/9, Fa0/10<br />Fa0/11, Fa0/12, Fa0/13, Fa0/14<br />Fa0/15, Fa0/16, Fa0/17, Fa0/18<br />Fa0/19, Fa0/20, Fa0/21, Fa0/22<br />Fa0/23, Fa0/24, Gig0/1, Gig0/2<br />2 VLAN0002 active Fa0/2<br />3 VLAN0003 active<br />1002 fddi-default act/unsup<br />1003 token-ring-default act/unsup<br />1004 fddinet-default act/unsup<br />1005 trnet-default act/unsup</p><p>VLAN Type SAID MTU Parent RingNo BridgeNo Stp BrdgMode Trans1 Trans2</p><hr /><p>1 enet 100001 1500 - - - - - 0 0<br />2 enet 100002 1500 - - - - - 0 0<br />3 enet 100003 1500 - - - - - 0 0<br />1002 fddi 101002 1500 - - - - - 0 0<br />–More–</p></blockquote><blockquote><p>PC1 分别 ping PC2 和 PC3</p><p><strong>PC&gt;ipconfig IP</strong></p><p>Address…: 192.168.1.2</p><p>Subnet Mask…: 255.255.255.0</p><p>Default Gateway…: 192.168.1.1</p><p><strong>PC&gt;ping 192.168.2.2</strong></p><p>Pinging 192.168.2.2 with 32 bytes of data:</p><p>Request timed out.</p><p>Reply from 192.168.2.2: bytes=32 time=25ms TTL=127</p><p>Reply from 192.168.2.2: bytes=32 time=20ms TTL=127</p><p>Reply from 192.168.2.2: bytes=32 time=20ms TTL=127</p><p>Ping statistics for 192.168.2.2:</p><p>Packets: Sent = 4, Received = 3, Lost = 1 (25% loss), Approximate round trip times in milli-seconds: Minimum = 20ms, Maximum = 25ms, Average = 21ms</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2.拓展任务</span><br><span class="line">使用VTP管理交换机</span><br><span class="line">启用快速生成树，采用线路冗余的方式增加可靠性。</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/zoulongbin/p/9047390.html">https://www.cnblogs.com/zoulongbin/p/9047390.html</a></p><p>VTP的工作原理</p><p>VTP：虚拟局域网中继协议，VTP是一种消息协议，它使用第二层帧，<strong>在交换机之间传递VLAN信息</strong>，被称为VTP通告。<strong>有了VTP通告就可以再一台交换机上集中修改VLAN配置，所做的修改会被自动传播到网络中的其他交换机，从而实现VLAN配置的一致性。</strong></p><p>VTP域：也称为VLAN管理域，由一个以上共享VTP域名相连接的交换机组成。也就是说，VTP域是一组VTP域名相同并通过中继链路互相连接的交换机。使用VTP首先需要建立一个VTP管理域，在同一管理域中的交换机共享他们的VLAN信息，并且<strong>一个交换机只能参加一个VTP管理域</strong>。</p><p>配置VTP域的要求如下：</p><p>1、域内的每台交换机都必须使用相同的VTP域名。</p><p>2、交换机必须是相邻的，即相邻的交换机并具有相同的域名。</p><p>3、交换机之前必须配置中继链路(也就是Trunk)。</p><p>它不通告自己的VLAN配置信息，对收到的VTP通告只转发而不会学习与更改自己的VLAN信息。</p></blockquote><blockquote><p>VTP的模式</p><p>1、服务器模式：充当VTP服务器模式的交换机负责它所在域中VLAN信息的管理工作。VTP服务器可以创建、删除或修改VLAN，并向外发送VTP通告，同时，VTP服务器也会学习域名相同的VTP通告信息。</p><p>2、客户机模式：处于VTP客户机模式的交换机不允许管理创建，删除或修改VLAN。它们监听本域中其他交换机的VTP通告，并相应修改它们自己的VTP配置。</p><p>3、透明模式：VTP透明模式中的交换机不参与VTP。当交换机处于透明模式时，它可以创建，删除或修改本地的VLAN信息，但</p></blockquote><blockquote><p>VTP通告</p><p>使用VTP时，加入VTP域的每台交换机在其中继端口上通告如下信息：</p><p>1、管理域 (即VTP的域名信息)</p><p>2、版本号 (使用VTP的版本号，只要校验服务器和客户机模式的版本是否一致)</p><p>3、配置修改编号 (默认为0，当修改VTP域的配置之后，此编号会加1)</p><p>4、它所知道的VLAN (即VTP中的所有VLAN)</p><p>5、每个VLAN的某些参数 (vlan的相关信息)</p><p>注意：当一台修改编号高于此VTP域中的修改编号的交换机加入此VTP域时，此交换机的中的VLAN配置会覆盖所有VTP域中的VLAN配置，所以将交换机加入VTP域时要格外小心。我们可以将交换机的VTP模式改为透明模式，再改回服务器模式或交换机模式，或者是将交换机的域名更改一下在改回来，就可以将交换机的修改编号初始为0。</p></blockquote><blockquote><p>VTP修剪</p><p>VTP修剪是VTP的一个功能，它能减少中继链路上不必要的广播流量。</p></blockquote><blockquote><p>配置VTP实例</p><p>在配置VTP之前，我们需要将<strong>VTP服务器和VTP客户机之间的链路设置为中继链路</strong>。</p><p>列如：将Switch1和Switch2的24号端口设置为trunk中继链路。</p><p>Switch1(config)#int f0/24</p><p>Switch1(config)#switchport mode trunk</p><p>Switch1(config)#no sh</p><p>Switch2(config)#int f0/24</p><p>Switch2(config)#switchport mode trunk</p><p>Switch2(config)#no sh</p><p>配置VTP服务器模式</p><p>列如：将Switch1配置为VTP服务器，域名为test，秘密为123，配置VTP修剪。</p><p>Switch1#config terminal</p><p>Switch1(config)#vtp domain test</p><p>Switch1(config)#vtp mode server</p><p>SWitch1(config)#vtp passwd 123</p><p>Switch1(config)#vtp pruning</p><p>配置VTP客户机模式</p><p>列如：将Switch2配置为VTP客户机，域名和密码必须和服务器器一致，否则将不匹配。</p><p>Switch2#config terminal</p><p>Switch2(config)#vtp domain test</p><p>Switch2(config)#vtp mode client</p><p>SWitch2(config)#vtp passwd 123</p><p>Switch2(config)#vtp pruning</p><p>此时VTP服务器和VTP客户端就配置完成了，现在只需要在VTP服务器端创建VLAN，VTP客户端就可以自动学习到服务器端创建的VLAN，而不需要自己创建VLAN，但是注意，虽然VTP客户端可是自动学习VLAN，但是将端口加入VLAN的动作是不可以学习的，所以在客户端需要手动将端口添加到相应的VLAN中。</p></blockquote><blockquote><p>Unable to perform trunk negotiation on port Fa0/23 because of VTP domain mismatch这句话是什么意思？？是不能开启trunk在f0/23上！！因为VTP的域名错了！！你VTP配置的时候是不是名字有问题？？要就是配置一个！！要就是两边一样的！！不要两边不一样的！</p></blockquote><h2 id="实训2-多域ospf"><a class="markdownIt-Anchor" href="#实训2-多域ospf"></a> 实训2 多域OSPF</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">要求：</span><br><span class="line">配置多域OSPF；</span><br><span class="line">Loopback口相当于PC；</span><br><span class="line">基本配置内容自主网络搜索。</span><br></pre></td></tr></table></figure><blockquote><p>OSPF多用于大型IPv4网络，是基于链路状态的路由协议，与基于距离矢量的路由协议相比具有更快的收敛速度，支撑的网络规模也更大。</p><p>OSPF（Open Shortest Path First）是IETF组织开发的一个基于链路状态的内部网关协议。目前针对IPv4协议使用的是OSPF Version 2（RFC2328）。OSPF是不属于任何一个厂商或组织私有的路由协议，使用Dijkstra的最短路径（SPF）算法计算路由。在OSPF中引入了区域的概念，有效的减少了路由选择协议对路由器CPU和内存的占用，同时也降低了路由选择协议的通信量，使得构建大型层次化网络成为可能</p></blockquote><blockquote><p><strong>duplex auto</strong> 是双工的协商模式为自动<br />双工模式有两种，一种是full（全双工），一种是half（半双工）<br /><strong>speed auto</strong> 是速率为协商模式为自动<br />一般的100M口支持: 10M，100M和自动模式</p><p>选择为自动模式则接口会和对端设备的接口进行协商，并自动选择最佳模式。</p></blockquote><blockquote><p><strong>#ip access-group 10 out</strong></p><p>将列表10所定义的条件应用禁止从此接口出去</p><p>该命令的详细说明如下：<br />ip access-group {[access-list-number] |[ name]} [in | out]<br />no ip access-group {[access-list-number] |[ name]} [in | out]</p><p>功能：将指定的访问列表应用到相关接口，并且指定acl起作用的方向。本命令的no操作为解除访问列表应用到相关接口，若没有指定方向，则默认为out；<br />若没有指定具体的[access-list-number] 或[name]而指定了方向，则默认为删除该方向上所有的访问列表的应用；若没有指定具体的[access-list-number] 或[name]也没有指定方向，则默认为删除out方向上所有的访问列表的应用。</p><p>参数：[access-list-number]为访问表表号，取值范围1～199；[name]为由ip access-list 命令指定的访问表名字，最长不超过8个字符；in为过滤入口的包；out为过滤出口的包。</p><p>缺省情况：没有任何访问表被应用至任何接口。若指定了绑定，而未指定方向，缺省为out。</p><p>命令模式：接口配置模式</p><p>使用指南：在访问列表应用到具体接口的具体方向之前，访问列表的规则是不起作用的。每个接口定义两个方向，即in和out方向。前者代表流入接口的方向，<br />后者代表流出接口的方向。规则可单独对in或out方向起作用，即只过滤入口的包或只过滤出口方向上的包，也可以两个方向都过滤。</p><p>应用到接口上的访问列表可以有多条，但只能有一条标准访问列表，对扩展访问列表来说，一个接口一个方向相同协议的访问列表只能有一条。访问列表的协议是指</p><p>每个表的协议缺省为这个表的第一条规则中指定要过滤的协议。若通过的信息包符合多条规则，则只有匹配的第一条规则有作用，匹配的顺序与规则应用到接口的先<br />后顺序一致。若规则中含有相互冲突的设置，以第一条匹配到的规则为准。</p><p>在当前时间不在分段时间过滤访问表设定的时间段时，将分段时间过滤访问表应用到接口是不起作用的，但等时间进入设定的时间段后，曾经应用到接口的分段时间过滤访问表会自动生效。</p></blockquote><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222254302.png" alt="image-20220908222254302" /></p><blockquote><p><strong>router ospf 10</strong></p><p>Router ospf 10 中的 10 是这台<a href="https://so.csdn.net/so/search?q=%E8%B7%AF%E7%94%B1%E5%99%A8&amp;spm=1001.2101.3001.7020">路由器</a> Ospf 进程的 ID 号！<br />路由器和我们的PC一样，是多任务系统，理论上能够支持多个 OSPF 进程同时运行！此ID号仅本地有效！ <a href="https://so.csdn.net/so/search?q=SNMP&amp;spm=1001.2101.3001.7020">SNMP</a> 是网络管理协议，OSPF<br />是路由协议，两者就不是一个东西，不能相提并论！</p><p><strong>log-adjacency-changes</strong></p><p><strong>log-adjacency-changes命令</strong>可用来激活路由协议邻接关系变化日志的功能（例如ospf或者ISIS等）。使用该命令来生成SYSLOG信息以用于网络操作与管理。日志信息对于故障排除也非常有用。log-adjacency-changes 是一个日志开关，意思是<strong>当 OSPF 探测到邻居关系发生变化时，将变化情况记录在系统日志里面</strong>！</p><p><strong>network 192.168.233.160 0.0.0.3 area 1</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">network 192.168.233.164 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.168 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.172 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.176 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.184 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.188 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.192 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.196 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.200 0.0.0.3 area 1 </span><br><span class="line">network 192.168.233.204 0.0.0.3 area 1</span><br><span class="line">network 10.228.1.0      0.0.0.15 area 1 </span><br></pre></td></tr></table></figure><p>是使用 OSPF 向邻居发布路由信息！ area 1 是 OSPF路由域中的 区域1，ospf 路由域分为骨干区域和非骨干区域，只有 area 0 是骨干区域，其他都是非骨干区域！<br />0.0.0.3表示： 反掩码，表示匹配反掩码为1的位<br />0.0.0.255实际上是0.0.0.1111 1111 只要192.168.2.xxxx xxxx的网段就应用该路由 我自己把反掩码中的0理解为固定位，1理解为自由位。固定位就是不能变的，自由位是能变的，其实就是对前面ip的修饰，固定位就是他的网络段</p><p>原文链接：<a href="https://blog.csdn.net/qq_31828929/article/details/71191679">https://blog.csdn.net/qq_31828929/article/details/71191679</a></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PC与路由器的接口配置：</span><br><span class="line">interface FastEthernet0/<span class="number">0</span></span><br><span class="line"> </span><br><span class="line">ip address <span class="number">192.168</span><span class="number">.1</span><span class="number">.254</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> </span><br><span class="line">duplex <span class="keyword">auto</span></span><br><span class="line">    </span><br><span class="line">speed <span class="keyword">auto</span></span><br><span class="line">    </span><br><span class="line">[(<span class="number">30</span>条消息) 思科实验之配置ACL_晚风挽着浮云的博客-CSDN博客_思科配置acl](https:<span class="comment">//blog.csdn.net/weixin_57636278/article/details/123912132)</span></span><br><span class="line">                                              </span><br><span class="line">interface FastEthernet0/<span class="number">0</span></span><br><span class="line">ip address <span class="number">192.168</span><span class="number">.1</span><span class="number">.254</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">no shutdown</span><br><span class="line"><span class="built_in">exit</span>                                              </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">R1:</span><br><span class="line">interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">172.16</span><span class="number">.10</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> no shutdown                          #开启接口</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">router ospf <span class="number">10</span>                        #开启ospf 进程号为<span class="number">10</span></span><br><span class="line">network <span class="number">172.16</span><span class="number">.10</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">1</span>  #宣告直连的网段；网段的反掩码；其直连的网段属于area1区域</span><br><span class="line">R2:</span><br><span class="line">interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">172.16</span><span class="number">.10</span><span class="number">.2</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> no shu</span><br><span class="line">interface GigabitEthernet0/<span class="number">1</span></span><br><span class="line"> ip address <span class="number">172.16</span><span class="number">.20</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> no shu</span><br><span class="line"> <span class="built_in">exit</span></span><br><span class="line">router ospf <span class="number">10</span></span><br><span class="line"> network <span class="number">172.16</span><span class="number">.10</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">1</span>  #宣告直连，其直连的网段属于area1 区域</span><br><span class="line"> network <span class="number">172.16</span><span class="number">.20</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">0</span>  #area0是骨干区域</span><br><span class="line"> R3：</span><br><span class="line"> interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">172.16</span><span class="number">.20</span><span class="number">.2</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> no shu</span><br><span class="line">interface GigabitEthernet0/<span class="number">1</span></span><br><span class="line"> ip address <span class="number">172.16</span><span class="number">.30</span><span class="number">.1</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> no shu</span><br><span class="line"> <span class="built_in">exit</span></span><br><span class="line">router ospf <span class="number">10</span></span><br><span class="line"> network <span class="number">172.16</span><span class="number">.20</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">0</span></span><br><span class="line"> network <span class="number">172.16</span><span class="number">.30</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">2</span></span><br><span class="line"> R4：</span><br><span class="line"> interface GigabitEthernet0/<span class="number">0</span></span><br><span class="line"> ip address <span class="number">172.16</span><span class="number">.30</span><span class="number">.2</span> <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line"> no shu</span><br><span class="line"> <span class="built_in">exit</span></span><br><span class="line">router ospf <span class="number">10</span></span><br><span class="line"> network <span class="number">172.16</span><span class="number">.30</span><span class="number">.0</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.255</span> area <span class="number">2</span></span><br><span class="line"> </span><br><span class="line"> show ip route</span><br><span class="line"> ping <span class="number">172.16</span><span class="number">.30</span><span class="number">.2</span></span><br><span class="line">    </span><br><span class="line"> https:<span class="comment">//blog.csdn.net/zhangzc0408/article/details/124372279</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>Loopback</strong>是路由器里面的一个逻辑接口。逻辑接口是指能够实现数据交换功能，但是物理上不存在、需要通过配置建立的接口。Loopback接口一旦被创建，其物理状态和链路协议状态永远是Up，即使该接口上没有配置IP地址</p><p>Loopback接口创建后一直保持UP状态，用户可通过配置Loopback接口达到提高网络可靠性的目的。</p><p><a href="https://blog.csdn.net/JackLiu16/article/details/80296461">(30条消息) Loopback接口的主要作用及Loopback端口配置_JackLiu16的博客-CSDN博客_交换机loopback接口</a></p><p><a href="https://blog.51cto.com/u_15624911/5287875">OSPF多域配置_wx627255bd4ac6d的技术博客_51CTO博客</a></p></blockquote><h2 id="实训3-路由交换综合"><a class="markdownIt-Anchor" href="#实训3-路由交换综合"></a> 实训3 路由交换综合</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">实训要求</span><br><span class="line">1.试验台环境：路由器为2811，交换机3560、2950；</span><br><span class="line">2.规划IP，配置接口，启动静态或动态路由协议，保障网络连通性；</span><br><span class="line">3.划分两个VLAN，VLAN 10采用192.168.10.0/24，VLAN 20采用192.168.20.20；</span><br><span class="line">4.能够实现VLAN间路由；</span><br><span class="line">5.禁止VLAN 20中的主机访问WWW服务，但不禁止Ping （VLAN10中主机可以访问WWW）。</span><br><span class="line">6.VLAN 20需要配置DHCP。</span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222321626.png" alt="image-20220908222321626" /></p><p><a href="https://blog.csdn.net/qq_44018692/article/details/107529914">(30条消息) 交换机与路由器的通信的配置（2020.7.15）_penguinhd的博客-CSDN博客</a></p><blockquote><p>SW13</p><p>Enable<br />Conf t<br />Vlan 10<br />Exit<br />Interface f0/1<br />Switchport access vlan 10<br />Exit<br />Interface f0/2<br />Switchport mode trunk</p></blockquote><blockquote><p>sw14</p><p>Enable<br />Conf t<br />Vlan 20<br />Exit<br />Interface f0/2<br />Switchport access vlan 20<br />Exit<br />Interface f0/1<br />Switchport mode trunk</p></blockquote><blockquote><p>sw12</p><p>enable<br />conf t<br />vlan 10<br />exit<br />vlan 20<br />interface range f0/1-3<br />switchport mode trunk</p></blockquote><blockquote><p>sw1</p><p>enable<br />conf t<br />vlan 10<br />exit<br />vlan 20<br />exit<br />interface f0/1<br />switchport tr en do<br />switchport mode trunk<br />exit<br />interface vlan 10<br />ip address 192.168.10.1 255.255.255.0<br />exit<br />interface vlan 20<br />ip address 192.168.20.1 255.255.255.0<br />exit<br />ip routing</p><p>Switch(config)#interface f0/2<br />Switch(config-if)#no switchport（使其成为路由器接口）<br />Switch(config-if)#ip address 192.168.30.1 255.255.255.0</p></blockquote><blockquote><p>route 4</p><p>enable<br />config t<br />interface f0/0<br />no shutdown<br />ip address 192.168.30.2 255.255.255.0<br />exit<br />interface f0/1<br />no shutdown<br />ip address 192.168.40.1 255.255.255.0</p></blockquote><blockquote><p>route 5</p><p>enable<br />conf t<br />interface f0/0<br />no shutdown<br />ip address 192.168.40.2 255.255.255.0<br />exit<br />interface f0/1<br />no shutdown<br />ip address 192.168.50.1 255.255.255.0</p></blockquote><blockquote><p><strong>什么是ACL？</strong></p><p>ACL全称访问控制列表（Access Control List），主要通过配置一组规则进行过滤路由器或交换机接口进出的数据包，</p><p>是<strong>控制访问的一种网络技术手段</strong>， ACL适用于所有的被路由支持的协议，如IP、tcp、udp、ftp、www等。</p><p><strong>什么是反掩码？</strong></p><p>反掩码就是通配符掩码 ， 通过标记0和1告诉设备应该匹配到哪位。 在反掩码中，相应位为1的地址在比较中忽略，</p><p>为0的必须被检查。IP地址与反掩码都是32位的数 由于跟子网掩码刚好相反，所以也叫反掩码 。</p><p>路由器使用的通配符掩码与源或目标地址一起来分辨匹配的地址范围，它与子网掩码不同。它不像子网掩码告诉</p><p>路由器IP地址是属于哪个子网（网段），通配符掩码告诉路由器为了判断出匹配，它需要检查IP地址中的多少位。</p><p>例如：</p><p>255.255.255.0 反掩码（wildcard-mask）就是0.0.0.255</p><p>255.255.255.248 反掩码（wildcard-mask）就是0.0.0.7</p><p><strong>ACL工作原理：</strong></p><p>ACL使用包过滤技术，在路由器上读取OSI七层模型的第3层和第4层包头中的信息。如源地址，目标地址，源端口，目标端口等，根据预先定义好的规则，对包进行过滤，从而达到访问控制的目的。</p><p>对于路由器接口而言，ACL是有两个方向：</p><p>**注意：**如果发现没有匹配的ACL规则，默认会丢弃该数据包，思科ACL规则默认会有一条隐藏的deny any any规则，而华三ACL规则默认是permit any any规则。</p><p>**入站----**如果是入站访问列表，则当路由器接收到数据包时，Cisco IOS 软件将检查访问列表中的条件语句，看是否有匹配。如果数据包被允许，则软件将继续处理该数据包。如果数据包被拒绝，则软件会丢弃该数据包。</p><p>**出站----**如果是出站访问列表，则当软件到接收数据包并将群其路由至出站接口后，软件将检查访问列表中的条件语句，看是否有匹配。如果数据包被允许，则软件会发送该数据包。如果数据包被拒绝，则软件会丢弃该数据包。</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222340941.png" alt="image-20220908222340941" style="zoom:50%;" /><p><strong>ACL两种类型：</strong></p><p>**标注：**允许在标准ACL和扩展ACL中使用名称代替访问控制列表号。</p><p><strong>1、 标准的ACL</strong></p><p>根据数据包的源IP地址来控制允许转发或拒绝数据包，访问控制列表号1~99。</p><p>标准访问控制列表配置命令如下：</p><p>Router(config)#access-list access-list-number {permit|deny} source [souce-wildcard]</p><p>或者</p><p>Router(config)#ip access-list standard access-list-number</p><p>Router(config-std-nacl)#Sequence Number{permit|deny} source [souce-wildcard]</p><p>下面是命令参数的详细说明</p><p>access-list-number：访问控制列表号，标准ACL取值是1-99，可以使用名称替代列表号。</p><p>Sequence Number：每条ACL规则列表序列号，可使用范围1-2147483647。</p><p>permit | deny：如果满足规则，则允许/拒绝通过。</p><p>source：数据包的源地址，可以是主机地址，也可以是网络地址</p><p><strong>2、 扩展的ACL</strong></p><p>根据数据包的源IP地址、目的IP地址、指定协议，端口、标志和时间来控制允许转发或拒绝数据包，访问控制列表号100~199</p><p>扩展访问控制列表配置命令如下：</p><p>Router(config)#access-list access-list-number {permit|deny} protocol {source souce-wildcard destination destination-wildcard} [operator operan]</p><p>或者</p><p>Router(config)#ip access-list extended access-list-number</p><p>Router(config-std-nacl)#{permit|deny} protocol {source souce-wildcard destination destination-wildcard} [operator operan]</p><p>下面是命令参数的详细说明</p><p>access-list-number：访问控制列表号，扩展ACL取值100-199，可以使用名称替代列表号。</p><p>Sequence Number：每条ACL规则列表序列号，可使用范围1-2147483647。</p><p>permit|deny：如果满足规则，则允许/拒绝通过。</p><p>protocol：用来指定协议的类型，如IP，TCP，UDP，ICMP等。</p><p>source、destination：源和目的，分别用来标示源地址和目的地址。</p><p>souce-wildcard、destination-wildcard：子网反码，souce-wildcard是源反码，destination-wildcard是目标反码。</p><p>operator operan：lt(小于)、gt(大于)、eq(等于)、neq(不等于)、rand(范围端口号)等。</p></blockquote><blockquote><p><strong>DHCP</strong></p><p>​DHCP全称为Dynamic Host Configuration Protocol，中文含义为“动态主机配置协议”，通常被应用在大型的局域网络环境中，主要作用是集中管理、分配IP地址，使网络环境中的主机动态获得IP地址、Gateway地址、<a href="https://product.pconline.com.cn/itbk/wlbg/network/1305/3304121.html">DNS</a>服务器地址等信息，并能够提升地址的使用率。</p><p>DHCP协议采用客户端/服务器模型，主机地址的动态分配任务由网络主机驱动。当DHCP服务器接收到来自网络主机申请地址的信息时，才会向网络主机发送相关的地址配置等信息，以实现网络主机地址信息的动态配置。</p><p>​<strong>DHCP服务器</strong>就是自动给电脑分配IP地址和子网掩码的服务器。比如我们设置了路由器的DHCP服务器，让DHCP服务器自动分配IP地址，从<a href="https://product.pconline.com.cn/itbk/wlbg/network/1403/4387067.html">192.168.1.1</a>00到192.168.1.199(子网掩码会自动设置，我们无需设置)。</p></blockquote><h2 id="实训4-rip一般配置方法"><a class="markdownIt-Anchor" href="#实训4-rip一般配置方法"></a> 实训4 RIP一般配置方法</h2><blockquote><p>RIP（Routing　Information protocol) 路由信息协议.<br />是一种内部网关协议（IGP），是一种动态路由选择协议，用于自治系统（AS）内的路由信息的传递。RIP协议基于距离矢量算法（DistanceVectorAlgorithms），使用“跳数”(即metric)来衡量到达目标地址的路由距离。RIP通过UDP报文进行路由信息交换,使用的端口号为520.</p><p>这种协议的路由器<strong>只关心自己周围的世界，只与自己相邻的路由器交换信息，范围限制在15跳(15度)之内</strong>，再远，它就不关心了。RIP应用于OSI网络七层模型的应用层。各厂家定义的管理距离（AD，即优先级）如下：华为定义的优先级是100，思科定义的优先级是120。</p></blockquote><blockquote><p>第一步：将每个设备的IP地址配好</p><p>Router#configure terminal<br />Enter configuration commands, one per line.  End with CNTL/Z.<br />Router(config)#interface g0/0<br />Router(config-if)#ip address 192.168.1.1 255.255.255.0<br />Router(config-if)#no shutdown<br />Router(config-if)#exit<br />Router(config)#interface Se0/3/0<br />Router(config-if)#ip address 10.0.0.1 255.0.0.0<br />Router(config-if)#no shutdown<br />Router(config-if)#end<br />Router#<br />%SYS-5-CONFIG_I: Configured from console by console</p><p>Router#</p></blockquote><blockquote><p>第二步：配置rip路由</p><p>Router(config)#hostname R0<br />R0(config)#end<br />R0#<br />%SYS-5-CONFIG_I: Configured from console by console<br />R0#configure terminal<br />Enter configuration commands, one per line.  End with CNTL/Z.<br />R0(config)#route rip<br />R0(config-router)#network 192.168.1.0<br />R0(config-router)#network 10.0.0.0<br />R0(config-router)#end</p></blockquote><h2 id="实训5-华为交换初步"><a class="markdownIt-Anchor" href="#实训5-华为交换初步"></a> 实训5 华为交换初步</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">实训目的：</span><br><span class="line">了解VLAN的划分方法；</span><br><span class="line">了解VLAN特性；</span><br><span class="line">了解Trunk的配置方法</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/sizaif/article/details/78281112">(30条消息) 二层交换机实现vlan 功能 (Cisco Packer Tracer 模拟器)_sizaif的博客-CSDN博客</a></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222403094.png" alt="image-20220908222403094" /></p><blockquote><p>主机配置：</p><p>Switch&gt;en<br />Switch#conf<br />Switch(config)#vlan 10 // 创建 vlan 10<br />Switch(config-vlan)#vlan 20 // 创建 vlan 20<br />Switch(config-vlan)#EXIT<br />Switch(config-if)#interface fa0/1  // 进入端口 f0/1 并配置为接入到vlan10 的access 模式<br />Switch(config-if)#switchport mode access<br />Switch(config-if)#switchport  access  vlan 10<br />Switch(config-if)#interface fa0/2  //进入端口 f0/2 并配置为接入到vlan20 的access 模式<br />Switch(config-if)#switchport mode access<br />Switch(config-if)#switchport  access  vlan 20</p></blockquote><blockquote><p>交换机配置：</p><p>Switch&gt;en<br />Switch#conf<br />Switch(config)#interface fa0/24 // 进入端口f0/24  并设置为trun 模式，允许所以vlan通过<br />Switch(config-if)#switchport mode access<br />Switch(config-if)#switchport mode trunk<br />Switch(config-if)#switchport trunk allowed vlan all</p></blockquote><p>192.168.1.1 ----- &gt;ping 192.168.2.2 <strong>ping不通  ：同一交换机下，不同vlan，不同网段</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222437617.png" alt="image-20220908222437617" style="zoom: 67%;" /><p>192.168.1.1 ----- &gt; ping 192.168.1.4 <strong>ping通： 跨交换机，同一vlan，同一网段</strong></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220908222508744.png" alt="image-20220908222508744" style="zoom:67%;" /><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Switch<span class="meta">#show ip route</span></span><br><span class="line">Switch<span class="meta">#show vlan</span></span><br><span class="line">Switch<span class="meta">#write #保存已写的内容</span></span><br><span class="line">    </span><br><span class="line">PC&gt;ipconfig IP</span><br><span class="line">PC&gt;ping <span class="number">192.168</span><span class="number">.2</span><span class="number">.2</span></span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220903230622353.png" alt="image-20220903230622353" /></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">二层交换机</span><br><span class="line">Switch&gt;en</span><br><span class="line">Switch<span class="meta">#conf t</span></span><br><span class="line"></span><br><span class="line">#设置<span class="function">vlan    </span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config)</span><span class="meta">#vlan 2</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config)</span><span class="meta">#vlan 3</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-vlan)</span><span class="meta">#exit</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">#同一个vlan交流，配置vlan就用switchport access vlan n就足够了</span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config)</span><span class="meta">#int fa 0/2</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#switchport access vlan 2</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#int fa 0/3</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#switchport access vlan 3</span></span></span><br><span class="line"><span class="function">#想vlan2和vlan3交流就得使用trunk协议，二层交换机上配置如下：</span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#int fa 0/1</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#switchport mode trunk</span></span></span><br><span class="line"><span class="function">  </span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#end</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">三层交换机</span><br><span class="line">Switch&gt;en</span><br><span class="line">Switch<span class="meta">#conf t</span></span><br><span class="line"></span><br><span class="line">Switch(config)<span class="meta">#vlan 2</span></span><br><span class="line">Switch(config)<span class="meta">#vlan 3</span></span><br><span class="line">Switch(config-vlan)<span class="meta">#exit</span></span><br><span class="line"></span><br><span class="line">#三层交换机口配置    </span><br><span class="line">Switch(config)<span class="meta">#int fa 0/1</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk encapsulation dot1q</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk allowed vlan 2,3</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"></span><br><span class="line">#启动vlan n的使用</span><br><span class="line">Switch(config)<span class="meta">#int vlan 2</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.1 255.255.255.0</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line">（vlan <span class="number">3</span> 同理）</span><br><span class="line"></span><br><span class="line">#开启三层交换机默认路由</span><br><span class="line">Switch(config)<span class="meta">#ip routing</span></span><br><span class="line">Switch(config)<span class="meta">#exit</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">##配置VTP服务器https:<span class="comment">//www.cnblogs.com/zoulongbin/p/9047390.html</span></span><br><span class="line">#三层交换机实现服务器</span><br><span class="line">Switch&gt;enable</span><br><span class="line">Switch<span class="meta">#vlan database</span></span><br><span class="line">Switch(vlan)<span class="meta">#vtp domain CCTV</span></span><br><span class="line">Switch(vlan)<span class="meta">#vtp server</span></span><br><span class="line">    </span><br><span class="line">##创建<span class="function">VLAN</span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(vlan)</span><span class="meta">#vlan 10 name VLAN10</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(vlan)</span><span class="meta">#vlan 20 name VLAN20</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(vlan)</span><span class="meta">#exit</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">##配置VLAN IP地址</span></span><br><span class="line"><span class="function">Switch<span class="meta">#configure terminal</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config)</span><span class="meta">#interface vlan 10</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#ip address 192.168.10.1 255.255.255.0</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#exit</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config)</span><span class="meta">#interface vlan 20</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#ip address 192.168.20.1 255.255.255.0</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#exit</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">##开启三层交换机默认路由</span></span><br><span class="line"><span class="function">3560<span class="title">SW</span><span class="params">(config)</span><span class="meta">#ip routing</span></span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">#设置端口汇聚<span class="params">(trunk)</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config)</span><span class="meta">#interface range fastEthernet 0/22-24</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>-range)</span><span class="meta">#switchport trunk encapsulation dot1q</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>-range)</span><span class="meta">#switchport mode trunk</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>-range)</span><span class="meta">#no shutdown</span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>-range)</span><span class="meta">#exit</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#二层交换机作为VTP客户端</span><br><span class="line">Switch<span class="meta">#vlan database</span></span><br><span class="line">Switch(vlan)<span class="meta">#vtp domain CCTV</span></span><br><span class="line">Switch(vlan)<span class="meta">#vtp client</span></span><br><span class="line">Switch(vlan)<span class="meta">#exit</span></span><br><span class="line">    </span><br><span class="line">##设置端口汇聚(trunk)</span><br><span class="line">Switch<span class="meta">#configure terminal</span></span><br><span class="line">Switch(config)<span class="meta">#interface fastEthernet 0/24</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line">    </span><br><span class="line">##分配VLAN所属端口</span><br><span class="line">Switch<span class="meta">#configure terminal</span></span><br><span class="line">Switch(config)<span class="meta">#interface range fastEthernet 0/1-5</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#switchport access vlan 10</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#switchport mode access</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#no shutdown</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>-range)<span class="meta">#exit</span></span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220903233009617.png" alt="image-20220903233009617" /></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#PC机与路由器间的配置：</span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#interface FastEthernet0/0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.254 255.255.255.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#exit  </span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#路由器与路由器间的配置</span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#interface GigabitEthernet0/0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#ip address 172.16.10.1 255.255.255.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#no shutdown                          </span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"><span class="meta">#ospf配置</span></span><br><span class="line">Router(config)<span class="meta">#router ospf 10                        </span></span><br><span class="line">Router(config-router)<span class="meta">#network 172.16.10.0 0.0.0.255 area 1 </span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#配置loopback接口（ip自定义）</span><br><span class="line">Router(config)<span class="meta">#interface loopback 0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#ip address 1.1.1.1 255.255.255.255</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br><span class="line">Router(config)<span class="meta">#interface loopback 1</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.1 255.255.255.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220903233645910.png" alt="image-20220903233645910" /></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#路由器地址配置</span><br><span class="line">Router(config)<span class="meta">#interface g0/0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.1.1 255.255.255.0</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br><span class="line">Router(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#路由器RIP配置</span><br><span class="line">Router(config)<span class="meta">#hostname R0</span></span><br><span class="line">R0(config)<span class="meta">#route rip</span></span><br><span class="line">R0(config-router)<span class="meta">#network 192.168.1.0</span></span><br><span class="line">R0(config-router)<span class="meta">#network 10.0.0.0</span></span><br><span class="line">R0(config-router)<span class="meta">#end</span></span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220903234041573.png" alt="image-20220903234041573" /></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">主机的vlan配置：</span><br><span class="line">Switch(config)<span class="meta">#vlan 10  </span></span><br><span class="line">Switch(config-vlan)#<span class="function">EXIT</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#interface fa0/1 </span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#switchport mode access </span></span></span><br><span class="line"><span class="function"><span class="title">Switch</span><span class="params">(config-<span class="keyword">if</span>)</span><span class="meta">#switchport access vlan 10</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">二层交换机间的配置：</span><br><span class="line">Switch(config)<span class="meta">#interface fa0/24 </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport mode access </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk allowed vlan all</span></span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220904091713476.png" alt="image-20220904091713476" /></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">路由器与交换机间的配置：</span><br><span class="line">（<span class="number">1</span>）交换机端口配置</span><br><span class="line">#f0/<span class="number">1</span>协议配置</span><br><span class="line">Switch(config)<span class="meta">#interface f0/1</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport trunk encapsulation dot1q</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#switchport mode trunk</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br><span class="line"></span><br><span class="line">#f0/<span class="number">1</span> IP配置</span><br><span class="line">Switch(config)<span class="meta">#interface f0/1</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#no switchport（使其成为路由器接口） </span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.30.1 255.255.255.0</span></span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）路由器配置</span><br><span class="line">Switch(config)<span class="meta">#interface f0/0</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#no shutdown</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#ip address 192.168.30.2 255.255.255.0</span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#exit</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#DHCP:动态地址获取</span><br><span class="line">Switch(config)<span class="meta">#ip dhcp pool vlan20</span></span><br><span class="line">Switch(dhcp-config)<span class="meta">#network 192.168.20.254 255.255.255.0</span></span><br><span class="line">Switch(dhcp-config)<span class="meta">#default-router 192.168.20.254</span></span><br><span class="line">Switch(dhcp-config)<span class="meta">#dns-server 8.8.8.8</span></span><br><span class="line">Switch(dhcp-config)<span class="meta">#end</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#telnet:远程登陆</span></span><br><span class="line">Switch（config）<span class="meta">#enable password 123</span></span><br><span class="line">Switch（config）<span class="meta"># <span class="meta-keyword">line</span> vty 0 2</span></span><br><span class="line">Switch（config-line）<span class="meta"># password cisco</span></span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220904144443585.png" alt="image-20220904144443585" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实训一阶段1基本网络通信&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#实训一阶段1基本网络通信&quot;&gt;&lt;/a&gt; 实训一阶段1：基本网络通信&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;要求：&lt;/p&gt;
&lt;p&gt;开发一个聊天程序；&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="计算机网络" scheme="https://zhang0224gz.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>卡尔曼滤波（修饰直立角度）</title>
    <link href="https://zhang0224gz.github.io/2022/07/17/%E6%99%BA%E8%83%BD%E8%BD%A6/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/"/>
    <id>https://zhang0224gz.github.io/2022/07/17/%E6%99%BA%E8%83%BD%E8%BD%A6/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2/</id>
    <published>2022-07-17T08:38:23.433Z</published>
    <updated>2022-07-17T08:40:54.878Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实验室传的</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;kalman_filter.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> angle, angle_dot; <span class="comment">//外部需要引用的变量</span></span><br><span class="line"><span class="comment">//-------------------------------------------------------</span></span><br><span class="line"><span class="keyword">float</span> Q_angle=<span class="number">0.001</span>, Q_gyro=<span class="number">0.003</span>, R_angle=<span class="number">1.2</span>, dt=<span class="number">0.008</span>;<span class="comment">//</span></span><br><span class="line"><span class="keyword">float</span> P[<span class="number">2</span>][<span class="number">2</span>] = &#123;</span><br><span class="line">    &#123; <span class="number">1</span>, <span class="number">0</span> &#125;,</span><br><span class="line">    &#123; <span class="number">0</span>, <span class="number">1</span> &#125;</span><br><span class="line"> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> Pdot[<span class="number">4</span>] =&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> C_0 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> q_bias, angle_err, PCt_0, PCt_1, E, K_0, K_1, t_0, t_1;</span><br><span class="line"><span class="comment">//-------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Kalman_Filter</span><span class="params">(<span class="keyword">float</span> angle_m,<span class="keyword">float</span> gyro_m)</span><span class="comment">//gyro_m:gyro_measure</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">angle+=(gyro_m-q_bias) * dt;<span class="comment">//先验估计</span></span><br><span class="line"></span><br><span class="line">Pdot[<span class="number">0</span>]=Q_angle - P[<span class="number">0</span>][<span class="number">1</span>] - P[<span class="number">1</span>][<span class="number">0</span>];<span class="comment">// Pk-&#x27; 先验估计误差协方差的微分</span></span><br><span class="line">Pdot[<span class="number">1</span>]=- P[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">Pdot[<span class="number">2</span>]=- P[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">Pdot[<span class="number">3</span>]=Q_gyro;</span><br><span class="line"></span><br><span class="line">P[<span class="number">0</span>][<span class="number">0</span>] += Pdot[<span class="number">0</span>] * dt;<span class="comment">// Pk- 先验估计误差协方差微分的积分 = 先验估计误差协方差</span></span><br><span class="line">P[<span class="number">0</span>][<span class="number">1</span>] += Pdot[<span class="number">1</span>] * dt;</span><br><span class="line">P[<span class="number">1</span>][<span class="number">0</span>] += Pdot[<span class="number">2</span>] * dt;</span><br><span class="line">P[<span class="number">1</span>][<span class="number">1</span>] += Pdot[<span class="number">3</span>] * dt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">angle_err = angle_m - angle;<span class="comment">//zk-先验估计</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PCt_0 = C_0 * P[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">PCt_1 = C_0 * P[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">E = R_angle + C_0 * PCt_0;</span><br><span class="line"></span><br><span class="line">K_0 = PCt_0 / E;<span class="comment">//Kk</span></span><br><span class="line">K_1 = PCt_1 / E;</span><br><span class="line"></span><br><span class="line">t_0 = PCt_0;</span><br><span class="line">t_1 = C_0 * P[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">P[<span class="number">0</span>][<span class="number">0</span>] -= K_0 * t_0;<span class="comment">//后验估计误差协方差</span></span><br><span class="line">P[<span class="number">0</span>][<span class="number">1</span>] -= K_0 * t_1;</span><br><span class="line">P[<span class="number">1</span>][<span class="number">0</span>] -= K_1 * t_0;</span><br><span class="line">P[<span class="number">1</span>][<span class="number">1</span>] -= K_1 * t_1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">angle += K_0 * angle_err;<span class="comment">//后验估计//最优角度</span></span><br><span class="line">q_bias+= K_1 * angle_err;<span class="comment">//后验估计</span></span><br><span class="line">angle_dot = gyro_m-q_bias;<span class="comment">//输出值（后验估计）的微分 = 角速度//最优角速度</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __KALMAN_FILTER_H__</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __KALMAN_FILTER_H__</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;common.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define rate angle_dot</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">float</span> angle, angle_dot; <span class="comment">//外部需要引用的变量</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Kalman_Filter</span><span class="params">(<span class="keyword">float</span> angle_m,<span class="keyword">float</span> gyro_m)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="智能车" scheme="https://zhang0224gz.github.io/categories/%E6%99%BA%E8%83%BD%E8%BD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>大津法求图像动态阈值</title>
    <link href="https://zhang0224gz.github.io/2022/07/17/%E6%99%BA%E8%83%BD%E8%BD%A6/%E5%A4%A7%E6%B4%A5%E6%B3%95/"/>
    <id>https://zhang0224gz.github.io/2022/07/17/%E6%99%BA%E8%83%BD%E8%BD%A6/%E5%A4%A7%E6%B4%A5%E6%B3%95/</id>
    <published>2022-07-17T08:25:09.202Z</published>
    <updated>2022-07-17T08:33:25.705Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实验室的师哥传的</span></span><br><span class="line"><span class="function">uint8 <span class="title">auto_threshold</span><span class="params">(uint8 * mt9v03x_image, <span class="keyword">int</span> width,<span class="keyword">int</span> height)</span><span class="comment">//uint8 *image, uint16 col, uint16 row</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> colorarray[<span class="number">256</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int32_t</span> tol_sumgray=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int32_t</span> tol_colsum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int32_t</span> icp_colsum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int32_t</span> max_colasg=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int32_t</span> icp_sumgray=<span class="number">0</span>;</span><br><span class="line">    uint8 threshold = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> exp1=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> exp2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> copli_exp=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> crt_vari=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</span><br><span class="line">        colorarray[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; height; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; width; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            colorarray[(<span class="keyword">int</span>) mt9v03x_image[i * width + j]]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;=<span class="number">255</span>; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        tol_sumgray+=k*colorarray[k];</span><br><span class="line">        tol_colsum+=colorarray[k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;=<span class="number">254</span>; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        icp_colsum+=colorarray[k];</span><br><span class="line">        max_colasg=tol_colsum-icp_colsum;</span><br><span class="line">        icp_sumgray+=k*colorarray[k];</span><br><span class="line">        exp1=(<span class="keyword">float</span>)icp_sumgray/icp_colsum;</span><br><span class="line">        exp2=(<span class="keyword">float</span>)(tol_sumgray-icp_sumgray)/max_colasg;</span><br><span class="line">        copli_exp=icp_colsum*max_colasg*(exp1-exp2)*(exp1-exp2);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(copli_exp&gt;crt_vari)</span><br><span class="line">        &#123;</span><br><span class="line">            crt_vari=copli_exp;</span><br><span class="line">            threshold=k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (threshold+<span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我写的……</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GrayScale 256</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">uint8 <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  uint16 i,j;</span><br><span class="line">  uint8 img_row=row,img_col=col; </span><br><span class="line">  uint16 histogram[GrayScale]; <span class="comment">//灰度直方图</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第一步：初始化灰度直方图</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;GrayScale; i++)</span><br><span class="line">    histogram[i]=<span class="number">0</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第二步：统计每个灰度值出现得次数</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;img_row; i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;img_col; j++)</span><br><span class="line">      ++histogram[mt9v03x_image[i][j]];</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第三步： 获取最小最大灰度值</span></span><br><span class="line">  uint16 minGray,maxGray;</span><br><span class="line">  <span class="keyword">for</span>(minGray=<span class="number">0</span>;minGray&lt;<span class="number">256</span>&amp;&amp;histogram[minGray]==<span class="number">0</span>;minGray++);</span><br><span class="line">  <span class="keyword">for</span>(maxGray=<span class="number">255</span>;maxGray&gt;minGray&amp;&amp;histogram[maxGray]==<span class="number">0</span>;maxGray--);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第四步：分情况讨论</span></span><br><span class="line">  <span class="comment">// 最大=最小，图像只有一种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray)</span><br><span class="line">    <span class="keyword">return</span> maxGray;</span><br><span class="line">  <span class="comment">//最大=最小+1，图像只有两种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> minGray;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第五步：统计[最小,最大]范围内的像素总数</span></span><br><span class="line">  uint16 PixelSum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">    PixelSum += histogram[i];</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第六步：统计[最小,最大]范围内的灰度值总数(灰度值*出现次数)</span></span><br><span class="line">  uint16 GraySum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">    GraySum += histogram[i]*i;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  <span class="comment">//第七步： 大津法优化</span></span><br><span class="line">  <span class="keyword">float</span> w0; <span class="comment">//前景像素点占整幅图像的百分比 </span></span><br><span class="line">  <span class="keyword">float</span> w1; <span class="comment">//背景像素点占整幅图像的百分比 </span></span><br><span class="line">  uint16 w0num; <span class="comment">//前景像素点数 </span></span><br><span class="line">  uint16 w1num; <span class="comment">// 背景像素点数 </span></span><br><span class="line">  uint16 u0gray; <span class="comment">//前景灰度值 </span></span><br><span class="line">  uint16 u1gray; <span class="comment">//背景灰度值 </span></span><br><span class="line">  <span class="keyword">float</span> u0; <span class="comment">//w0平均灰度</span></span><br><span class="line">  <span class="keyword">float</span> u1; <span class="comment">//w1平均灰度</span></span><br><span class="line">  <span class="keyword">float</span> deltaTmp=<span class="number">0</span>,deltaMax=<span class="number">-1</span>;</span><br><span class="line">  uint8 th;</span><br><span class="line">  </span><br><span class="line">  u0gray = u1gray = w0num = w1num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    w0num += histogram[i];</span><br><span class="line">    w1num = PixelSum-w0num;</span><br><span class="line">    w0 = w0num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    w1 = w1num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    u0gray += histogram[i]*i;</span><br><span class="line">    u1gray = GraySum-u0gray;</span><br><span class="line">    u0 = u0gray*<span class="number">1.0</span>/w0num;</span><br><span class="line">    u1 = u1gray*<span class="number">1.0</span>/w1num;</span><br><span class="line">    deltaTmp = (<span class="keyword">float</span>)(w0 * w1 * (u0 - u1)*(u0 - u1)); </span><br><span class="line">    <span class="comment">//类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//第八步：遍历最大类间方差（因为呈正态分布） </span></span><br><span class="line">    <span class="keyword">if</span>(deltaTmp&gt;deltaMax)</span><br><span class="line">    &#123;</span><br><span class="line">      deltaMax = deltaTmp;</span><br><span class="line">      th = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> th;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="智能车" scheme="https://zhang0224gz.github.io/categories/%E6%99%BA%E8%83%BD%E8%BD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>霍夫变换检测椭圆</title>
    <link href="https://zhang0224gz.github.io/2022/07/04/%E6%99%BA%E8%83%BD%E8%BD%A6/%E9%9C%8D%E5%A4%AB%E5%8F%98%E6%8D%A2%E6%A3%80%E6%B5%8B%E6%A4%AD%E5%9C%86/"/>
    <id>https://zhang0224gz.github.io/2022/07/04/%E6%99%BA%E8%83%BD%E8%BD%A6/%E9%9C%8D%E5%A4%AB%E5%8F%98%E6%8D%A2%E6%A3%80%E6%B5%8B%E6%A4%AD%E5%9C%86/</id>
    <published>2022-07-04T01:50:45.957Z</published>
    <updated>2022-07-17T08:25:38.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="霍夫变换一"><a class="markdownIt-Anchor" href="#霍夫变换一"></a> <a href="https://www.bilibili.com/video/BV1p64y1v7xc/?spm_id_from=333.788.recommend_more_video.-1&amp;vd_source=782aa73433808ec5aa2f50f2b8289cfd">霍夫变换（一）</a></h1><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704095426111.png" alt="image-20220704095426111" style="zoom:80%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704095515750.png" alt="image-20220704095515750" style="zoom: 50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704095602210.png" alt="image-20220704095602210" style="zoom:50%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704095632648.png" alt="image-20220704095632648" style="zoom:50%;" /><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义椭圆结构体，成员包含累积计数，中心点，长短半轴，倾斜角度 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Ellipse</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> accumulator;</span><br><span class="line">    <span class="keyword">double</span> xc, yc;</span><br><span class="line">    <span class="keyword">double</span> a, b;</span><br><span class="line">    <span class="keyword">double</span> angle;</span><br><span class="line">&#125; Ellipse;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建格子，传累加器列表和精度 </span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; _create_bins(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; acc, <span class="keyword">double</span> binSize) &#123;</span><br><span class="line"><span class="comment">//把累加器列表中最大值取出，即计算得到的短半轴平方的所有值中最大的值 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;::const_iterator maxPos = <span class="built_in">std</span>::max_element(acc.begin(), acc.end());</span><br><span class="line">    <span class="keyword">double</span> maxVal = *maxPos;</span><br><span class="line">    <span class="comment">//要返回的格子列表 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; v;</span><br><span class="line">    <span class="comment">//格子是从0开始，到最大值，间隔为精度 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">double</span> d = <span class="number">0</span>; d &lt; maxVal + binSize; d += binSize) &#123;</span><br><span class="line">        v.push_back(d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后是计算直方图数据的函数，传入累加器列表和格子列表，返回就是累加器列表中的值落入相应的格子的计算的列表 </span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; _histogram(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; acc, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; bins) &#123;</span><br><span class="line"><span class="comment">//直方图的数据列表，大小比格子的边界数少1 </span></span><br><span class="line">    <span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">hist</span><span class="params">(bins.size()<span class="number">-1</span>)</span></span>;</span><br><span class="line">    <span class="comment">//直方图数据初始化为0 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hist.size(); i++) &#123;</span><br><span class="line">        hist[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//遍历累加器列表中的数据，看落入了哪个格子 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; acc.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">double</span> a = acc[i];</span><br><span class="line">        <span class="comment">//看落入哪个格子 </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; bins.size()<span class="number">-1</span>; j++) &#123;</span><br><span class="line">        <span class="comment">//格子的左边值和右边值，除了最后一个格子，都是左闭右开 </span></span><br><span class="line">            <span class="keyword">double</span> left = bins[j];</span><br><span class="line">            <span class="keyword">double</span> right = bins[j+<span class="number">1</span>];</span><br><span class="line">            <span class="comment">//如果值落入相应的格子，相应的直方图计算加1 </span></span><br><span class="line">            <span class="keyword">if</span> (a &gt;= left &amp;&amp; a &lt; right) &#123;</span><br><span class="line">                hist[j]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果为最后一个格子的边界，最后一个格子的计算也要加1，最后一个格子是左闭右也闭 </span></span><br><span class="line">        <span class="keyword">if</span> (a == bins[bins.size()<span class="number">-1</span>]) &#123;</span><br><span class="line">            hist[bins.size()<span class="number">-2</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hist;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义算法的实现函数，返回检测到的椭圆列表</span></span><br><span class="line"><span class="comment">//参数：传入的边缘图，</span></span><br><span class="line"><span class="comment">//累计计数的阈值（即达到什么值才认为有效），</span></span><br><span class="line"><span class="comment">//精度（主要用来定义直方图的格子），</span></span><br><span class="line"><span class="comment">//轴的最小值，</span></span><br><span class="line"><span class="comment">//轴的最大值（如果为-1，则取图像宽高中小的那个一半），</span></span><br><span class="line"><span class="comment">//第一个轴的最大值（如果为-1，则无限制） </span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Ellipse&gt; _hough_ellipse(<span class="keyword">const</span> cv::Mat&amp; edges, <span class="keyword">int</span> threshold, <span class="keyword">double</span> accuracy,</span><br><span class="line"> <span class="keyword">int</span> minAxis, <span class="keyword">int</span> maxAxis=<span class="number">-1</span>, <span class="keyword">int</span> maxFirst=<span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="comment">//定义返回的列表 </span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Ellipse&gt; results;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//拿到图像的宽高 </span></span><br><span class="line">    <span class="keyword">int</span> numRows = edges.rows;</span><br><span class="line">    <span class="keyword">int</span> numCols = edges.cols;</span><br><span class="line">    <span class="comment">//边缘图像的非零点位置 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nonzeroXIndices, nonzeroYIndices;</span><br><span class="line">    <span class="comment">//把边缘图像的非零点找出来 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numRows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; numCols; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (edges.ptr&lt;uchar&gt;(i)[j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                nonzeroXIndices.push_back(j);</span><br><span class="line">                nonzeroYIndices.push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//总共有多少非零点 </span></span><br><span class="line">    <span class="keyword">int</span> numPixels = nonzeroXIndices.size();</span><br><span class="line">    <span class="comment">//累加器列表 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; accumulator;</span><br><span class="line">    <span class="comment">//精度，即直方图的格子宽度，这里取平方，因为下面的算法计算短半轴时为了减少计算量也是用平方（不开方） </span></span><br><span class="line">    <span class="keyword">double</span> binSize = accuracy*accuracy;</span><br><span class="line">    <span class="comment">//最大的半轴值，也取平方以避免开方 </span></span><br><span class="line">    <span class="keyword">double</span> maxAxisSquared = maxAxis*maxAxis;</span><br><span class="line">    <span class="comment">//如果轴的最大值为-1，则取图像宽高中小的那个一半</span></span><br><span class="line">    <span class="keyword">if</span> (maxAxis == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (numRows &lt; numCols) &#123;</span><br><span class="line">            maxAxisSquared = cvRound(<span class="number">0.5</span>*numRows);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            maxAxisSquared = cvRound(<span class="number">0.5</span>*numCols);</span><br><span class="line">        &#125;</span><br><span class="line">        maxAxisSquared *= maxAxisSquared;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一些变量 </span></span><br><span class="line">    <span class="keyword">int</span> p1, p2, p, x1, y1, x2, y2, x, y;</span><br><span class="line">    <span class="keyword">double</span> x0, y0, a, b, d, k, dx, dy, fSquared, cosTauSquared, bSquared, alpha;</span><br><span class="line">    <span class="comment">//遍历所有非零点 </span></span><br><span class="line">    <span class="keyword">for</span> (p1 = <span class="number">0</span>; p1 &lt; numPixels; p1++) &#123;</span><br><span class="line">    <span class="comment">//取另一个非零点（因为点的顺序不影响，所以，已经处理过的非零点对不再处理） </span></span><br><span class="line">        <span class="keyword">for</span> (p2 = <span class="number">0</span>; p2 &lt; p1; p2++) &#123;</span><br><span class="line">        <span class="comment">//把点(x1,y1),(x2,y2)取出 </span></span><br><span class="line">            x1 = nonzeroXIndices[p1];</span><br><span class="line">            y1 = nonzeroYIndices[p1];</span><br><span class="line">            x2 = nonzeroXIndices[p2];</span><br><span class="line">            y2 = nonzeroYIndices[p2];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//计算长半轴 </span></span><br><span class="line">            dx = x1-x2;</span><br><span class="line">            dy = y1-y2;</span><br><span class="line">            a = <span class="number">0.5</span>*<span class="built_in">std</span>::<span class="built_in">sqrt</span>(dx*dx+dy*dy);</span><br><span class="line">            <span class="comment">//看第一个轴的最大值是否为-1，用于判断计算得到的a是否符合要求 </span></span><br><span class="line">            <span class="keyword">bool</span> bMaxFirst = (maxFirst == <span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span> (maxFirst != <span class="number">-1</span>) &#123;</span><br><span class="line">                bMaxFirst = (a &lt;= maxFirst);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果计算到的长半轴a符合要求（大于最小轴的值，并小于第一个轴最大值） </span></span><br><span class="line">            <span class="keyword">if</span> (a &gt; minAxis &amp;&amp; bMaxFirst) &#123;</span><br><span class="line">            <span class="comment">//计算中心点 </span></span><br><span class="line">                x0 = <span class="number">0.5</span>*(x1+x2);</span><br><span class="line">                y0 = <span class="number">0.5</span>*(y1+y2);</span><br><span class="line">                <span class="comment">//对非零点对，遍历所有非零的点计算短半轴 </span></span><br><span class="line">                <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; numPixels; p++) &#123;</span><br><span class="line">                <span class="comment">//取出假设的位于椭圆上的点 </span></span><br><span class="line">                    x = nonzeroXIndices[p];</span><br><span class="line">                    y = nonzeroYIndices[p];</span><br><span class="line">                    dx = x-x0;</span><br><span class="line">                    dy = y-y0;</span><br><span class="line">                    <span class="comment">//计算此点到中心点的距离d </span></span><br><span class="line">                    d = <span class="built_in">std</span>::<span class="built_in">sqrt</span>(dx*dx+dy*dy);</span><br><span class="line">                    <span class="comment">//如果此距离大于最小轴的值，则认为此点有可能为椭圆上的点 </span></span><br><span class="line">                    <span class="keyword">if</span> (d &gt; minAxis) &#123;</span><br><span class="line">                        dx = x-x2;</span><br><span class="line">                        dy = y-y2;</span><br><span class="line">                        <span class="comment">//计算f的值的平方 </span></span><br><span class="line">                        fSquared = dx*dx+dy*dy;</span><br><span class="line">                        <span class="comment">//计算cosTau </span></span><br><span class="line">                        cosTauSquared = (a*a+d*d-fSquared) / (<span class="number">2</span>*a*d);</span><br><span class="line">                        <span class="comment">//再计算cosTau的平方 </span></span><br><span class="line">                        cosTauSquared *= cosTauSquared;</span><br><span class="line">                        <span class="comment">//计算b平方的分母 </span></span><br><span class="line">                        k = a*a-d*d*cosTauSquared;</span><br><span class="line">                        <span class="comment">//让b要在合理的条件内 </span></span><br><span class="line">                        <span class="keyword">if</span> (k &gt; <span class="number">0</span> &amp;&amp; cosTauSquared &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="comment">//计算b的平方 </span></span><br><span class="line">                            bSquared = a*a*d*d*(<span class="number">1</span>-cosTauSquared) / k;</span><br><span class="line">                            <span class="comment">//计算到的b的平方要小于最大轴的值的平方 </span></span><br><span class="line">                            <span class="keyword">if</span> (bSquared &lt;= maxAxisSquared) &#123;</span><br><span class="line">                            <span class="comment">//把符合要求的短半轴的平方值放入累加器列表中 </span></span><br><span class="line">                                accumulator.push_back(bSquared);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//对非零点对计算完所有短半轴b，看符合要求的值有没有，即累加器列表里是否有值 </span></span><br><span class="line">                <span class="keyword">if</span> (accumulator.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//有值，则说明有可能有相应的短半轴与这一对非零点组成的长轴构成一个椭圆 </span></span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; bins;</span><br><span class="line">                    <span class="comment">//下面是对累加器列表中的短半轴平方的数据进行处理，看能不能找到合适的短半轴，</span></span><br><span class="line"><span class="comment">//首先是利用精度来创建格子 </span></span><br><span class="line">                    bins = _create_bins(accumulator, binSize);</span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; hist;</span><br><span class="line">                    <span class="comment">//然后按创建的格子计算累计器列表的直方图 </span></span><br><span class="line">                    hist = _histogram(accumulator, bins);</span><br><span class="line">                    <span class="comment">//把直方图计数数据中的最大值找出来 </span></span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator histMaxIter = <span class="built_in">std</span>::max_element(hist.begin(), hist.end());</span><br><span class="line">                    <span class="keyword">int</span> histMax = *histMaxIter;</span><br><span class="line">                    <span class="comment">//如果这个最大计数达到了要求的阈值，则说明这个短半轴的计算是可以构成一个椭圆的 </span></span><br><span class="line">                    <span class="keyword">if</span> (histMax &gt; threshold) &#123;</span><br><span class="line">                    <span class="comment">//计算倾斜角度 </span></span><br><span class="line">                        alpha = <span class="built_in">std</span>::<span class="built_in">atan2</span>(y2-y1, x2-x1);</span><br><span class="line">                        <span class="comment">//把直方图最大值对应的格子索引计算出来 </span></span><br><span class="line">                        <span class="keyword">int</span> maxIndex = histMaxIter - hist.begin();</span><br><span class="line">                        <span class="comment">//短半轴的值即为最大直方图计数值对应的格子的值的开方 </span></span><br><span class="line">                        b = <span class="built_in">std</span>::<span class="built_in">sqrt</span>(bins[maxIndex]);</span><br><span class="line">                        <span class="keyword">if</span> (alpha != <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="comment">//在OpenCV中，y轴是向下的，把角度改一下（其实问题不大) </span></span><br><span class="line">                            alpha = CV_PI - alpha;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//最后保证计算得到的长半轴和短半轴都大于0，则认为确定了一个椭圆 </span></span><br><span class="line">                        <span class="keyword">if</span> (a &gt; <span class="number">0</span> &amp;&amp; b &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="comment">//把确定的椭圆保存 </span></span><br><span class="line">                            Ellipse ellipse;</span><br><span class="line">                            ellipse.accumulator = histMax;</span><br><span class="line">                            ellipse.xc = x0;</span><br><span class="line">                            ellipse.yc = y0;</span><br><span class="line">                            ellipse.a = a;</span><br><span class="line">                            ellipse.b = b;</span><br><span class="line">                            ellipse.angle = alpha * <span class="number">180</span> / CV_PI;</span><br><span class="line">                            results.push_back(ellipse);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//累加器清零再进行下一对非零点 </span></span><br><span class="line">                    accumulator.clear();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> results;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="霍夫椭圆二"><a class="markdownIt-Anchor" href="#霍夫椭圆二"></a> <a href="https://www.bilibili.com/video/BV19X4y1g7vJ/?spm_id_from=333.788.recommend_more_video.0&amp;vd_source=782aa73433808ec5aa2f50f2b8289cfd">霍夫椭圆（二）</a></h1><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704095805112.png" alt="image-20220704095805112" style="zoom:67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704095920001.png" alt="image-20220704095920001" style="zoom:67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704095954559.png" alt="image-20220704095954559" style="zoom:80%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704100022278.png" alt="image-20220704100022278" style="zoom:80%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704104106972.png" alt="image-20220704104106972" style="zoom:80%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220704104040037.png" alt="image-20220704104040037" style="zoom:80%;" /><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//直接上函数，传进来源图像的高、宽、轮廓线的点，阈值，然后输出就是椭圆的参数 </span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> _hough_ellipse2(<span class="keyword">int</span> numRows, <span class="keyword">int</span> numCols, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point&gt;&amp; contour, </span><br><span class="line"><span class="keyword">double</span> threshold, cv::Point&amp; center, <span class="keyword">float</span>&amp; a, <span class="keyword">float</span>&amp; b, <span class="keyword">float</span>&amp; theta) &#123;</span><br><span class="line">    <span class="comment">//定义最大距离的图，即源图上每个点到轮廓线（这个轮廓线是先被假定是一个椭圆）的最大距离的图 </span></span><br><span class="line"><span class="function">cv::Mat <span class="title">maxDists</span><span class="params">(numRows, numCols, CV_32FC1, cv::Scalar::all(<span class="number">0</span>))</span></span>;</span><br><span class="line"><span class="comment">//任一点到轮廓线所有点的距离列表 </span></span><br><span class="line">    <span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; <span class="title">dists</span><span class="params">(contour.size())</span></span>;</span><br><span class="line">    <span class="comment">//图像上每一个点到轮廓线上的点的距离计算 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numRows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; numCols; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; contour.size(); k++) &#123;</span><br><span class="line">            <span class="comment">//计算图像上的点到轮廓线上的点的距离，并放入列表中 </span></span><br><span class="line">                <span class="keyword">float</span> dx = j-contour[k].x;</span><br><span class="line">                <span class="keyword">float</span> dy = i-contour[k].y;</span><br><span class="line">                <span class="keyword">float</span> dist = <span class="built_in">std</span>::<span class="built_in">sqrt</span>(dx*dx+dy*dy);</span><br><span class="line">                dists[k] = dist;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//从距离列表中找出最大的那个距离 </span></span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;::iterator iter = <span class="built_in">std</span>::max_element(dists.begin(), dists.end());</span><br><span class="line">            <span class="keyword">float</span> maxDist = *iter;</span><br><span class="line">            <span class="comment">//把这个最大距离放到图中相应位置 </span></span><br><span class="line">            maxDists.ptr&lt;<span class="keyword">float</span>&gt;(i)[j] = maxDist;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//有了最大距离的图，找到这个最大距离图中最小的那个距离，及这个最小距离所在的位置 </span></span><br><span class="line">    <span class="keyword">double</span> minVal;</span><br><span class="line">    cv::Point minLoc;</span><br><span class="line">    cv::minMaxLoc(maxDists, &amp;minVal, <span class="literal">NULL</span>, &amp;minLoc);</span><br><span class="line">    <span class="comment">//根据定理，最大距离中的最小那个对应椭圆的长半轴，而对应的位置就是椭圆中心 </span></span><br><span class="line">    center = minLoc;</span><br><span class="line">    a = (<span class="keyword">float</span>)minVal;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//接下来由短半轴和角度定义一个霍夫空间 </span></span><br><span class="line">    <span class="function">cv::Mat <span class="title">houghSpace</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">floor</span>(a+<span class="number">1</span>), <span class="number">180</span>, CV_32SC1, cv::Scalar::all(<span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="comment">//因为轮廓线被假定为椭圆了，所以把轮廓线上的点，再加上离散的角度，带入椭圆公式计算短半轴 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contour.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">180</span>; j++) &#123;</span><br><span class="line">        <span class="comment">//角度转为弧度 </span></span><br><span class="line">            <span class="keyword">double</span> angle = j*CV_PI/<span class="number">180</span>;</span><br><span class="line">            <span class="comment">//中心点，前面已经确认 </span></span><br><span class="line">            <span class="keyword">double</span> p = center.x;</span><br><span class="line">            <span class="keyword">double</span> q = center.y;</span><br><span class="line">            <span class="comment">//轮廓上的点 </span></span><br><span class="line">            <span class="keyword">double</span> x = contour[i].x;</span><br><span class="line">            <span class="keyword">double</span> y = contour[i].y;</span><br><span class="line">            <span class="comment">//计算sin，cos </span></span><br><span class="line">            <span class="keyword">double</span> cosTheta = <span class="built_in">std</span>::<span class="built_in">cos</span>(angle);</span><br><span class="line">            <span class="keyword">double</span> sinTheta = <span class="built_in">std</span>::<span class="built_in">sin</span>(angle);</span><br><span class="line">            <span class="comment">//公式中加号左边那一项 </span></span><br><span class="line">            <span class="keyword">double</span> part1 = <span class="built_in">std</span>::<span class="built_in">pow</span>((x-p)*cosTheta+(y-q)*sinTheta, <span class="number">2</span>) / (a*a);</span><br><span class="line">            <span class="comment">//加号右边那一项的分子 </span></span><br><span class="line">            <span class="keyword">double</span> part2 = <span class="built_in">std</span>::<span class="built_in">pow</span>(-(x-p)*sinTheta+(y-q)*cosTheta, <span class="number">2</span>);</span><br><span class="line">            <span class="comment">//计算短半轴，要取到整数，所以用了floor这个函数，先进行了加1 </span></span><br><span class="line">            <span class="keyword">int</span> B = <span class="built_in">std</span>::<span class="built_in">floor</span>(<span class="built_in">std</span>::<span class="built_in">sqrt</span>(part2 / (<span class="number">1</span>-part1)) + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//计算得到的短半轴大于0，且不大于长半轴，则霍夫空间对应短半轴和角度位置计算加1 </span></span><br><span class="line">            <span class="keyword">if</span> (B &gt; <span class="number">0</span> &amp;&amp; B &lt;= a) &#123;</span><br><span class="line">                houghSpace.ptr&lt;<span class="keyword">int</span>&gt;(B)[j] += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//得到霍夫空间的累加计数，下面把累加计数的最大值找出来 </span></span><br><span class="line">    <span class="keyword">double</span> maxVal;</span><br><span class="line">    cv::Point maxLoc;</span><br><span class="line">    cv::minMaxLoc(houghSpace, <span class="literal">NULL</span>, &amp;maxVal, <span class="literal">NULL</span>, &amp;maxLoc);</span><br><span class="line">    <span class="comment">//如果最大计数大于给定的阈值，则说明这条轮廓线有成为椭圆的潜质 </span></span><br><span class="line">    <span class="keyword">if</span> (maxVal &gt;= threshold) &#123;</span><br><span class="line">    <span class="comment">//短半轴就是最大计数对应位置的y，角度就是x </span></span><br><span class="line">        b = maxLoc.y;</span><br><span class="line">        theta = maxLoc.x;</span><br><span class="line">        <span class="comment">//最后确保长短半轴都是大于1的，这才说明成功确认一条轮廓线为一个椭圆 </span></span><br><span class="line">        <span class="keyword">return</span> (a &gt; <span class="number">1</span> &amp;&amp; b &gt; <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//网上代码：后期发现不需要也就不改了……</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/core.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/imgcodecs.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/imgproc.hpp&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/highgui.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义椭圆结构体，成员包含累积计数，中心点，长短半轴，倾斜角度 </span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Ellipse</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> accumulator;</span><br><span class="line">    <span class="keyword">double</span> xc, yc;</span><br><span class="line">    <span class="keyword">double</span> a, b;</span><br><span class="line">    <span class="keyword">double</span> angle;</span><br><span class="line">&#125; Ellipse;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建格子，传累加器列表和精度 </span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; _create_bins(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; acc, <span class="keyword">double</span> binSize) &#123;</span><br><span class="line"><span class="comment">//把累加器列表中最大值取出，即计算得到的短半轴平方的所有值中最大的值 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;::const_iterator maxPos = <span class="built_in">std</span>::max_element(acc.begin(), acc.end());</span><br><span class="line">    <span class="keyword">double</span> maxVal = *maxPos;</span><br><span class="line">    <span class="comment">//要返回的格子列表 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; v;</span><br><span class="line">    <span class="comment">//格子是从0开始，到最大值，间隔为精度 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">double</span> d = <span class="number">0</span>; d &lt; maxVal + binSize; d += binSize) &#123;</span><br><span class="line">        v.push_back(d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后是计算直方图数据的函数，传入累加器列表和格子列表，返回就是累加器列表中的值落入相应的格子的计算的列表 </span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; _histogram(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; acc, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt;&amp; bins) &#123;</span><br><span class="line"><span class="comment">//直方图的数据列表，大小比格子的边界数少1 </span></span><br><span class="line">    <span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">hist</span><span class="params">(bins.size()<span class="number">-1</span>)</span></span>;</span><br><span class="line">    <span class="comment">//直方图数据初始化为0 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; hist.size(); i++) &#123;</span><br><span class="line">        hist[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//遍历累加器列表中的数据，看落入了哪个格子 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; acc.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">double</span> a = acc[i];</span><br><span class="line">        <span class="comment">//看落入哪个格子 </span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; bins.size()<span class="number">-1</span>; j++) &#123;</span><br><span class="line">        <span class="comment">//格子的左边值和右边值，除了最后一个格子，都是左闭右开 </span></span><br><span class="line">            <span class="keyword">double</span> left = bins[j];</span><br><span class="line">            <span class="keyword">double</span> right = bins[j+<span class="number">1</span>];</span><br><span class="line">            <span class="comment">//如果值落入相应的格子，相应的直方图计算加1 </span></span><br><span class="line">            <span class="keyword">if</span> (a &gt;= left &amp;&amp; a &lt; right) &#123;</span><br><span class="line">                hist[j]++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果为最后一个格子的边界，最后一个格子的计算也要加1，最后一个格子是左闭右也闭 </span></span><br><span class="line">        <span class="keyword">if</span> (a == bins[bins.size()<span class="number">-1</span>]) &#123;</span><br><span class="line">            hist[bins.size()<span class="number">-2</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hist;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义算法的实现函数，返回检测到的椭圆列表</span></span><br><span class="line"><span class="comment">//参数：传入的边缘图，</span></span><br><span class="line"><span class="comment">//累计计数的阈值（即达到什么值才认为有效），</span></span><br><span class="line"><span class="comment">//精度（主要用来定义直方图的格子），</span></span><br><span class="line"><span class="comment">//轴的最小值，</span></span><br><span class="line"><span class="comment">//轴的最大值（如果为-1，则取图像宽高中小的那个一半），</span></span><br><span class="line"><span class="comment">//第一个轴的最大值（如果为-1，则无限制） </span></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Ellipse&gt; _hough_ellipse(<span class="keyword">const</span> cv::Mat&amp; edges, <span class="keyword">int</span> threshold, <span class="keyword">double</span> accuracy,</span><br><span class="line"> <span class="keyword">int</span> minAxis, <span class="keyword">int</span> maxAxis=<span class="number">-1</span>, <span class="keyword">int</span> maxFirst=<span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="comment">//定义返回的列表 </span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;Ellipse&gt; results;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//拿到图像的宽高 </span></span><br><span class="line">    <span class="keyword">int</span> numRows = edges.rows;</span><br><span class="line">    <span class="keyword">int</span> numCols = edges.cols;</span><br><span class="line">    <span class="comment">//边缘图像的非零点位置 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nonzeroXIndices, nonzeroYIndices;</span><br><span class="line">    <span class="comment">//把边缘图像的非零点找出来 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numRows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; numCols; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (edges.ptr&lt;uchar&gt;(i)[j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                nonzeroXIndices.push_back(j);</span><br><span class="line">                nonzeroYIndices.push_back(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//总共有多少非零点 </span></span><br><span class="line">    <span class="keyword">int</span> numPixels = nonzeroXIndices.size();</span><br><span class="line">    <span class="comment">//累加器列表 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; accumulator;</span><br><span class="line">    <span class="comment">//精度，即直方图的格子宽度，这里取平方，因为下面的算法计算短半轴时为了减少计算量也是用平方（不开方） </span></span><br><span class="line">    <span class="keyword">double</span> binSize = accuracy*accuracy;</span><br><span class="line">    <span class="comment">//最大的半轴值，也取平方以避免开方 </span></span><br><span class="line">    <span class="keyword">double</span> maxAxisSquared = maxAxis*maxAxis;</span><br><span class="line">    <span class="comment">//如果轴的最大值为-1，则取图像宽高中小的那个一半</span></span><br><span class="line">    <span class="keyword">if</span> (maxAxis == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (numRows &lt; numCols) &#123;</span><br><span class="line">            maxAxisSquared = cvRound(<span class="number">0.5</span>*numRows);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            maxAxisSquared = cvRound(<span class="number">0.5</span>*numCols);</span><br><span class="line">        &#125;</span><br><span class="line">        maxAxisSquared *= maxAxisSquared;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//定义一些变量 </span></span><br><span class="line">    <span class="keyword">int</span> p1, p2, p, x1, y1, x2, y2, x, y;</span><br><span class="line">    <span class="keyword">double</span> x0, y0, a, b, d, k, dx, dy, fSquared, cosTauSquared, bSquared, alpha;</span><br><span class="line">    <span class="comment">//遍历所有非零点 </span></span><br><span class="line">    <span class="keyword">for</span> (p1 = <span class="number">0</span>; p1 &lt; numPixels; p1++) &#123;</span><br><span class="line">    <span class="comment">//取另一个非零点（因为点的顺序不影响，所以，已经处理过的非零点对不再处理） </span></span><br><span class="line">        <span class="keyword">for</span> (p2 = <span class="number">0</span>; p2 &lt; p1; p2++) &#123;</span><br><span class="line">        <span class="comment">//把点(x1,y1),(x2,y2)取出 </span></span><br><span class="line">            x1 = nonzeroXIndices[p1];</span><br><span class="line">            y1 = nonzeroYIndices[p1];</span><br><span class="line">            x2 = nonzeroXIndices[p2];</span><br><span class="line">            y2 = nonzeroYIndices[p2];</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//计算长半轴 </span></span><br><span class="line">            dx = x1-x2;</span><br><span class="line">            dy = y1-y2;</span><br><span class="line">            a = <span class="number">0.5</span>*<span class="built_in">std</span>::<span class="built_in">sqrt</span>(dx*dx+dy*dy);</span><br><span class="line">            <span class="comment">//看第一个轴的最大值是否为-1，用于判断计算得到的a是否符合要求 </span></span><br><span class="line">            <span class="keyword">bool</span> bMaxFirst = (maxFirst == <span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span> (maxFirst != <span class="number">-1</span>) &#123;</span><br><span class="line">                bMaxFirst = (a &lt;= maxFirst);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果计算到的长半轴a符合要求（大于最小轴的值，并小于第一个轴最大值） </span></span><br><span class="line">            <span class="keyword">if</span> (a &gt; minAxis &amp;&amp; bMaxFirst) &#123;</span><br><span class="line">            <span class="comment">//计算中心点 </span></span><br><span class="line">                x0 = <span class="number">0.5</span>*(x1+x2);</span><br><span class="line">                y0 = <span class="number">0.5</span>*(y1+y2);</span><br><span class="line">                <span class="comment">//对非零点对，遍历所有非零的点计算短半轴 </span></span><br><span class="line">                <span class="keyword">for</span> (p = <span class="number">0</span>; p &lt; numPixels; p++) &#123;</span><br><span class="line">                <span class="comment">//取出假设的位于椭圆上的点 </span></span><br><span class="line">                    x = nonzeroXIndices[p];</span><br><span class="line">                    y = nonzeroYIndices[p];</span><br><span class="line">                    dx = x-x0;</span><br><span class="line">                    dy = y-y0;</span><br><span class="line">                    <span class="comment">//计算此点到中心点的距离d </span></span><br><span class="line">                    d = <span class="built_in">std</span>::<span class="built_in">sqrt</span>(dx*dx+dy*dy);</span><br><span class="line">                    <span class="comment">//如果此距离大于最小轴的值，则认为此点有可能为椭圆上的点 </span></span><br><span class="line">                    <span class="keyword">if</span> (d &gt; minAxis) &#123;</span><br><span class="line">                        dx = x-x2;</span><br><span class="line">                        dy = y-y2;</span><br><span class="line">                        <span class="comment">//计算f的值的平方 </span></span><br><span class="line">                        fSquared = dx*dx+dy*dy;</span><br><span class="line">                        <span class="comment">//计算cosTau </span></span><br><span class="line">                        cosTauSquared = (a*a+d*d-fSquared) / (<span class="number">2</span>*a*d);</span><br><span class="line">                        <span class="comment">//再计算cosTau的平方 </span></span><br><span class="line">                        cosTauSquared *= cosTauSquared;</span><br><span class="line">                        <span class="comment">//计算b平方的分母 </span></span><br><span class="line">                        k = a*a-d*d*cosTauSquared;</span><br><span class="line">                        <span class="comment">//让b要在合理的条件内 </span></span><br><span class="line">                        <span class="keyword">if</span> (k &gt; <span class="number">0</span> &amp;&amp; cosTauSquared &lt; <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="comment">//计算b的平方 </span></span><br><span class="line">                            bSquared = a*a*d*d*(<span class="number">1</span>-cosTauSquared) / k;</span><br><span class="line">                            <span class="comment">//计算到的b的平方要小于最大轴的值的平方 </span></span><br><span class="line">                            <span class="keyword">if</span> (bSquared &lt;= maxAxisSquared) &#123;</span><br><span class="line">                            <span class="comment">//把符合要求的短半轴的平方值放入累加器列表中 </span></span><br><span class="line">                                accumulator.push_back(bSquared);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">//对非零点对计算完所有短半轴b，看符合要求的值有没有，即累加器列表里是否有值 </span></span><br><span class="line">                <span class="keyword">if</span> (accumulator.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">//有值，则说明有可能有相应的短半轴与这一对非零点组成的长轴构成一个椭圆 </span></span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">double</span>&gt; bins;</span><br><span class="line">                    <span class="comment">//下面是对累加器列表中的短半轴平方的数据进行处理，看能不能找到合适的短半轴，</span></span><br><span class="line"><span class="comment">//首先是利用精度来创建格子 </span></span><br><span class="line">                    bins = _create_bins(accumulator, binSize);</span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; hist;</span><br><span class="line">                    <span class="comment">//然后按创建的格子计算累计器列表的直方图 </span></span><br><span class="line">                    hist = _histogram(accumulator, bins);</span><br><span class="line">                    <span class="comment">//把直方图计数数据中的最大值找出来 </span></span><br><span class="line">                    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator histMaxIter = <span class="built_in">std</span>::max_element(hist.begin(), hist.end());</span><br><span class="line">                    <span class="keyword">int</span> histMax = *histMaxIter;</span><br><span class="line">                    <span class="comment">//如果这个最大计数达到了要求的阈值，则说明这个短半轴的计算是可以构成一个椭圆的 </span></span><br><span class="line">                    <span class="keyword">if</span> (histMax &gt; threshold) &#123;</span><br><span class="line">                    <span class="comment">//计算倾斜角度 </span></span><br><span class="line">                        alpha = <span class="built_in">std</span>::<span class="built_in">atan2</span>(y2-y1, x2-x1);</span><br><span class="line">                        <span class="comment">//把直方图最大值对应的格子索引计算出来 </span></span><br><span class="line">                        <span class="keyword">int</span> maxIndex = histMaxIter - hist.begin();</span><br><span class="line">                        <span class="comment">//短半轴的值即为最大直方图计数值对应的格子的值的开方 </span></span><br><span class="line">                        b = <span class="built_in">std</span>::<span class="built_in">sqrt</span>(bins[maxIndex]);</span><br><span class="line">                        <span class="keyword">if</span> (alpha != <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="comment">//在OpenCV中，y轴是向下的，把角度改一下（其实问题不大) </span></span><br><span class="line">                            alpha = CV_PI - alpha;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//最后保证计算得到的长半轴和短半轴都大于0，则认为确定了一个椭圆 </span></span><br><span class="line">                        <span class="keyword">if</span> (a &gt; <span class="number">0</span> &amp;&amp; b &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="comment">//把确定的椭圆保存 </span></span><br><span class="line">                            Ellipse ellipse;</span><br><span class="line">                            ellipse.accumulator = histMax;</span><br><span class="line">                            ellipse.xc = x0;</span><br><span class="line">                            ellipse.yc = y0;</span><br><span class="line">                            ellipse.a = a;</span><br><span class="line">                            ellipse.b = b;</span><br><span class="line">                            ellipse.angle = alpha * <span class="number">180</span> / CV_PI;</span><br><span class="line">                            results.push_back(ellipse);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//累加器清零再进行下一对非零点 </span></span><br><span class="line">                    accumulator.clear();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> results;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//直接上函数，传进来源图像的高、宽、轮廓线的点，阈值，然后输出就是椭圆的参数 </span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> _hough_ellipse2(<span class="keyword">int</span> numRows, <span class="keyword">int</span> numCols, <span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point&gt;&amp; contour, </span><br><span class="line"><span class="keyword">double</span> threshold, cv::Point&amp; center, <span class="keyword">float</span>&amp; a, <span class="keyword">float</span>&amp; b, <span class="keyword">float</span>&amp; theta) &#123;</span><br><span class="line">    <span class="comment">//定义最大距离的图，即源图上每个点到轮廓线（这个轮廓线是先被假定是一个椭圆）的最大距离的图 </span></span><br><span class="line"><span class="function">cv::Mat <span class="title">maxDists</span><span class="params">(numRows, numCols, CV_32FC1, cv::Scalar::all(<span class="number">0</span>))</span></span>;</span><br><span class="line"><span class="comment">//任一点到轮廓线所有点的距离列表 </span></span><br><span class="line">    <span class="function"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt; <span class="title">dists</span><span class="params">(contour.size())</span></span>;</span><br><span class="line">    <span class="comment">//图像上每一个点到轮廓线上的点的距离计算 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numRows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; numCols; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; contour.size(); k++) &#123;</span><br><span class="line">            <span class="comment">//计算图像上的点到轮廓线上的点的距离，并放入列表中 </span></span><br><span class="line">                <span class="keyword">float</span> dx = j-contour[k].x;</span><br><span class="line">                <span class="keyword">float</span> dy = i-contour[k].y;</span><br><span class="line">                <span class="keyword">float</span> dist = <span class="built_in">std</span>::<span class="built_in">sqrt</span>(dx*dx+dy*dy);</span><br><span class="line">                dists[k] = dist;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//从距离列表中找出最大的那个距离 </span></span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">float</span>&gt;::iterator iter = <span class="built_in">std</span>::max_element(dists.begin(), dists.end());</span><br><span class="line">            <span class="keyword">float</span> maxDist = *iter;</span><br><span class="line">            <span class="comment">//把这个最大距离放到图中相应位置 </span></span><br><span class="line">            maxDists.ptr&lt;<span class="keyword">float</span>&gt;(i)[j] = maxDist;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//有了最大距离的图，找到这个最大距离图中最小的那个距离，及这个最小距离所在的位置 </span></span><br><span class="line">    <span class="keyword">double</span> minVal;</span><br><span class="line">    cv::Point minLoc;</span><br><span class="line">    cv::minMaxLoc(maxDists, &amp;minVal, <span class="literal">NULL</span>, &amp;minLoc);</span><br><span class="line">    <span class="comment">//根据定理，最大距离中的最小那个对应椭圆的长半轴，而对应的位置就是椭圆中心 </span></span><br><span class="line">    center = minLoc;</span><br><span class="line">    a = (<span class="keyword">float</span>)minVal;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//接下来由短半轴和角度定义一个霍夫空间 </span></span><br><span class="line">    <span class="function">cv::Mat <span class="title">houghSpace</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">floor</span>(a+<span class="number">1</span>), <span class="number">180</span>, CV_32SC1, cv::Scalar::all(<span class="number">0</span>))</span></span>;</span><br><span class="line">    <span class="comment">//因为轮廓线被假定为椭圆了，所以把轮廓线上的点，再加上离散的角度，带入椭圆公式计算短半轴 </span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contour.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">180</span>; j++) &#123;</span><br><span class="line">        <span class="comment">//角度转为弧度 </span></span><br><span class="line">            <span class="keyword">double</span> angle = j*CV_PI/<span class="number">180</span>;</span><br><span class="line">            <span class="comment">//中心点，前面已经确认 </span></span><br><span class="line">            <span class="keyword">double</span> p = center.x;</span><br><span class="line">            <span class="keyword">double</span> q = center.y;</span><br><span class="line">            <span class="comment">//轮廓上的点 </span></span><br><span class="line">            <span class="keyword">double</span> x = contour[i].x;</span><br><span class="line">            <span class="keyword">double</span> y = contour[i].y;</span><br><span class="line">            <span class="comment">//计算sin，cos </span></span><br><span class="line">            <span class="keyword">double</span> cosTheta = <span class="built_in">std</span>::<span class="built_in">cos</span>(angle);</span><br><span class="line">            <span class="keyword">double</span> sinTheta = <span class="built_in">std</span>::<span class="built_in">sin</span>(angle);</span><br><span class="line">            <span class="comment">//公式中加号左边那一项 </span></span><br><span class="line">            <span class="keyword">double</span> part1 = <span class="built_in">std</span>::<span class="built_in">pow</span>((x-p)*cosTheta+(y-q)*sinTheta, <span class="number">2</span>) / (a*a);</span><br><span class="line">            <span class="comment">//加号右边那一项的分子 </span></span><br><span class="line">            <span class="keyword">double</span> part2 = <span class="built_in">std</span>::<span class="built_in">pow</span>(-(x-p)*sinTheta+(y-q)*cosTheta, <span class="number">2</span>);</span><br><span class="line">            <span class="comment">//计算短半轴，要取到整数，所以用了floor这个函数，先进行了加1 </span></span><br><span class="line">            <span class="keyword">int</span> B = <span class="built_in">std</span>::<span class="built_in">floor</span>(<span class="built_in">std</span>::<span class="built_in">sqrt</span>(part2 / (<span class="number">1</span>-part1)) + <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//计算得到的短半轴大于0，且不大于长半轴，则霍夫空间对应短半轴和角度位置计算加1 </span></span><br><span class="line">            <span class="keyword">if</span> (B &gt; <span class="number">0</span> &amp;&amp; B &lt;= a) &#123;</span><br><span class="line">                houghSpace.ptr&lt;<span class="keyword">int</span>&gt;(B)[j] += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//得到霍夫空间的累加计数，下面把累加计数的最大值找出来 </span></span><br><span class="line">    <span class="keyword">double</span> maxVal;</span><br><span class="line">    cv::Point maxLoc;</span><br><span class="line">    cv::minMaxLoc(houghSpace, <span class="literal">NULL</span>, &amp;maxVal, <span class="literal">NULL</span>, &amp;maxLoc);</span><br><span class="line">    <span class="comment">//如果最大计数大于给定的阈值，则说明这条轮廓线有成为椭圆的潜质 </span></span><br><span class="line">    <span class="keyword">if</span> (maxVal &gt;= threshold) &#123;</span><br><span class="line">    <span class="comment">//短半轴就是最大计数对应位置的y，角度就是x </span></span><br><span class="line">        b = maxLoc.y;</span><br><span class="line">        theta = maxLoc.x;</span><br><span class="line">        <span class="comment">//最后确保长短半轴都是大于1的，这才说明成功确认一条轮廓线为一个椭圆 </span></span><br><span class="line">        <span class="keyword">return</span> (a &gt; <span class="number">1</span> &amp;&amp; b &gt; <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">//测试代码，读入一张图片 </span></span><br><span class="line"><span class="comment">cv::Mat src = cv::imread(&quot;/home/xlll/Downloads/opencv/samples/data/pic3.png&quot;, cv::IMREAD_COLOR);</span></span><br><span class="line"><span class="comment">    if (src.empty()) &#123;</span></span><br><span class="line"><span class="comment">        std::cout &lt;&lt; &quot;failed to read image!&quot; &lt;&lt; std::endl;</span></span><br><span class="line"><span class="comment">        return EXIT_FAILURE;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    //转为灰度图 </span></span><br><span class="line"><span class="comment">    cv::Mat gray;</span></span><br><span class="line"><span class="comment">    cv::cvtColor(src, gray, cv::COLOR_BGR2GRAY);</span></span><br><span class="line"><span class="comment">    //高斯平滑去一下噪声 </span></span><br><span class="line"><span class="comment">    cv::Mat gb;</span></span><br><span class="line"><span class="comment">    cv::GaussianBlur(gray, gb, cv::Size(7, 7), 2, 2);</span></span><br><span class="line"><span class="comment">    int kernelSize = 3;</span></span><br><span class="line"><span class="comment">    //使用Canny算法检测这张图的边缘图 </span></span><br><span class="line"><span class="comment">    double cannyThresh = 100;</span></span><br><span class="line"><span class="comment">    cv::Mat edges, dx, dy;</span></span><br><span class="line"><span class="comment">    cv::Sobel(gb, dx, CV_16SC1, 1, 0, kernelSize, 1, 0, cv::BORDER_REPLICATE);</span></span><br><span class="line"><span class="comment">    cv::Sobel(gb, dy, CV_16SC1, 0, 1, kernelSize, 1, 0, cv::BORDER_REPLICATE);</span></span><br><span class="line"><span class="comment">    cv::Canny(dx, dy, edges, cannyThresh/2, cannyThresh, false);</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    //用于霍夫椭圆检测的参数，这个算法的参数不好调，这几个参数是根据这张图调好的值 </span></span><br><span class="line"><span class="comment">    int threshold = 135;</span></span><br><span class="line"><span class="comment">    double accuracy = 15;</span></span><br><span class="line"><span class="comment">    int minAxis = 30;</span></span><br><span class="line"><span class="comment">    int maxFirst = 48;</span></span><br><span class="line"><span class="comment">    int maxAxis = 58;</span></span><br><span class="line"><span class="comment">    //调用算法，返回检测到的椭圆 </span></span><br><span class="line"><span class="comment">    std::vector&lt;Ellipse&gt; ellipses;</span></span><br><span class="line"><span class="comment">    ellipses = _hough_ellipse(edges, threshold, accuracy, minAxis, maxAxis, maxFirst);</span></span><br><span class="line"><span class="comment">    //看检测到几个 </span></span><br><span class="line"><span class="comment">    std::cout &lt;&lt; &quot;Found &quot; &lt;&lt; ellipses.size() &lt;&lt; &quot; ellipses.&quot; &lt;&lt; std::endl;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    //原图克隆一份，用于画椭圆 </span></span><br><span class="line"><span class="comment">    cv::Mat dst = src.clone();</span></span><br><span class="line"><span class="comment">    //把所有检测到的椭圆画到图上，并把椭圆相关参数打印出来 </span></span><br><span class="line"><span class="comment">    for (int i = 0; i &lt; ellipses.size(); i++) &#123;</span></span><br><span class="line"><span class="comment">        Ellipse ellipse = ellipses[i];</span></span><br><span class="line"><span class="comment">        cv::ellipse(dst, cv::Point(cvRound(ellipse.xc), cvRound(ellipse.yc)), cv::Size(cvRound(ellipse.a), cvRound(ellipse.b)), ellipse.angle, 0, 360, cv::Scalar(255, 0, 255), 2, cv::LINE_AA);</span></span><br><span class="line"><span class="comment">        std::cout &lt;&lt; &quot;Ellipse &quot; &lt;&lt; i &lt;&lt; &quot;: xc = &quot; &lt;&lt; cvRound(ellipse.xc) &lt;&lt; &quot;, yc = &quot; &lt;&lt; cvRound(ellipse.yc) &lt;&lt; &quot;, a = &quot; &lt;&lt; cvRound(ellipse.a) &lt;&lt; &quot;, b = &quot; &lt;&lt; cvRound(ellipse.b) &lt;&lt; &quot;, angle = &quot; &lt;&lt; ellipse.angle &lt;&lt; &quot;, accumulator = &quot; &lt;&lt; ellipse.accumulator &lt;&lt; std::endl;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    //显示图像 </span></span><br><span class="line"><span class="comment">    cv::imshow(&quot;src&quot;, src);</span></span><br><span class="line"><span class="comment">    cv::imshow(&quot;edges&quot;, edges);</span></span><br><span class="line"><span class="comment">    cv::imshow(&quot;dst&quot;, dst);</span></span><br><span class="line"><span class="comment">    cv::waitKey(0);*/</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//测试代码，读入一张图片 </span></span><br><span class="line">    cv::Mat src = cv::imread(<span class="string">&quot;/home/xlll/Downloads/opencv/samples/data/detect_blob.png&quot;</span>, cv::IMREAD_COLOR);</span><br><span class="line">    <span class="keyword">if</span> (src.empty()) &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;failed to read image!&quot;</span> &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> EXIT_FAILURE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//转为灰度图 </span></span><br><span class="line">    cv::Mat gray;</span><br><span class="line">    cv::cvtColor(src, gray, cv::COLOR_BGR2GRAY);   </span><br><span class="line">    cv::Mat gb;</span><br><span class="line">    <span class="comment">//高斯平滑一下 </span></span><br><span class="line">    cv::GaussianBlur(gray, gb, cv::Size(<span class="number">3</span>, <span class="number">3</span>), <span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//使用Canny算法检测这张图的边缘图 </span></span><br><span class="line">    <span class="keyword">int</span> kernelSize = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">double</span> cannyThresh = <span class="number">35</span>;</span><br><span class="line">    cv::Mat edges, dx, dy;</span><br><span class="line">    cv::Sobel(gb, dx, CV_16SC1, <span class="number">1</span>, <span class="number">0</span>, kernelSize, <span class="number">1</span>, <span class="number">0</span>, cv::BORDER_REPLICATE);</span><br><span class="line">    cv::Sobel(gb, dy, CV_16SC1, <span class="number">0</span>, <span class="number">1</span>, kernelSize, <span class="number">1</span>, <span class="number">0</span>, cv::BORDER_REPLICATE);</span><br><span class="line">    cv::Canny(dx, dy, edges, cannyThresh/<span class="number">2</span>, cannyThresh, <span class="literal">false</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//查找边缘图的轮廓线 </span></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Point&gt;&gt; contours;</span><br><span class="line">    cv::findContours(edges, contours, cv::RETR_LIST, cv::CHAIN_APPROX_NONE);</span><br><span class="line">    <span class="comment">//克隆图片用于输出 </span></span><br><span class="line">    cv::Mat dst = src.clone();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; contours.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">float</span> a, b, theta;</span><br><span class="line">        cv::Point center;</span><br><span class="line">        <span class="comment">//阈值定义，可根据实际情况更改 </span></span><br><span class="line">        <span class="keyword">double</span> threshold = contours[i].size() * <span class="number">0.33</span>;</span><br><span class="line">        <span class="comment">//如果成功检测为椭圆，把椭圆画出来，并输出椭圆相应的参数 </span></span><br><span class="line">        <span class="keyword">if</span> (_hough_ellipse2(dst.rows, dst.cols, contours[i], threshold, center, a, b, theta)) &#123;</span><br><span class="line">            cv::ellipse(dst, cv::Point(center.x, center.y), cv::Size(cvRound(a), cvRound(b)), theta, <span class="number">0</span>, <span class="number">360</span>, cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>, cv::LINE_AA);</span><br><span class="line">            <span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;center = (&quot;</span> &lt;&lt; center.x &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; center.y &lt;&lt; <span class="string">&quot;), a = &quot;</span> &lt;&lt; a &lt;&lt; <span class="string">&quot;, b = &quot;</span> &lt;&lt; b &lt;&lt; <span class="string">&quot;, theta = &quot;</span> &lt;&lt; theta &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//显示相应的图像 </span></span><br><span class="line">    cv::imshow(<span class="string">&quot;src&quot;</span>, src);</span><br><span class="line">    cv::imshow(<span class="string">&quot;edges&quot;</span>, edges);</span><br><span class="line">    cv::imshow(<span class="string">&quot;dst&quot;</span>, dst);</span><br><span class="line">    cv::waitKey(<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;霍夫变换一&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#霍夫变换一&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.bilibili.com/video/BV1p64y1v7xc/?spm_id_from=333.788.rec</summary>
      
    
    
    
    <category term="智能车" scheme="https://zhang0224gz.github.io/categories/%E6%99%BA%E8%83%BD%E8%BD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>算法基础</title>
    <link href="https://zhang0224gz.github.io/2022/06/29/%E5%88%B7%E9%A2%98/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/"/>
    <id>https://zhang0224gz.github.io/2022/06/29/%E5%88%B7%E9%A2%98/%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80/</id>
    <published>2022-06-29T14:58:27.560Z</published>
    <updated>2022-06-29T14:59:56.905Z</updated>
    
    <content type="html"><![CDATA[<h1 id="算法基础"><a class="markdownIt-Anchor" href="#算法基础"></a> 算法基础</h1><h2 id="递归和递推"><a class="markdownIt-Anchor" href="#递归和递推"></a> 递归和递推</h2><h3 id="递归"><a class="markdownIt-Anchor" href="#递归"></a> 递归</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">递归算法在计算机系统中用栈帮助实现，一般常见的算法有深度优先遍历（DFS），可以解决的问题有迷宫问题是否连通的问题，递推会对应一个递归搜索树，递归搜索树可以帮助我们更好的理解递归的流程，递归要注意的有是否可以进行剪枝，在迷宫问题中，也要考虑是否要保存原有的迷宫。</span><br></pre></td></tr></table></figure><h4 id="入门例题"><a class="markdownIt-Anchor" href="#入门例题"></a> 入门例题</h4><h5 id="递归实现指数型枚举"><a class="markdownIt-Anchor" href="#递归实现指数型枚举"></a> 递归实现指数型枚举</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">从 1∼n 这 n 个整数中随机选取任意多个，输出所有可能的选择方案。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">输入一个整数 n。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">每行输出一种方案。</span><br><span class="line"></span><br><span class="line">同一行内的数必须升序排列，相邻两个数用恰好 1 个空格隔开。</span><br><span class="line"></span><br><span class="line">对于没有选任何数的方案，输出空行。</span><br><span class="line"></span><br><span class="line">本题有自定义校验器（SPJ），各行（不同方案）之间的顺序任意。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1≤n≤15</span><br><span class="line">输入样例：</span><br><span class="line">3</span><br><span class="line">输出样例：</span><br><span class="line"></span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">2 3</span><br><span class="line">1</span><br><span class="line">1 3</span><br><span class="line">1 2</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><p>题解：</p><p>对于指数型枚举一个数只有选与不选的区分，所以我们从第一个位置，枚举到第n个位置，在第i个位置上，i这个数只有选与不选的区别，选的话我们将st[i]记录为i；不选记录为-1；一直到u&gt;n时枚举了所有的位置，此时输出即可，要注意的是在输出完后要记得return掉</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> st[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(st[i]==<span class="number">1</span>) cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    st[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    st[u]=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="递归实现排列型枚举"><a class="markdownIt-Anchor" href="#递归实现排列型枚举"></a> 递归实现排列型枚举</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">把 1∼n 这 n 个整数排成一行后随机打乱顺序，输出所有可能的次序。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">一个整数 n。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">按照从小到大的顺序输出所有方案，每行 1 个。</span><br><span class="line"></span><br><span class="line">首先，同一行相邻两个数用一个空格隔开。</span><br><span class="line"></span><br><span class="line">其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1≤n≤9</span><br><span class="line">输入样例：</span><br><span class="line">3</span><br><span class="line">输出样例：</span><br><span class="line">1 2 3</span><br><span class="line">1 3 2</span><br><span class="line">2 1 3</span><br><span class="line">2 3 1</span><br><span class="line">3 1 2</span><br><span class="line">3 2 1</span><br></pre></td></tr></table></figure><p>题解</p><p>在排列型枚举中，我们有n个位置，在每个位置上分别枚举这个位置可以放那个数，所以我们有一个path数组来记录排列的方案，使用st的bool数组来判断这个数是否选过。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"><span class="keyword">int</span> path[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;n)&#123;<span class="comment">//所有位置枚举完成</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            cout&lt;&lt;path[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//在第u个位置上枚举所有方案，这个位置上可以放置所有没有被用过的数字。</span></span><br><span class="line">        <span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">            path[u]=i;</span><br><span class="line">            st[i]=<span class="literal">true</span>;<span class="comment">//表示这个数被用过了</span></span><br><span class="line">            <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">            st[i]=<span class="literal">false</span>;<span class="comment">//还原状态，保证回溯时下一层递归一致。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="递归实现组合型枚举"><a class="markdownIt-Anchor" href="#递归实现组合型枚举"></a> 递归实现组合型枚举</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">从 1∼n 这 n 个整数中随机选出 m 个，输出所有可能的选择方案。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">两个整数 n,m ,在同一行用空格隔开。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">按照从小到大的顺序输出所有方案，每行 1 个。</span><br><span class="line"></span><br><span class="line">首先，同一行内的数升序排列，相邻两个数用一个空格隔开。</span><br><span class="line"></span><br><span class="line">其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面（例如 1 3 5 7 排在 1 3 6 8 前面）。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">n&gt;0 ,</span><br><span class="line">0≤m≤n ,</span><br><span class="line">n+(n−m)≤25</span><br><span class="line">输入样例：</span><br><span class="line">5 3</span><br><span class="line">输出样例：</span><br><span class="line">1 2 3 </span><br><span class="line">1 2 4 </span><br><span class="line">1 2 5 </span><br><span class="line">1 3 4 </span><br><span class="line">1 3 5 </span><br><span class="line">1 4 5 </span><br><span class="line">2 3 4 </span><br><span class="line">2 3 5 </span><br><span class="line">2 4 5 </span><br><span class="line">3 4 5 </span><br></pre></td></tr></table></figure><p>题解</p><p>在组合数枚举中，我们可以通过认为确定枚举的顺序来通过类似排列数的方法来实现，不同的一点时在排列数枚举时，我们要在传一个参数num表示前一位枚举到那个数字，首先写一个朴素方法，该方法的时间是1601ms</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">25</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> path[N];</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u&gt;m)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">            cout&lt;&lt;path[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i]&amp;&amp;i&gt;num)&#123;</span><br><span class="line">            st[i]=<span class="literal">true</span>;</span><br><span class="line">            path[u]=i;</span><br><span class="line">            <span class="built_in">dfs</span>(u+<span class="number">1</span>,i);</span><br><span class="line">            st[i]=<span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面做一个优化</p><p>我们在递归前提前判断一个，上一个位置的数是否合理，如果后面剩的数字不能满足m个位置和递增的条件就直接return掉，进行剪枝，优化时间复杂度。该方法的时间是103ms</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">const int N=25;</span><br><span class="line">int n,m;</span><br><span class="line">int path[N];</span><br><span class="line">bool st[N];</span><br><span class="line">void dfs(int u,int num)&#123;</span><br><span class="line">    if(num&gt;n-m+u-1)return;</span><br><span class="line">    if(u&gt;m)&#123;</span><br><span class="line">        for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">            cout&lt;&lt;path[i]&lt;&lt;&quot; &quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        if(!st[i]&amp;&amp;i&gt;num)&#123;</span><br><span class="line">            st[i]=true;</span><br><span class="line">            path[u]=i;</span><br><span class="line">            dfs(u+1,i);</span><br><span class="line">            st[i]=false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    dfs(1,0);</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="迷宫问题"><a class="markdownIt-Anchor" href="#迷宫问题"></a> 迷宫问题</h4><p>通过深度优先搜索（DFS）方法实现。</p><h5 id="迷宫问题一"><a class="markdownIt-Anchor" href="#迷宫问题一"></a> 迷宫问题一</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">一天蒜头君掉进了一个迷宫里面，蒜头君想逃出去，可怜的蒜头君连迷宫是否有能逃出去的路都不知道。</span><br><span class="line"></span><br><span class="line">看在蒜头君这么可怜的份上，就请聪明的你告诉蒜头君是否有可以逃出去的路。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行输入两个整数 nn 和 mm，表示这是一个 n \times mn×m 的迷宫。</span><br><span class="line"></span><br><span class="line">接下来的输入一个 nn 行 mm 列的迷宫。其中 &#x27;S&#x27; 表示蒜头君的位置，&#x27;*&#x27;表示墙，蒜头君无法通过，&#x27;.&#x27;表示路，蒜头君可以通过&#x27;.&#x27;移动，&#x27;T&#x27;表示迷宫的出口（蒜头君每次只能移动到四个与他相邻的位置——上，下，左，右）。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出一个字符串，如果蒜头君可以逃出迷宫输出&quot;yes&quot;，否则输出&quot;no&quot;。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1 \le n, m \le 101≤n,m≤10。</span><br><span class="line"></span><br><span class="line">输出时每行末尾的多余空格，不影响答案正确性</span><br><span class="line"></span><br><span class="line">样例输入1复制</span><br><span class="line">3 4</span><br><span class="line">S**.</span><br><span class="line">..*.</span><br><span class="line">***T</span><br><span class="line">样例输出1复制</span><br><span class="line">no</span><br><span class="line">样例输入2复制</span><br><span class="line">3 4</span><br><span class="line">S**.</span><br><span class="line">....</span><br><span class="line">***T</span><br><span class="line">样例输出2复制</span><br><span class="line">yes</span><br></pre></td></tr></table></figure><p>题解</p><p>我们读入所有数据，然后获得起点S的坐标。然后深度优先遍历，在迷宫问题中进入DFS后，要先判断是否到中点，在判断是否是障碍物，然后标记该点访问过了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line">const int N=15;</span><br><span class="line">int n,m;</span><br><span class="line">char g[N][N];</span><br><span class="line">int dx[4]=&#123;-1,0,1,0&#125;,dy[4]=&#123;0,1,0,-1&#125;;</span><br><span class="line">bool st[N][N];</span><br><span class="line">bool dfs(int x,int y)&#123;</span><br><span class="line">    if(g[x][y]==&#x27;T&#x27;)&#123;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    if(g[x][y]==&#x27;*&#x27;) return false;</span><br><span class="line">    st[x][y]=true;</span><br><span class="line">    for(int i=0;i&lt;4;i++)&#123;</span><br><span class="line">        int a=x+dx[i],b=y+dy[i];</span><br><span class="line">        if(a&gt;n||a&lt;=0||b&lt;=0||b&gt;m)continue;</span><br><span class="line">        if(st[a][b])continue;</span><br><span class="line">        if(dfs(a,b))&#123;</span><br><span class="line">            return true;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return false;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    int x,y;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        for(int j=1;j&lt;=m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;g[i][j];</span><br><span class="line">            if(g[i][j]==&#x27;S&#x27;)&#123;</span><br><span class="line">                x=i;</span><br><span class="line">                y=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(dfs(x,y))&#123;</span><br><span class="line">        cout&lt;&lt;&quot;yes&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        cout&lt;&lt;&quot;no&quot;&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="迷宫问题二"><a class="markdownIt-Anchor" href="#迷宫问题二"></a> 迷宫问题二</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">蒜头君在你的帮助下终于逃出了迷宫，但是蒜头君并没有沉浸于喜悦之中，而是很快的又陷入了思考，从这个迷宫逃出的最少步数是多少呢？</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行输入两个整数 nn 和 mm，表示这是一个 n \times mn×m 的迷宫。</span><br><span class="line"></span><br><span class="line">接下来的输入一个 nn 行 mm 列的迷宫。其中 &#x27;S&#x27; 表示蒜头君的位置，&#x27;*&#x27;表示墙，蒜头君无法通过，&#x27;.&#x27;表示路，蒜头君可以通过&#x27;.&#x27;移动，&#x27;T&#x27;表示迷宫的出口（蒜头君每次只能移动到四个与他相邻的位置——上，下，左，右）。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出整数，表示蒜头君逃出迷宫的最少步数，如果蒜头君无法逃出迷宫输出 -1−1。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1 \le n, m \le 101≤n,m≤10。</span><br><span class="line"></span><br><span class="line">输出时每行末尾的多余空格，不影响答案正确性</span><br><span class="line"></span><br><span class="line">样例输入1复制</span><br><span class="line">3 4</span><br><span class="line">S**.</span><br><span class="line">..*.</span><br><span class="line">***T</span><br><span class="line">样例输出1复制</span><br><span class="line">-1</span><br><span class="line">样例输入2复制</span><br><span class="line">3 4</span><br><span class="line">S**.</span><br><span class="line">....</span><br><span class="line">***T</span><br><span class="line">样例输出2复制</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>题解</p><p>本题要求判断是否可以到达并且要计算出最短路径，其实用宽度优先搜索更为合适，因为宽度优先搜索第一次到达目的地就是最短路径，但是我们使用深度优先也可以实现，我们定义一个最短量来储存最短的路径，当每一次到达目的点就比较一下与最短路的大小，交换最短路径长度，因此我们要遍历所有的可行路径，所以就要回溯访问状态，所以在一个遍历后就要复原，将一个点置为未访问，额额额，在 这道题中，我开始忘了读入n和m所以出现了segment段错误，还检查了好久没查到。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">char</span> g[N][N];</span><br><span class="line"><span class="keyword">bool</span> st[N][N];</span><br><span class="line"><span class="keyword">int</span> Min=<span class="number">99999</span>;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> stmp)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(stmp&gt;Min) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span>(g[x][y]==<span class="string">&#x27;T&#x27;</span>)&#123;</span><br><span class="line">        Min=<span class="built_in">min</span>(Min,stmp);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">    st[x][y]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(g[x][y]==<span class="string">&#x27;*&#x27;</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> a=x+dx[i],b=y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(a&gt;n||a&lt;=<span class="number">0</span>||b&gt;m||b&lt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(st[a][b]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(g[a][b]==<span class="string">&#x27;*&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(a,b,stmp+<span class="number">1</span>);</span><br><span class="line">        st[a][b]=<span class="literal">false</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;g[i][j];</span><br><span class="line">            <span class="keyword">if</span>(g[i][j]==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                a=i,b=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(a,b,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(Min==<span class="number">99999</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;Min&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="迷宫问题三"><a class="markdownIt-Anchor" href="#迷宫问题三"></a> 迷宫问题三</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">经过思考蒜头君终于解决了怎么计算一个迷宫的最短路问题，于是蒜头君找到一个新的迷宫图，来验证自己是否真的会计算一个迷宫的最短路。</span><br><span class="line"></span><br><span class="line">为了检验自己计算的是否正确，蒜头君特邀你一起来计算。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行输入两个整数 nn 和 mm，表示这是一个 n \times mn×m 的迷宫。</span><br><span class="line"></span><br><span class="line">接下来的输入一个 nn 行 mm 列的迷宫。其中&#x27;@&#x27;表示蒜头君的位置，&#x27;#&#x27;表示墙，蒜头君无法通过，&#x27;.&#x27;表示路，蒜头君可以通过&#x27;.&#x27;移动，所有在迷宫最外围的&#x27;.&#x27;都表示迷宫的出口（蒜头君每次只能移动到四个与他相邻的位置——上，下，左，右）。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出整数，表示蒜头君逃出迷宫的最少步数，如果蒜头君无法逃出迷宫输出 -1−1。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1 \le n,m \le 151≤n,m≤15。</span><br><span class="line"></span><br><span class="line">输出时每行末尾的多余空格，不影响答案正确性</span><br><span class="line"></span><br><span class="line">样例输入1复制</span><br><span class="line">9 13</span><br><span class="line">#############</span><br><span class="line">#@..........#</span><br><span class="line">#####.#.#.#.#</span><br><span class="line">#...........#</span><br><span class="line">#.#.#.#.#.#.#</span><br><span class="line">#.#.......#.#</span><br><span class="line">#.#.#.#.#.#.#</span><br><span class="line">#...........#</span><br><span class="line">#####.#######</span><br><span class="line">样例输出1复制</span><br><span class="line">11</span><br><span class="line">样例输入2复制</span><br><span class="line">4 6</span><br><span class="line">#.####</span><br><span class="line">#.#.##</span><br><span class="line">#...@#</span><br><span class="line">######</span><br><span class="line">样例输出2复制</span><br><span class="line">5</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题解</p><p>该迷宫问题与第二个迷宫问题类似，我们也要求出最短路径，所以一样要使用minn记录短的路径。</p><p>但是这个题要注意到达的条件，和第二个迷宫终点判断不一样，这个题要观察迷宫的构造，判断终止条件。所以这道题尽量从1开始存储迷宫图。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> g[N][N];</span><br><span class="line"><span class="keyword">bool</span> st[N][N];</span><br><span class="line"><span class="keyword">int</span> minn=<span class="number">99999</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> stmp)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(stmp&gt;minn)<span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">0</span>||y==<span class="number">0</span>||x==n+<span class="number">1</span>||y==m+<span class="number">1</span>)&#123;</span><br><span class="line">        minn=<span class="built_in">min</span>(minn,stmp);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    st[x][y]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> a=x+dx[i],b=y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(g[a][b]==<span class="string">&#x27;#&#x27;</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(st[a][b])<span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(a,b,stmp+<span class="number">1</span>);</span><br><span class="line">        st[a][b]=<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;g[i][j];</span><br><span class="line">            <span class="keyword">if</span>(g[i][j]==<span class="string">&#x27;@&#x27;</span>)&#123;</span><br><span class="line">                x=i;y=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(x,y,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(minn==<span class="number">99999</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;minn<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，dfs递归就先写到这里，之后图论的时候我们在聊。</p><h3 id="递推"><a class="markdownIt-Anchor" href="#递推"></a> 递推</h3><h4 id="入门例题-2"><a class="markdownIt-Anchor" href="#入门例题-2"></a> 入门例题</h4><h5 id="斐波那契数列"><a class="markdownIt-Anchor" href="#斐波那契数列"></a> 斐波那契数列</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入一个整数 n ，求斐波那契数列的第 n 项。</span><br><span class="line"></span><br><span class="line">假定从 0 开始，第 0 项为 0。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">0≤n≤39</span><br><span class="line">样例</span><br><span class="line">输入整数 n=5 </span><br><span class="line"></span><br><span class="line">返回 5</span><br></pre></td></tr></table></figure><p>题解</p><p>该题十分基础，我们要理解斐波那契数列的组成，数列中从每一项都是前两项的和，所以如果不要求存下一些数的数值，我们就可以直接使用，几个变量操作不用进行数组创建。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">1</span>)<span class="keyword">return</span> n;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">1</span>,b=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            t=a+b;</span><br><span class="line">            a=b;</span><br><span class="line">            b=t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h5 id="费解的开关"><a class="markdownIt-Anchor" href="#费解的开关"></a> 费解的开关</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">你玩过“拉灯”游戏吗？</span><br><span class="line"></span><br><span class="line">25 盏灯排成一个 5×5 的方形。</span><br><span class="line"></span><br><span class="line">每一个灯都有一个开关，游戏者可以改变它的状态。</span><br><span class="line"></span><br><span class="line">每一步，游戏者可以改变某一个灯的状态。</span><br><span class="line"></span><br><span class="line">游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。</span><br><span class="line"></span><br><span class="line">我们用数字 1 表示一盏开着的灯，用数字 0 表示关着的灯。</span><br><span class="line"></span><br><span class="line">下面这种状态</span><br><span class="line"></span><br><span class="line">10111</span><br><span class="line">01101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br><span class="line">在改变了最左上角的灯的状态后将变成：</span><br><span class="line"></span><br><span class="line">01111</span><br><span class="line">11101</span><br><span class="line">10111</span><br><span class="line">10000</span><br><span class="line">11011</span><br><span class="line">再改变它正中间的灯后状态将变成：</span><br><span class="line"></span><br><span class="line">01111</span><br><span class="line">11001</span><br><span class="line">11001</span><br><span class="line">10100</span><br><span class="line">11011</span><br><span class="line">给定一些游戏的初始状态，编写程序判断游戏者是否可能在 6 步以内使所有的灯都变亮。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行输入正整数 n，代表数据中共有 n 个待解决的游戏初始状态。</span><br><span class="line"></span><br><span class="line">以下若干行数据分为 n 组，每组数据有 5 行，每行 5 个字符。</span><br><span class="line"></span><br><span class="line">每组数据描述了一个游戏的初始状态。</span><br><span class="line"></span><br><span class="line">各组数据间用一个空行分隔。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">一共输出 n 行数据，每行有一个小于等于 6 的整数，它表示对于输入数据中对应的游戏状态最少需要几步才能使所有灯变亮。</span><br><span class="line"></span><br><span class="line">对于某一个游戏初始状态，若 6 步以内无法使所有灯变亮，则输出 −1。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">0&lt;n≤500</span><br><span class="line">输入样例：</span><br><span class="line">3</span><br><span class="line">00111</span><br><span class="line">01011</span><br><span class="line">10001</span><br><span class="line">11010</span><br><span class="line">11100</span><br><span class="line"></span><br><span class="line">11101</span><br><span class="line">11101</span><br><span class="line">11110</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line"></span><br><span class="line">01111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">11111</span><br><span class="line">输出样例：</span><br><span class="line"></span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><p>题解</p><p>该题我们分析可以发现，我们可以通过枚举第一行的5个灯的32中开与不开的状态来实现，因为第一行开关确定以后，第一行的开关亮与不亮只与下一层开关有关，如果i-1行j列是关的，我们就开一下i行j列的灯就可以使上一个灯泡开，一次递推我们就可以实现是否所有灯都能开，要注意的是我们要保存一下开始的灯泡状态，因为要枚举32次，积累一下位运算&gt;&gt;</p><p>我们可以通过op&gt;&gt;i&amp;1表示第一行的灯是否开，这是通过二进制存储实现的，我们用0表示不开，用1表示开。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">510</span>;</span><br><span class="line"><span class="keyword">char</span> g[<span class="number">6</span>][<span class="number">6</span>],backup[<span class="number">6</span>][<span class="number">6</span>];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">6</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,dy[<span class="number">6</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">turn</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> a=x+dx[i],b=y+dy[i];</span><br><span class="line">        <span class="keyword">if</span>(a&lt;<span class="number">0</span>||a&gt;=<span class="number">5</span>||b&lt;<span class="number">0</span>||b&gt;=<span class="number">5</span>)<span class="keyword">continue</span>;</span><br><span class="line">        g[a][b]^=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)cin&gt;&gt;g[i];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> op=<span class="number">0</span>;op&lt;<span class="number">32</span>;op++)&#123;</span><br><span class="line">            <span class="built_in">memcpy</span>(backup,g,<span class="keyword">sizeof</span> g);</span><br><span class="line">            <span class="keyword">int</span> stmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(op&gt;&gt;i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="built_in">turn</span>(<span class="number">0</span>,i);</span><br><span class="line">                    stmp++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(g[i<span class="number">-1</span>][j]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                        <span class="built_in">turn</span>(i,j);</span><br><span class="line">                        stmp++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">bool</span> suf=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(g[<span class="number">4</span>][j]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                    suf=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(suf)&#123;</span><br><span class="line">                ans=<span class="built_in">min</span>(ans,stmp);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">memcpy</span>(g,backup,<span class="keyword">sizeof</span> backup);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(ans&gt;<span class="number">6</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二分和前缀和"><a class="markdownIt-Anchor" href="#二分和前缀和"></a> 二分和前缀和</h2><h3 id="二分"><a class="markdownIt-Anchor" href="#二分"></a> 二分</h3><h4 id="二分简介"><a class="markdownIt-Anchor" href="#二分简介"></a> 二分简介</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">二分分为整数二分和实数二分两种，</span><br><span class="line"><span class="section">#### 整数二分步骤：</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 找一个区间[L, R]，使得答案一定在该区间中</span><br><span class="line"><span class="bullet">2.</span> 找一个判断条件，使得该判断条件具有二段性，并且答案一定是该二段性的分界点。</span><br><span class="line"><span class="bullet">3.</span> 分析中点M在该判断条件下是否成立，如果</span><br><span class="line">   （成立，考虑答案在那个区间。如果不成立，考虑答案在那个区间）</span><br><span class="line"><span class="bullet">4.</span> 如果更新方式写的是R = Mid，则此时l=mid+1，这是mid更新方式是</span><br><span class="line">   如果更新方式是l=mid;则mid=l+r+1&gt;&gt;1;c此时r=mid-1；</span><br></pre></td></tr></table></figure><h4 id="入门例题-3"><a class="markdownIt-Anchor" href="#入门例题-3"></a> 入门例题</h4><h5 id="二分查找一"><a class="markdownIt-Anchor" href="#二分查找一"></a> 二分查找一</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">蒜头君手上有个长度为 nn 的数组 AA。由于数组实在太大了，所以蒜头君也不知道数组里面有什么数字，所以蒜头君会经常询问整数 xx 是否在数组 AA 中。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行输入两个整数 nn 和 mm，分别表示数组的长度和查询的次数。</span><br><span class="line"></span><br><span class="line">接下来一行有 nn 个整数 a_ia </span><br><span class="line">i</span><br><span class="line">​</span><br><span class="line"> 。</span><br><span class="line"></span><br><span class="line">接下来 mm 行，每行有 11 个整数 xx，表示蒜头君询问的整数。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">对于每次查询，如果可以找到，输出&quot;YES&quot;，否则输出&quot;NO&quot;。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1≤n,m≤1e5 0≤x≤1e6</span><br><span class="line"></span><br><span class="line">输出时每行末尾的多余空格，不影响答案正确性</span><br><span class="line"></span><br><span class="line">样例输入复制</span><br><span class="line">10 5</span><br><span class="line">1 1 1 2 3 5 5 7 8 9</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">样例输出复制</span><br><span class="line">NO</span><br><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;num[i];</span><br><span class="line">    <span class="built_in">sort</span>(num,num+n);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;    </span><br><span class="line">            <span class="keyword">if</span>(num[mid]&gt;=t)&#123;</span><br><span class="line">                r=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num[l]!=t)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="二分查找二"><a class="markdownIt-Anchor" href="#二分查找二"></a> 二分查找二</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">蒜头君手上有个长度为 nn 的数组 AA。由于数组实在太大了，所以蒜头君也不知道数组里面有什么数字，所以蒜头君会经常询问在数组 AA 中，大于等于 xx 的最小值是多大？</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行输入两个整数 nn 和 mm，分别表示数组的长度和查询的次数。</span><br><span class="line"></span><br><span class="line">接下来一行有 nn 个整数 a_ia </span><br><span class="line">i</span><br><span class="line">​</span><br><span class="line"> 。</span><br><span class="line"></span><br><span class="line">接下来 mm 行，每行有 11 个整数 xx，表示蒜头君询问的整数。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">对于每次查询，如果可以找到，输出这个整数。</span><br><span class="line"></span><br><span class="line">否则输出 -1。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1≤n,m≤1e5 0≤x≤1e6</span><br><span class="line"></span><br><span class="line">输出时每行末尾的多余空格，不影响答案正确性</span><br><span class="line"></span><br><span class="line">样例输入复制</span><br><span class="line">10 5</span><br><span class="line">1 1 1 2 3 5 5 7 8 9</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">样例输出复制</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">5</span><br><span class="line">9</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><p>题解</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;num[i];</span><br><span class="line">    <span class="built_in">sort</span>(num,num+n);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(num[mid]&gt;=t)&#123;</span><br><span class="line">                r=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num[l]&gt;=t)&#123;</span><br><span class="line">            cout&lt;&lt;num[l]&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="二分查找三"><a class="markdownIt-Anchor" href="#二分查找三"></a> 二分查找三</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">蒜头君手上有个长度为 nn 的数组 AA。由于数组实在太大了，所以蒜头君也不知道数组里面有什么数字，所以蒜头君会经常询问在数组 AA 中，比 xx 大的最小值是多大？但是这次蒜头君要求这个数字必须大于 xx，不能等于 xx。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行输入两个整数 nn 和 mm，分别表示数组的长度和查询的次数。</span><br><span class="line"></span><br><span class="line">接下来一行有 nn 个整数 a_ia </span><br><span class="line">i</span><br><span class="line">​</span><br><span class="line"> 。</span><br><span class="line"></span><br><span class="line">接下来 mm 行，每行有 11 个整数 xx，表示蒜头君询问的整数。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">对于每次查询，如果可以找到，输出这个整数。</span><br><span class="line"></span><br><span class="line">否则输出 -1−1。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1≤n,m≤1e5 0≤x≤1e6</span><br><span class="line"></span><br><span class="line">输出时每行末尾的多余空格，不影响答案正确性</span><br><span class="line"></span><br><span class="line">样例输入复制</span><br><span class="line">10 5</span><br><span class="line">1 1 1 2 3 5 5 7 8 9</span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">样例输出复制</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">5</span><br><span class="line">-1</span><br><span class="line">-1</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)cin&gt;&gt;num[i];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">sort</span>(num,num+n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> t;</span><br><span class="line">        cin&gt;&gt;t;</span><br><span class="line">        <span class="keyword">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(num[mid]&gt;t)&#123;</span><br><span class="line">                r=mid;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num[l]&gt;t)&#123;</span><br><span class="line">            cout&lt;&lt;num[l]&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">-1</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="搜索与图论"><a class="markdownIt-Anchor" href="#搜索与图论"></a> 搜索与图论</h2><h4 id="深度优先搜索dfs"><a class="markdownIt-Anchor" href="#深度优先搜索dfs"></a> 深度优先搜索（DFS）</h4><h4 id="宽度优先搜索bfs"><a class="markdownIt-Anchor" href="#宽度优先搜索bfs"></a> 宽度优先搜索（BFS）</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">210</span>;</span><br><span class="line"><span class="keyword">char</span> g[N][N];</span><br><span class="line"><span class="keyword">int</span> dis[N][N];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(PII start)</span></span>&#123;</span><br><span class="line">    queue&lt;PII&gt; q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">-1</span>,<span class="keyword">sizeof</span> dis);</span><br><span class="line">    dis[start.x][start.y]=<span class="number">0</span>;</span><br><span class="line">    q.<span class="built_in">push</span>(start);</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        PII t=q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> a=t.x+dx[i],b=t.y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(a&gt;=n||a&lt;<span class="number">0</span>||b&gt;=m||b&lt;<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(g[a][b]==<span class="string">&#x27;#&#x27;</span>)<span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(dis[a][b]!=<span class="number">-1</span>)<span class="keyword">continue</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(g[a][b]==<span class="string">&#x27;E&#x27;</span>)<span class="keyword">return</span> dis[t.x][t.y]+<span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">            q.<span class="built_in">push</span>(&#123;a,b&#125;);</span><br><span class="line">            dis[a][b]=dis[t.x][t.y]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">        PII start;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">                cin&gt;&gt;g[i][j];</span><br><span class="line">                <span class="keyword">if</span>(g[i][j]==<span class="string">&#x27;S&#x27;</span>)&#123;</span><br><span class="line">                    start=&#123;i,j&#125;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;start.x&lt;&lt;start.y&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">int</span> distence=<span class="built_in">bfs</span>(start);</span><br><span class="line">        <span class="keyword">if</span>(distence==<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;oop!&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;distence&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="求最短路径"><a class="markdownIt-Anchor" href="#求最短路径"></a> 求最短路径</h3><h4 id="单源最短路"><a class="markdownIt-Anchor" href="#单源最短路"></a> 单源最短路</h4><h5 id="所有边权都是正数"><a class="markdownIt-Anchor" href="#所有边权都是正数"></a> 所有边权都是正数</h5><h6 id="朴素dijkstra算法稠密图"><a class="markdownIt-Anchor" href="#朴素dijkstra算法稠密图"></a> 朴素Dijkstra算法（稠密图）</h6><p>​<img src="https://img-blog.csdnimg.cn/20210216163038477.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzY4MTU0OQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">510</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> g[N][N];</span><br><span class="line"><span class="keyword">int</span> dist[N];</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dijkstra</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> t=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!st[j]&amp;&amp;(t==<span class="number">-1</span>||dist[t]&gt;dist[j]))&#123;</span><br><span class="line">                t=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        st[t]=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            dist[j]=<span class="built_in">min</span>(dist[j],dist[t]+g[t][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(dist[n]==<span class="number">0x3f3f3f3f</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">memset</span>(g,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> g);</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        g[a][b]=<span class="built_in">min</span>(g[a][b],c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">dijkstra</span>();</span><br><span class="line">    cout&lt;&lt;t&lt;&lt;endl;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="堆优化dijkstra算法稀疏图"><a class="markdownIt-Anchor" href="#堆优化dijkstra算法稀疏图"></a> 堆优化Dijkstra算法（稀疏图）</h6><h5 id="存在负权边"><a class="markdownIt-Anchor" href="#存在负权边"></a> 存在负权边</h5><h6 id="bellman-ford算法"><a class="markdownIt-Anchor" href="#bellman-ford算法"></a> bellman-ford算法</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">给定一个 n 个点 m 条边的有向图，图中可能存在重边和自环， 边权可能为负数。</span><br><span class="line"></span><br><span class="line">请你求出从 1 号点到 n 号点的最多经过 k 条边的最短距离，如果无法从 1 号点走到 n 号点，输出 impossible。</span><br><span class="line"></span><br><span class="line">注意：图中可能 存在负权回路 。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行包含三个整数 n,m,k。</span><br><span class="line"></span><br><span class="line">接下来 m 行，每行包含三个整数 x,y,z，表示存在一条从点 x 到点 y 的有向边，边长为 z。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">输出一个整数，表示从 1 号点到 n 号点的最多经过 k 条边的最短距离。</span><br><span class="line"></span><br><span class="line">如果不存在满足条件的路径，则输出 impossible。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1≤n,k≤500,</span><br><span class="line">1≤m≤10000,</span><br><span class="line">任意边长的绝对值不超过 10000。</span><br><span class="line"></span><br><span class="line">输入样例：</span><br><span class="line">3 3 1</span><br><span class="line">1 2 1</span><br><span class="line">2 3 1</span><br><span class="line">1 3 3</span><br><span class="line">输出样例：</span><br><span class="line">3</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">510</span>,M=<span class="number">1e4</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="keyword">int</span> dist[N],backup[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,b,c;</span><br><span class="line">&#125;edges[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bellman_ford</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(backup,dist,<span class="keyword">sizeof</span> dist);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="keyword">auto</span> e=edges[j];</span><br><span class="line">            dist[e.b]=<span class="built_in">min</span>(dist[e.b],backup[e.a]+e.c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> a,b,c;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;c;</span><br><span class="line">        edges[i]=&#123;a,b,c&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">bellman_ford</span>();</span><br><span class="line">    <span class="keyword">if</span>(dist[n]&gt;<span class="number">0x3f3f3f</span>/<span class="number">2</span>)cout&lt;&lt;<span class="string">&quot;impossible&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;dist[n]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多源汇最短路"><a class="markdownIt-Anchor" href="#多源汇最短路"></a> 多源汇最短路</h4><h6 id=""><a class="markdownIt-Anchor" href="#"></a> </h6><h2 id="数学"><a class="markdownIt-Anchor" href="#数学"></a> 数学</h2><h3 id="数论"><a class="markdownIt-Anchor" href="#数论"></a> 数论</h3><h4 id="试除法求质数"><a class="markdownIt-Anchor" href="#试除法求质数"></a> 试除法求质数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= x / i; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="分解质因数"><a class="markdownIt-Anchor" href="#分解质因数"></a> 分解质因数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">1、题目：</span><br><span class="line">给定n个正整数ai，将每个数分解质因数，并按照质因数从小到大的顺序输出每个质因数的底数和指数。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line">第一行包含整数n。</span><br><span class="line"></span><br><span class="line">接下来n行，每行包含一个正整数ai。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line">对于每个正整数ai,按照从小到大的顺序输出其分解质因数后，每个质因数的底数和指数，每个底数和指数占一行。</span><br><span class="line"></span><br><span class="line">每个正整数的质因数全部输出完毕后，输出一个空行。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line">1≤n≤100,</span><br><span class="line">1≤ai≤2∗109</span><br><span class="line">输入样例：</span><br><span class="line">2</span><br><span class="line">6</span><br><span class="line">8</span><br><span class="line">输出样例：</span><br><span class="line">2 1</span><br><span class="line">3 1</span><br><span class="line"></span><br><span class="line">2 3</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=x/i;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">                x/=i;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">            cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">1</span>)cout&lt;&lt;x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="built_in">divide</span>(x);</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="筛质数"><a class="markdownIt-Anchor" href="#筛质数"></a> 筛质数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">给定一个正整数 n，请你求出 1∼n1∼n 中质数的个数。</span><br><span class="line"></span><br><span class="line">输入格式</span><br><span class="line"></span><br><span class="line">共一行，包含整数 n。</span><br><span class="line"></span><br><span class="line">输出格式</span><br><span class="line"></span><br><span class="line">共一行，包含一个整数，表示 1∼n1∼n 中质数的个数。</span><br><span class="line"></span><br><span class="line">数据范围</span><br><span class="line"></span><br><span class="line">1≤n≤1061≤n≤106</span><br><span class="line"></span><br><span class="line">输入样例：</span><br></pre></td></tr></table></figure><h5 id="欧式筛法"><a class="markdownIt-Anchor" href="#欧式筛法"></a> 欧式筛法</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> prime[N],cnt;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_prime</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i])&#123;</span><br><span class="line">            prime[cnt++]=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;=n;j+=i)&#123;</span><br><span class="line">                st[j]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">get_prime</span>(n);</span><br><span class="line">    cout&lt;&lt;cnt&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="线性筛法"><a class="markdownIt-Anchor" href="#线性筛法"></a> 线性筛法</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N= <span class="number">1000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> primes[N], cnt;</span><br><span class="line"><span class="keyword">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_primes</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!st[i]) primes[cnt ++ ] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; primes[j] &lt;= n / i; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">get_primes</span>(n);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="试除法求约数"><a class="markdownIt-Anchor" href="#试除法求约数"></a> 试除法求约数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_divisors</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt;divs;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n/i;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            divs.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">if</span>(i*i!=n)divs.<span class="built_in">push_back</span>(n/i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(divs.<span class="built_in">begin</span>(),divs.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> s:divs)&#123;</span><br><span class="line">        cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">get_divisors</span>(n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="求约数个数"><a class="markdownIt-Anchor" href="#求约数个数"></a> 求约数个数</h4><p>利用算法基本定理，先分解质因数，然后约数个数就是每个质因数的指数+1的乘积。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当然还有更简单的方法，考虑下我们小时候学过的分解质因数的知识。</span><br><span class="line">360=2*2*2*3*3*5=2^3+3^2+5</span><br><span class="line">那么360的约数只能为2^a*3^b*5^c2（a的范围(0-3),b的范围(0-2),c的范围(0-1)），因此360的约数有4*3*2=24个。</span><br><span class="line">具体实现方法：</span><br></pre></td></tr></table></figure><p>该题求解了100的阶乘的约数的个数。其中使用的哈希map也可以换成简单的map</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unoredered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=<span class="number">100</span>;j++)&#123;</span><br><span class="line">        <span class="keyword">int</span> n=j;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n/i;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">                n/=i;</span><br><span class="line">                mp[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n&gt;<span class="number">1</span>)mp[n]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:mp)&#123;</span><br><span class="line">        cout&lt;&lt;x.first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;x.second+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> x:mp)&#123;</span><br><span class="line">        res*=(x.second+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="求约数的和"><a class="markdownIt-Anchor" href="#求约数的和"></a> 求约数的和</h4><p><img src="https://img-blog.csdnimg.cn/1ba4a2a166b5479eba2443902140c529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2OTA3NTQ3,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    unordered_map&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; primes;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (n -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= x / i; i ++ )</span><br><span class="line">            <span class="keyword">while</span> (x % i == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x /= i;</span><br><span class="line">                primes[i] ++ ;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">1</span>) primes[x] ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> p : primes)</span><br><span class="line">    &#123;</span><br><span class="line">        LL a = p.first, b = p.second;</span><br><span class="line">        LL t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (b -- ) t = (t * a + <span class="number">1</span>) % mod;</span><br><span class="line">        res = res * t % mod;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="求最大公约数"><a class="markdownIt-Anchor" href="#求最大公约数"></a> 求最大公约数</h4><p>辗转相除法又叫欧几里得法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;算法基础&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#算法基础&quot;&gt;&lt;/a&gt; 算法基础&lt;/h1&gt;
&lt;h2 id=&quot;递归和递推&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#递归和递推&quot;&gt;&lt;/a&gt; 递归和递推&lt;</summary>
      
    
    
    
    <category term="刷题" scheme="https://zhang0224gz.github.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
  </entry>
  
  <entry>
    <title>The Art of Public Speaking</title>
    <link href="https://zhang0224gz.github.io/2022/06/17/%E8%8B%B1%E8%AF%AD/%E6%BC%94%E8%AE%B2%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
    <id>https://zhang0224gz.github.io/2022/06/17/%E8%8B%B1%E8%AF%AD/%E6%BC%94%E8%AE%B2%E7%9A%84%E8%89%BA%E6%9C%AF/</id>
    <published>2022-06-17T11:26:13.995Z</published>
    <updated>2022-06-27T15:31:30.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="u1-speaking-in-public"><a class="markdownIt-Anchor" href="#u1-speaking-in-public"></a> U1 Speaking in Public</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">all walks of life 各行各业</span><br><span class="line">useful skills and strategies 有用的技能和策略</span><br><span class="line">multinational companies 跨国公司；跨国企业</span><br><span class="line">all-round language ability 全面的语言能力</span><br><span class="line">verbally 口头上地（而非书面地或行动上地）；用动词地；用言辞地</span><br></pre></td></tr></table></figure><ul><li><p>Practical Benefits：</p><ul><li>Enhance your confidence</li><li>Get rid of stage fright  怯场</li><li>To be a good speaker</li></ul></li><li><p>How to deal with nervousness?</p><ul><li>Get prepared</li><li>Change your thinking</li><li>Face your fears</li><li>Take up more assignments</li><li>Trick your brain into believing</li><li>Believe in yourself</li><li>Get feedback</li></ul></li><li><p>Dealing with nervousness</p><ul><li>Acquire Speaking Experience</li><li>Prepare, Prepare, Prepare</li><li>Think Positively</li><li>Use the power of Visualization</li><li>Know That Most Nervousness Is Not Visible</li><li>Don’t Expect Perfection</li></ul></li><li><p>What are the guidelines（指导方针，参考） for being ethical speakers?</p><ul><li><p>Make sure that the goals for your speech is ethically sound.</p></li><li><p>Be fully prepared for each speech.</p></li><li><p>Use information that is truthful or be honest in what you say.</p></li><li><p>Put ethical principles into practice.</p></li><li><p>Avoid biases and stereotypes or show respect for your audience.</p><p>​(模式化的思想，老一套；公式化人物；铅版，铅版浇铸，铅版印刷；v. 对……形成刻板的看法，（尤指）对……有成见；使用铅版)</p></li><li><p>Avoid name-calling(n. 骂人，中伤) and other forms of abusive language.</p></li></ul></li><li><p>Plagiarism and the Internet (抄袭与互联网)</p><ul><li>Global Plagiarism 全盘剽窃</li><li>Patchwork Plagiarism 拼贴剽窃</li><li>Incremental Plagiarism 局部剽窃</li></ul><blockquote><p>有两种方法可以避免局部剽窃。第一种方法是自己做调研笔记时要注意分清哪些是直接引语，哪些是复述的资料，哪些是自己的评论。第二种方法是多一些谨慎，再感到没有把握时，为稳妥起见，还是注明出处为好。</p><p><strong>–Quotation 引用</strong></p><p>使用引言时，一定要说明引言的出处。</p><p><strong>–Paraphrases 改述</strong></p><p>如果你没有直接引用某人的话，而是借鉴了某人的思路，并且使用了一部分原话，演讲者应该提供信息的来源。</p></blockquote></li></ul><h1 id="u2-warming-up"><a class="markdownIt-Anchor" href="#u2-warming-up"></a> U2 Warming-up</h1><ul><li><p>Warming-up n. 准备活动；准备运动</p><ul><li>Discussion</li><li>Prepare arguments for speeches  为演讲准备论据</li><li>Work out for your voice  锻炼你的声音</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SEE-l: Statement  Elaboration(细化,加工)  Example  Illustration</span><br><span class="line">- ​Friendship is one of life’s great blessings.  生命的伟大的祝福</span><br><span class="line">- ​Friendship is the result of long-term alliances.  这是长期联盟的结果</span><br><span class="line">- ​Friendship is the opposite of solitude.  孤独的反义词</span><br><span class="line">- ​Friendship is priceless -- and it can also be ageless.(永恒的) I used to form friendships based on </span><br><span class="line">how much we had in common. I didn&#x27;t go so far as to check blood type or astrological sign检查血型或星座,but I certainlygravitated toward those who shared my tastes被和我品味相同的人吸引 in music, food and fashion.</span><br></pre></td></tr></table></figure></li><li><p>Evaluate the quality of arguments  评估论据的质量</p><ul><li><p><strong>1.Clarity 清楚</strong> — Is the argument understandable?</p><p><code>Was the language easy to understand?</code></p></li></ul><p>​       <code>Was the speaker clear in their diction?</code></p><p>​       <code>Was there any vagueness(n. 模糊；含糊；暧昧；茫然) or were there missing elements?</code></p><ul><li><p><strong>2.Accuracy 准确</strong> — Is the information true and complete?<br /><code>Do the conclusions being drawn derive appropriately from the information available?</code></p></li><li><p><strong>3.Precision 精确,严谨,细致</strong> —  Are there enough details to satisfy the specific requirements?<br /><code>Does the action have sufficient features presented to solve the problem?</code></p></li><li><p><strong>4.Relevancy 关联,恰当</strong> —  Is the argument “on point”(适用,合时宜,合适)?<br /><code>In other words, does it relate to the other arguments being made?</code><br /><code>Can you see the links between the claims and the data?</code><br /><code>Does the argument match the organization being used?</code></p></li><li><p><strong>5.Significance 意义</strong> — How important is the argument?<br /><code>Are there any statistics to back up the claim(支持这一说法)?</code><br /><code>What value is being expressed?</code><br /><code>Are the values the same as those the audience holds?</code><br /><code>What will happen if we don’t take the advice in the speech?如果我们不接受演讲中的建议会发生什么?</code></p></li><li><p><strong>6.Depth 深度</strong> — When evaluating an issue, is there a need to understand other specifics within the issue?</p></li><li><p><strong>7.Breadth 宽度</strong> — When evaluating an issue, are there other areas of interest 其他感兴趣的领域necessary for understanding the complete picture全貌?</p></li><li><p><strong>8.Logic 逻辑</strong> — Does the argument make sense? 有意义；讲得通；言之有理<br /><code>Do the conclusions come from the analysis and evidence provide?</code><br /><code>Do the arguments throughout the speech cohere(vi. 凝聚；连贯；粘着；一致) with each other? 整个演讲的论点彼此连贯吗?</code><br /><code>Is there consistency 一致性，连贯性?</code></p></li><li><p><strong>9.Fairness 公平,公正</strong> — Is an objective position being taken?是否采取了客观立场?<br /><code>Are there other points of view that need to be considered?</code></p></li></ul></li><li><p>Work out for your voice  锻炼你的声音</p><ul><li>Avoid Lip-laziness</li><li>Rule of Pronunciation Linking 发音连读规则</li><li>Learn to imitate</li></ul></li></ul><p>​<code>Speech Imitation 言语模仿</code></p><h1 id="u3-organizing-the-speech"><a class="markdownIt-Anchor" href="#u3-organizing-the-speech"></a> U3 Organizing the Speech</h1><ul><li><p>How to make introductory speeches clearly?</p><ul><li>Don’t cover too much material;</li><li>Organize speeches with topical order;按主题顺序组织演讲;</li><li>Make sure each paragraph focuses on a single aspect of the topic.  确保每一段都专注于主题的一个方面</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Dear professors:      </span><br><span class="line">    Good afternoon. My name’s Wang Juan majoring in ideological and political. I’ll be finishing my undergraduate education in QUFU Normal University, located in the hometown of Confucius, and I’m looking forward to pursuing my master degree in your university.</span><br><span class="line"> Just as my school’s motto “Never be contented with your study, never be impatient with your teaching” tells me, I have been trying to be an industrious student. With my hard working and my teachers’ guidance, I won the National Endeavor Scholarship, the Endeavor Scholarship of Shandong Province and the first scholarship of my school many times. At the same time, I participated in contest ten times and social practical activities six times and won a lot of wards and certificates. In addition, I have also finished a research project with my peers. These experiences really broaden my view on my future major.</span><br><span class="line">Moreover, I’m especially warm-hearted, participating in many activities held by our government. I worked as a volunteer for the Fifth Citizen Sports Meeting of Rizhao and the aid education in remote areas. From these activities, I enjoyed the happiness of making contributions to our society. </span><br><span class="line">What’s more, I have a wide range of interests. I have a passion for reading books, which broadens my horizon. I’m also attracted by listening to music and playing badminton.</span><br><span class="line">The major that I hope to pursue for my further education is ideological and political education as my major. My passionate interest in it can explain why I choose it as my major. I read many books related to my major such as the Communist Manifesto and Dialectics of Nature. With the qualified teachers and the great platform for doing researches, Southeast University has become my dream place for years. </span><br><span class="line">I firmly believe, led by the distinguished professors and scholars here, I will go further on ideological and political education. Thank you for your attention.</span><br></pre></td></tr></table></figure></li><li><p>How to be creative in developing your topic?</p><ul><li>mysterious,suspenseful,drama,adventure,danger神秘、悬疑、戏剧、冒险、危险</li><li>clorful &amp; descriptive language    丰富多彩的描述性语言</li><li>witty remarks &amp; jokes   诙谐的评论和笑话</li><li>funny situations</li><li>Or: sincere/enthusiastic</li></ul></li><li><p>Organizing the Speech</p><ul><li><strong>Introduction</strong><ul><li>To get the audience’s attention and interest,</li><li>To create a dramatic or colorful opening, …</li><li>pose a question;</li><li>tell a story;</li><li>make a startling statement;</li><li>open with a quotation…</li></ul></li></ul><blockquote><p>开头部分还应该引导听众对主题内容有一个初步的了解，要对主体部分的讨论要点给出明确清晰的预览陈述。</p></blockquote><ul><li><strong>Body</strong><ul><li><p>What are the most commonly used methods of organization?</p></li><li><p>relate the events in a chronological order / in a topical order  把这些事件按时间顺序/主题顺序联系起来</p></li></ul></li></ul><blockquote><p>Limit the number of main points!Don’t introduce irrelevant information.Make your main points stand out by introducing each with a transition statement.</p><p>限制要点的数量!不要介绍无关的信息。用一个过渡语句来介绍你的主要观点，使其脱颖而出。</p></blockquote><ul><li><p><strong>Conclusion</strong></p></li><li><p>Let the audience know you are about to finish.</p></li><li><p>Reinforce your major theme.  强化你的主题。</p></li><li><p>End on a dramatic, clever, or thought-provoking note.以一个戏剧性的，聪明的，或发人深省的笔记结束。</p></li></ul></li><li><p>Delivering your speech  演讲呈现技巧</p><ul><li>Speak extemporaneously 即兴演讲</li><li>Rehearsing the speech 排练演讲</li><li>Presenting the speech 展示演讲</li></ul></li></ul><h1 id="u4-selecting-a-topic"><a class="markdownIt-Anchor" href="#u4-selecting-a-topic"></a> U4 Selecting a Topic</h1><ul><li><p>Selecting a Topic</p><ul><li>Topic: the subject of a speech 演讲的主题</li></ul></li><li><p>Two Broad Categories of Topics</p><p>(1) Subjects you know a lot about.</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Most people speak best about subjects with which they are most familiar.</span><br><span class="line">Think about a topic, draw on your own knowledge and experience.</span><br><span class="line">Think about unusual experiences or special expertise(n. 专门知识；专门技术；专家的意见).</span><br></pre></td></tr></table></figure><p>​  (2) Subjects you want to know more about.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Make your speech a learning experience.</span><br><span class="line">★A subject about which you already have some knowledge or expertise but not enough to prepare a speech without doing additional research.</span><br><span class="line">★ A subject you want to explore for the first time. </span><br><span class="line">★ A subject about which you hold strong opinions and beliefs, such as global warming, media violence, helping people with disabilities, vegetarianism素食 , preserving nature sanctuary禁猎区 . </span><br><span class="line">no designated topics</span><br></pre></td></tr></table></figure><ul><li><p>How to choose a topic?</p><p>The topic is determined by: occasion,  audience, speaker’s qualifications</p><ul><li><p>Brainstorming: a method of generating ideas for speech topics by free association of words and ideas.</p></li><li><p>Procedures:</p><ul><li><p>A. Personal inventory 盘点法</p></li><li><p>B. Clustering 聚类法</p></li><li><p>C. Internet search网络搜索</p></li></ul></li><li><p>Guidelines</p><ul><li><p>A. Interesting to us</p></li><li><p>B. Interesting to the audience</p></li><li><p>C. Appropriate to the situation</p></li><li><p>D. Appropriate to the time limit</p></li><li><p>E. Manageable</p></li></ul></li></ul></li><li><p>Determining the <strong>General Purpose</strong></p><p>General purpose: the broad goal of a speech</p><ul><li>To inform: act as a teacher or lecturer, enhance the knowledge and understanding of your listeners — to give them information that they did not have before.</li><li>To persuade: act as an advocate or a partisan（虔诚信徒）, win over your listeners to your point of view – go get them to believe something or do something.</li><li>To entertain: help listeners have a good time by getting them to relax, smile, and laugh.</li></ul></li><li><p>Determining the <strong>Specific Purpose</strong></p></li></ul><p>Specific purpose: a single infinitive phrase that states precisely what a speaker hopes to accomplish in his or her speech. It should focus on one aspect of a topic.</p><ul><li><p>①Write the Purpose Statement as a Full Infinitive原形 Phrase</p></li><li><p>②Express Your Purpose as a Statement, Not as a Question</p></li><li><p>③Avoid Figurative比喻的 Language in Your Purpose Statement</p></li><li><p>④Make Sure Your Specific Purpose Is Not Too Vague模糊的 or General大体的</p></li><li><p>⑤Choose a Specific Purpose That Is Appropriate for Your Audience</p></li><li><p>⑥Choose a Specific Purpose You Can Achieve in the Allotted分配 Time</p></li><li><p>Phrasing用短语描述 the <strong>Central Idea</strong></p><p>Central idea: a one-sentence statement that sums up or encapsulates（压缩，概述） the major ideas of a speech.</p><ul><li>Make sure the central idea is not too general.</li><li>Express the central idea as a full sentence.</li><li>State the central idea as a declarative sentence, not as a question.</li><li>Avoid figurative language in the central idea.</li></ul></li><li><p>How to write a purpose?</p><ul><li>-Topic</li><li>-general purpose</li><li>-specific purpose</li><li>-Central idea</li><li>-Main point</li></ul></li></ul><h1 id="u5-using-language-1"><a class="markdownIt-Anchor" href="#u5-using-language-1"></a> U5 Using Language 1</h1><ul><li><p>Using Language Accurately</p></li><li><p>Using Language Clearly</p><ul><li><p>​Use familiar words ：short, sharp words</p></li><li><p>​Choose concrete words</p></li><li><p>​Eliminate clutter消除杂波</p><ul><li><p>Simple words: before, if, now</p></li><li><p>Cluttered counterparts: prior to, in the eventuality of, at this point in time</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- Suggestions:</span><br><span class="line">- ​Throw away unnecessary words.</span><br><span class="line">- ​Keep your language lean and lively.</span><br><span class="line">- ​Beware of using several words where one or two will do.</span><br><span class="line">- ​Avoid flabby phrases</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>Using Language Vividly</p><ul><li><p><strong>Imagery(比喻，形象化）</strong></p><p>The use of vivid language to create mental images of objects, actions, or ideas.创造物体、动作或思想的心理形象</p></li><li><p><strong>Concrete Words  具体词汇</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- for example:</span><br><span class="line">- in the end of the speech, many students will say “let&#x27;s embrace the bright future”</span><br><span class="line">- “I would be gratified to live a life like this after graduation: after a day&#x27;s work, I came back to my little apartment, make myself a simple meal, sit down and late practise some yoga, and enjoy a moment of peace by myself. Plain it maybe to some people, but it is the future I&#x27;d like to have.”</span><br></pre></td></tr></table></figure></li><li><p><strong>Simile  明喻</strong></p><p>明喻是在本质上不同但又有共同点的事物之间进行的一种明确的比较。它总是包含单词“like”或“as”。</p></li><li><p><strong>Metaphor 暗喻</strong></p><p>暗喻是在本质上不同但又有共同之处的事物之间隐含的比较。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Imagine the book of your life, its covers, its beginning and end, and your birth and your death. You can only know the moments in between, the moments that make up your life. It makes no sense for you to fear what is outside of those covers, whether before your birth or after your death. And you needn’t worry how long the book is, or whether it is a comic strip or an epic. The only thing that matters is that you make it a good story.</span><br></pre></td></tr></table></figure></li><li><p><strong>Rhythm（节奏）</strong></p><p>The pattern of sound in a speech created by the choice and arrangement of words.</p></li></ul></li></ul><h1 id="u6-using-language-2"><a class="markdownIt-Anchor" href="#u6-using-language-2"></a> U6 Using Language 2</h1><p>Using Language Vividly</p><ul><li><p>Using Language Vividly-Rhythm</p><ul><li><p><strong>Parallelism 排比，对偶</strong></p><p>将一组内容相关、结构相似的字、词、句排列在一起。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">With this faith we will be able to work together, to pray together, to struggle together, to go to jail together, to stand up for freedom together, knowing that we will be free one day. </span><br></pre></td></tr></table></figure></li><li><p><strong>Repetition    反复</strong></p><p>在连续的句子开头或结尾重复使用相同的词或短语。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tonight, HIV marches resolutely toward AIDS in more than a million American homes, littering its pathway with the bodies of the young, young men, young women, young parents, and young children. We must imagine greatly, dare greatly, and act greatly.</span><br></pre></td></tr></table></figure></li><li><p><strong>Alliteration  头韵</strong></p><p>在相邻或相近的单词中重复使用同一个辅音做开头音。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Time and again these men and women struggled and sacrificed. We remain the most prosperous, powerful nation on Earth. With old friends and former foes, we will work tirelessly to lessen the nuclear threat, and roll back the specter of a warming planet.</span><br></pre></td></tr></table></figure></li><li><p><strong>Antithesis  对仗</strong></p><p>以平行结构将相对的观点放在一起。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">That&#x27;s one small step for man; one giant leap for  mankind. </span><br></pre></td></tr></table></figure></li></ul></li><li><p>Using Language Appropriately</p><ul><li>Appropriateness to the topic、speaker、occasion、audience</li></ul></li><li><p>Using Language Inclusively</p></li></ul><h1 id="u7-supporting-your-ideas"><a class="markdownIt-Anchor" href="#u7-supporting-your-ideas"></a> U7 Supporting Your Ideas</h1><ul><li><p>Supporting Your Ideas</p><ul><li>Presenting the central ideas/purpose</li><li>Conclusion</li></ul></li><li><p>Two criteria of choosing supporting materials:</p><ul><li>Authority/expertise 权威/专业知识</li><li>Accuracy</li></ul></li><li><p>Basic Kinds of Supporting Materials</p></li><li><p><strong>Examples (specific, personal, lively)</strong></p></li><li><p><strong>Statistics</strong></p></li><li><p><strong>Testimony 证据</strong></p></li><li><p><strong>Examples (specific, personal, lively)</strong></p><ul><li><p>Brief Exampls  简要事例</p></li><li><p>Specific Instances / Specific Cases</p></li><li><p><strong>Extended Examples  扩展的例子</strong></p><ul><li><p>narratives—stories 叙事</p></li><li><p>illustrations  例证</p></li><li><p>anecdotes  趣闻轶事</p></li></ul></li><li><p><strong>Hypothetical Examples  假设的例子</strong></p><ul><li><p>“suppose that”</p></li><li><p>“imagine that”</p></li><li><p>“what if”</p></li></ul></li></ul></li></ul><blockquote><p>Tips for Using Examples<br />(1) Make examples vivid and richly textured(生动且层次丰富）<br />(2) Reinforce examples with statistics or testimony （运用数据或证言强化事例）</p></blockquote><ul><li><p><strong>Statistics / Numerical Data</strong></p><ul><li><p><strong>Single Statistics</strong></p></li><li><p><strong>Multiple Statistics</strong></p></li></ul></li></ul><blockquote><p>Tips for Using Statistics<br />(1) Use representative statistics    代表性的数据<br />(2) Identify the sources of statistics<br />(3) Use the statistics from the reliable source<br />(4) Round off complicated statistics   复杂的统计数字四舍五入<br />(5) Explain the statistics<br />(6) Use visual aids to clarify statistics   使用视觉辅助工具来澄清统计数据</p></blockquote><ul><li><p><strong>Testimony  证词，证言；证据，证明</strong></p><p>Testimony is about other people’s words or ideas.</p><p>Quotations or paraphrases used to support a point.</p><ul><li><strong>Expert Testimony</strong></li><li><strong>Peer Testimony</strong></li></ul></li></ul><blockquote><p>Tips for Using Testimony<br />(1) Decide whether to quote or paraphrase  决定是引用还是转述<br />(2) Quote or paraphrase accurately<br />(3) Use testimony from qualified source<br />(4) Use testimony from unbiased source<br />(5) Identify the people you quote or paraphrase</p></blockquote><h1 id="u8-英语写作之常见句法错误"><a class="markdownIt-Anchor" href="#u8-英语写作之常见句法错误"></a> U8 英语写作之常见句法错误</h1><ol><li><p><strong>Run-on Sentences（流水句）</strong><br />Def: A run-on sentence is a sentence in which two or more independent clauses (that is, complete sentences) are joined with no punctuation or conjunction.<br />指错误地将两个独立分句合写在一个句子里面，没有正确地用标点或连词加以分离。</p><p>​<strong>(1) Comma Splice （逗号使用错误）</strong><br />逗号使用错误相当于中文写作中常出现的“一逗到底”的现象，这种现象在英文写作中是不允许的。具体表现为使用逗号但是并没有并列连词将两个独立分句写在一个句子里.</p><p>​<strong>(2) Fused Sentence（融合句）</strong><br />根本不使用标点把两个独立分句合写在一个句子里。</p></li><li><p><strong>Sentence Fragments （句子碎片；零散句）</strong><br />Def: A fragment is only a piece of a complete thought. It can be phrases or dependent clauses or any incomplete word group that begins with capital letter and ends with a period, question mark, or exclamation point but is grammatically incomplete.<br />一般是指某句子看上去样子像个句子，但它从语法上讲并不是一个句子，是模仿真的句子的假句子。<br />一个完整的句子最基本的要素就是主语(a subject) +动词(a verb)+完整意思(a complete thought)</p></li></ol><h1 id="u9"><a class="markdownIt-Anchor" href="#u9"></a> U9</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">an imaginary story   一个虚构的故事</span><br><span class="line">illustration 插画 插图 例证 说明  </span><br><span class="line">fable 寓言；谎言，无稽之谈；神话，传说 </span><br><span class="line">hypothetical example 假设的例子 </span><br><span class="line">simulated example  模拟的例子</span><br><span class="line">Analogies  类比；类推法</span><br><span class="line">causal reasoning  因果推理</span><br><span class="line">emotional appeals  </span><br><span class="line">statistics 情感诉求；感性诉求</span><br></pre></td></tr></table></figure><h1 id="u10-main-points"><a class="markdownIt-Anchor" href="#u10-main-points"></a> U10 Main Points</h1><ul><li><p>Three basic parts of a speech</p><ul><li>Introduction</li><li>Body</li><li>Conclusion</li></ul><p>外包装 + 内核 + 外包装</p></li></ul><blockquote><ul><li><p>Listeners demand coherence.与听众需求一致性</p></li><li><p>Strategic organization</p></li><li><p>Using a clear and specific method of speech organization</p></li><li><p>The process of organizing the body begins when you determine the main points.组织正文的过程从你确定要点开始</p><ul><li>Select them carefully;仔细选择他们</li><li>Phrase them precisely; 短语精确</li><li>Arrange them strategically.战略安排他们</li></ul></li></ul></blockquote><ul><li><p><strong>Establish the main points  确立要点</strong></p><ul><li><p>Rule 1: Sometimes the main points are evident from your specific purpose statement.</p><p>​有时候，从你的特定目的陈述中，要点是显而易见的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Specific Purpose: </span><br><span class="line">To inform my audience about the goals, structure, and member  states of the United States.</span><br><span class="line">Central Idea:</span><br><span class="line">Composed of five administrative bodies and 192 member states, the United Nations is devoted to promoting international cooperation.</span><br><span class="line">Main Points: </span><br><span class="line">I. The overarching（主要的） goal of the United Nations is to promote international cooperation.</span><br><span class="line">II. The United Nations is divided into five administrative bodies.</span><br><span class="line">III. The United Nations is made up of 192 member states.</span><br></pre></td></tr></table></figure></li><li><p>Rule 2: Even if the main points are not stated expressly in your specific purpose, they can be easy to project from it.</p><p>​即使在你的具体目的中没有明确说明要点，它们也可以很容易地投射出来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Specific purpose: </span><br><span class="line">To inform my audience about the four events in women’s gymnastics.</span><br><span class="line">Central Idea: </span><br><span class="line">The four events in women’s gymnastics are floor exercise, vault, balance beam, and uneven parallel bars.</span><br><span class="line">Main Points: </span><br><span class="line">I. Floor exercise combines dancing, acrobatics, and tumbling.</span><br><span class="line">II. Vault features explosive power and dramatic midair maneuvers.</span><br><span class="line">III. Balance beam requires precise routines and perfect coordination.</span><br><span class="line">IV. Uneven parallel bars demand strength, flexibility, and agility.</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>Organizing the Main  Points 组织要点</strong></p><p>The order in which you will present your main points depends on your topic, your purpose, and your audience.</p><ul><li><p>Patterns of Organization 语篇组织模式</p><ul><li><p><strong>Chronological order  时间顺序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Specific Purpose: </span><br><span class="line">To inform my audience how the Great Wall of China was built.</span><br><span class="line">Central Idea: The Great Wall of China was built in three major stages.</span><br><span class="line">Main Points: </span><br><span class="line"> I. Building of the Great Wall began during the Qin Dynasty of 221-206 B.C.</span><br><span class="line">II. New sections of the Great Wall were added during the Han Dynasty of 206 B.C.-220 A.D.</span><br><span class="line">III. The Great Wall was completed during the Ming Dynasty of 1368-1644.</span><br></pre></td></tr></table></figure></li><li><p><strong>Spatial order  空间顺序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Specific purpose: </span><br><span class="line">To inform my audience about the structure of a typhoon.</span><br><span class="line">Central Idea: A typhoon is made up of three parts of going from inside to outside.</span><br><span class="line">Main points: </span><br><span class="line">I. At the center of a typhoon is the calm,  cloud-free eye.</span><br><span class="line">II. Surrounding the eye is the eyewall, a dense ring of clouds that produces the most intense wind and rainfall.</span><br><span class="line">III. Rotating around the eyewall are large bands of clouds and precipitation called spiral（螺旋状的） rain bands（降雨带）.</span><br></pre></td></tr></table></figure></li><li><p><strong>Problem-solution order  问题解决的顺序</strong></p><p>​a method of speech organization in which the first main point deals with the existence of a problem and the second main point presents a solution to the problem.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Specific Purpose: </span><br><span class="line">To persuade my audience that tougher measures are needed to control illegal selling of antiques.</span><br><span class="line">Central Idea: </span><br><span class="line">Illegal selling of antiques is a serious problem that requires a combination of government action and individual awareness.</span><br><span class="line">Main points: </span><br><span class="line">I. Illegal selling of antiques is a serious problem in parts of China.</span><br><span class="line">II. The problem can be solved by a combination of government action and </span><br><span class="line">individual awareness. </span><br><span class="line">Most appropriate for persuasive speeches.</span><br></pre></td></tr></table></figure></li><li><p><strong>Topical order 话题顺序</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Your specific purpose is “ To inform my audience of the achievements of Leonardo da Vinci”.</span><br><span class="line">Chronologically 按年代地 从历史上: his achievements in each stage of his career.</span><br><span class="line">Topically 总论地: divide his achievements into categories. </span><br><span class="line">Specific Purpose: To inform my audience about the achievements of Leonardo da Vinci.</span><br><span class="line"></span><br><span class="line">Central Idea: </span><br><span class="line">Leonardo da  Vinci was accomplished as a painter, an inventor, and as astronaut.</span><br><span class="line">Main Points: </span><br><span class="line">I. As a painter, Leonardo da Vinci produced the Mona Lisa, the Last Supper, and other masterpieces.</span><br><span class="line">II. As an inventor, he drew plans for an parachute and a flying machine.</span><br><span class="line">III. As an astronomer, he concluded that the earth revolves around the sun.</span><br></pre></td></tr></table></figure></li><li><p><strong>Causal Division 因果关系</strong></p><ul><li>cause to effect</li><li>effect to cause</li></ul></li><li><p><strong>Pro-con division  利弊关系</strong></p><ul><li>pro</li><li>con</li></ul></li></ul></li></ul></li><li><p>Tips for Preparing the Main Points  准备要点的技巧</p><ul><li><p>Limit the number of main points.</p></li><li><p>Keep main points separate.</p></li><li><p>Try to use the same pattern of wording for main points.</p></li><li><p>Balance the amount of time devoted to main points.</p></li><li><p>Make the Main Points a Whole Unity</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Topic: “Apple” has changed the world.</span><br><span class="line">Specific purpose: To inform the audience that three apples have changed the world.</span><br><span class="line">Main points:</span><br><span class="line">The apple of morality, eaten by Adam and Eve, help people to differentiate good from evil.</span><br><span class="line">The apple of science, discovered by Newton, taught people to explore the truth.</span><br><span class="line">The apple of creativity, created by Steve Jobs, changed people’s ways of communication and ways of life.</span><br></pre></td></tr></table></figure></li></ul></li><li><p>Supporting Materials</p><p>​    the materials used to support a speaker’s ideas. The three major kinds of supporting materials are examples, statistics, and testimony.</p><ul><li>Examples<ul><li>Brief examples</li><li>Extended examples</li><li>Factual examples 客观事实引用</li><li>Hypothetical examples</li></ul></li><li>Statistics</li><li>Testimony<ul><li>Expert testimony</li><li>Peer testimony</li></ul></li></ul></li><li><p><strong>Connectives 连接符 连接词 连词 联结词</strong></p><ul><li><p>Types of connectives</p><ul><li><p>transitions 关联词</p></li><li><p>internal previews 内部提示</p></li><li><p>internal summaries 内部总结</p></li><li><p>signposts 标识语</p><blockquote><p>​<font color="red">Now that</font> we have a clear understanding of the problem, <font color="red">let me </font>share the solution with you.<br />​We have spoken so far of Guan Yu’s skill as a warrior, but above all it is his honor and righteousness that make him a mythic figure in Chinese history.<br />​Keeping these points in mind about sign language, let’s return to the sentence I started with.<br />[Internal Summary]: Let’s sum up what we have discussed so far. First, we have seen that<br />Li Shizhen’s classic work Bencao Gangmu divides the substances from minerals into four<br />categories. Second, we have seen that it divides the substances from animals into six<br />categories. [Transition]: Now let us see how it divides the substances from plants.</p></blockquote></li></ul></li></ul></li></ul><h1 id="u11-beginning-and-ending-the-speech"><a class="markdownIt-Anchor" href="#u11-beginning-and-ending-the-speech"></a> U11 Beginning and Ending the Speech</h1><p>Introduce</p><ul><li><p><strong>Introduce the topic and the main points</strong></p><blockquote><p>例1：Today I will talk with you about</p><p>※the causes of high blood pressure;</p><p>※ the strain high blood pressure is putting on China’s health care system</p><p>※ and what people can do to reduce the likelihood of having high blood pressure.</p><ul><li>第一，简短。切忌冗长、信息量大的内容介绍，加重听众的记忆负担。</li><li>第二，表达方式富有变化。尽量不要采用报幕式的方法展示演讲内容。可以适当使用修辞、幽默等语言技巧，使语言形式更加活泼。</li></ul></blockquote></li><li><p><strong>Get Attention and Interest</strong></p><ul><li>A: Relate the topic to the audience.  将话题与听众联系起来。</li><li>B: State the importance of your topic.  陈述主题的重要性。</li><li>C: Startle the audience. 使听众震惊</li><li>D: Arouse the curiosity of the audience.</li><li>E: Question the audience.</li><li>F: Begin with a quotation.</li><li>G: Tell a story.</li><li>H: Using unexpected props  利用意想不到的道具</li></ul></li><li><p><strong>Attention grabber</strong></p><ul><li><p><strong>tell a personal story</strong></p><p>​    true life experience, real, sincere</p><blockquote><p>As a famous saying goes:</p><p>“Tell me a fact and I’ll learn. Tell me a truth and I’ll believe. Tell me a story and I’ll remember.”</p></blockquote></li><li><p><strong>offer thought-provoking questions 提供发人深省的问题</strong></p><p>​    Why? How? What if?</p></li><li><p><strong>making dramatic statement</strong></p><ul><li>startling statement  惊人的声明</li><li>using shocking statistics  用令人震惊的统计数据</li></ul></li><li><p>start your speech with an intresting quotation</p></li></ul></li><li><p><strong>Create a Positive Relationship with the Audience</strong></p><blockquote><p>Especially important when：</p><p>The speaker is controversial or advocates an unpopular position；</p><p>In cross-cultural communication.</p><p>尤其重要:</p><p>演讲者是有争议的或主张不受欢迎的立场;</p><p>在跨文化交际</p></blockquote></li><li><p><strong>Establish Credibility</strong></p><blockquote><p>Your credibility can be based on research, firsthand knowledge, or some combination of the two.</p><p>你的可信度可以建立在研究、第一手知识或两者结合的基础上。</p></blockquote></li></ul><blockquote><p>Tips for the Introduction<br />(1) Keep the introduction relatively brief.<br />(2) Be on the lookout for possible introductory materials as you do your research.<br />在你做研究的时候，要注意可能的介绍性材料。<br />(3) Be creative in devising your introduction. 在自我介绍的设计上要有创意。<br />(4) Don’t worry about the exact wording of your introduction until you have finished the body of the speech.<br />(5) Don’t apologize in your introduction.<br />(6) Work out your introduction in detail.<br />(7) Don’t start talking too soon.   不要太早开口。</p></blockquote><p>Conclusion</p><ul><li>A conclusion can serve the following functions.<ul><li>To create a sense of completeness to the speech</li><li>to sum up</li><li>To win the audience for the last time</li><li>To reinforce our points  加强我们的观点</li></ul></li></ul><p>A conclusion can be achieved in the following ways.</p><ul><li><strong>Summarizing your speech 总结要点</strong></li></ul><blockquote><p>总结要点是最常见的一种结尾方式，在信息性演讲中使用尤为频繁。演讲者通过重申演讲的</p><p>中心思想和主要观点来帮助听众有条理地总结演讲内容，使听众对演讲内容留下全局印象。</p></blockquote><ul><li><p><strong>End with a quotation</strong></p></li><li><p><strong>Make a dramatic statement</strong></p></li><li><p><strong>Refer to the introduction</strong></p><blockquote><p>演讲的结构不是线性的，而是环状的。鉴于此，演讲者可以在结尾时有意识地将结束语与开篇语呼应，从而达到语篇流畅、统一的效果</p></blockquote></li><li><p><strong>Issuing an appeal 呼吁行动式</strong></p><blockquote><p>劝说性演讲中较为常用。演讲者不仅要听众同意和接受自己的观点，在结束时还要呼吁听众采取行动，并和听众一起想象采取行动后的美好未来，已达到规劝听众并让他们采取自由行动的目的。</p></blockquote></li></ul><blockquote><p>Tips for Conclusion</p><p>(1) Keep an eye for possible concluding materials as you research and develop the speech.<br />(2) Conclude with a bang, not a whimper.<br />(3) Don’t be long-winded. The conclusion makes up no more than 5-10 percent of your speech.<br />(4) Don’t end with an apology. Statements</p></blockquote><h1 id="u12-outlining-the-speech"><a class="markdownIt-Anchor" href="#u12-outlining-the-speech"></a> U12 Outlining the Speech</h1><ul><li><p><strong>Preparation outline</strong>: a detailed outline developed during the process of speech preparation that includes the title, specific purpose, central idea, introduction, main points, subpoints, connectives, conclusion, and bibliography of a speech.  准备提纲:在准备演讲的过程中形成的详细的提纲，包括演讲的标题、具体目的、中心思想、引言、要点、子要点、连接词、结论和参考书目。</p><ul><li><p>Guidelines for the Preparation Outline</p><p>​1. State the specific purpose and central idea.陈述具体目的和中心思想</p><p>​2. Label the introduction, body, and conclusion.标注引言、正文和结论</p><p>​3. Use a consistent pattern of symbolization and indentation（缩格）.使用一致的符号和缩进模式</p><p>​4. State main points and subpoints in full sentences.用完整的句子陈述要点和次要要点</p><p>​5. Label transitions, internal summaries, and internal previews.标签转换、内部摘要和内部预览</p><p>​6. Attach a bibliography.附上参考书目</p><p>​7. Give your speech a title. 给你的演讲起个标题</p></li></ul></li><li><p><strong>Speaking outline</strong>: a brief outline used to jog a speaker’s memory during the presentation of a <a href="http://speech.It">speech.It</a> helps you remember what you want to say. A condensed version of your preparation outline.</p><p>​         It should contain key words or phrases, essential statistics and quotations.</p><p>​         It should also include cues to direct and sharpen your delivery.</p><ul><li><p>Guidelines for the Speaking Outline</p><p>​1. Follow the visual framework used in the preparation outline.</p><p>​2. Make sure the outline is legible（易读的）.</p><p>​3. Keep the outline as brief as possible.</p><p>​4 .Give yourself cues for delivering the speech.</p></li></ul></li></ul><h1 id="u13-speaking-to-inform"><a class="markdownIt-Anchor" href="#u13-speaking-to-inform"></a> U13 Speaking to Inform</h1><ul><li><p>Types of informative speeches</p><p>​(1) Speeches about objects</p><p>​(2) Speeches about processes</p><p>​(3) Speeches about events</p><p>​(4) Speeches about concepts</p></li><li><p><strong>Speeches about processes</strong> explain how something is made, how something is done, or how something works</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SMART---an acronym </span><br><span class="line">S (specific goal): What is the goal of the new project you want to start.</span><br><span class="line">M (measurable): List all the features you need to accomplish to start the project.</span><br><span class="line">A (action): When will you start.</span><br><span class="line">R (realistic): Is the project small enough to finish it in the specified time frame.</span><br><span class="line">T (time): In the beginning of July 2020 everything should be fine.</span><br></pre></td></tr></table></figure></li><li><p>Organizing Informative Speeches</p><p>​        chronological; spatial; topical</p></li></ul><blockquote><p>Tips for Informative Speeches</p><ol><li>Don’t overestimate what the audience knows.</li><li>Don’t be too technical.</li><li>Personalize your ideas.</li><li>Avoid abstractions.</li><li>Be creative.</li><li>Avoid boring the audience with familiar information.</li></ol></blockquote><p>Speech Evaluation Criteria</p><ul><li>E-Excellent</li><li>G-Good</li><li>A-Average</li><li>F-Fair</li><li>P-Poor</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Introduction</span><br><span class="line">- Gain attention and interest</span><br><span class="line">- Introduce the topic clearly</span><br><span class="line">- Establish credibility</span><br><span class="line">- Effectively preview main points</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Body</span><br><span class="line">- Main points are clear</span><br><span class="line">- Organization well-planned</span><br><span class="line">- Main points fully supported</span><br><span class="line">- Sources cited and indentified clearly</span><br><span class="line">- Language clear, accurate, appropriate</span><br><span class="line">- Connectives used effectively</span><br><span class="line">- Visual aids effective</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Conclusion</span><br><span class="line">- Prepared audience for an ending</span><br><span class="line">- Reinforced central idea</span><br><span class="line">- Ended on a strong note</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Delivery</span><br><span class="line">- Began speech without rushing</span><br><span class="line">- Maintain appropriate eye contact</span><br><span class="line">- Avoided distracting mannerism  避免分散注意力的特殊习惯</span><br><span class="line">- Articulated words clearly</span><br><span class="line">- Used pauses effectively</span><br><span class="line">- Used vocal variety to add impact</span><br><span class="line">- Communicated enthusiasm for topic</span><br><span class="line">- Speech presented extemporaneously  即兴演讲</span><br><span class="line">- Visual aids clear and visible, presented well</span><br><span class="line">- Departed from lectern without rushing</span><br></pre></td></tr></table></figure><h1 id="u14-speaking-to-persuade"><a class="markdownIt-Anchor" href="#u14-speaking-to-persuade"></a> U14  Speaking to Persuade</h1><ul><li><p>The psychology of persuasion</p></li><li><p>Target audience</p></li><li><p>Three major kinds of persuasive speeches</p></li><li><p>The methods of persuasion.</p><ul><li><p>Building Credibility</p></li><li><p>Using evidence</p></li><li><p>Reasoning</p></li><li><p>Appealing to emotions</p></li></ul></li></ul><p>Methods you can use to hit the target in the following three kinds of persuasive speeches</p><ul><li><p><strong>speeches on questions of fact</strong></p><ul><li><p>A question of fact means a question about the truth or falsity of an assertion</p><p>​     有关事实的说服性演讲的目的是说服听众同意演讲者对某一事实真伪的判断。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- Specific purpose: To persuade my audience that Marilyn Monroe did not die of suicide.</span><br><span class="line">- Main Points: </span><br><span class="line">- A. Medical check proves no sign of hypnotics&#x27; overdosing in Monroe.</span><br><span class="line">- B. Evidence and witnesses on the scene suggested it  was more of a murder crime.</span><br><span class="line">- C. Rumor went that Monroe had complicated relationship with the Kennedy Brothers.</span><br></pre></td></tr></table></figure></li><li><p><strong>speeches on questions of value</strong></p><ul><li><p>Question of value means a question about the worth, rightness, morality, and so forth of an idea or action.</p><p>​      价值问题指的是关于一种思想或行为的价值、正确性、道德性等问题</p></li></ul><blockquote><p>Whenever you give a speech on a question of value, be sure to give special thought to the standards for your value judgment</p><ul><li>每当你就价值问题发表演讲时，一定要特别考虑你的价值判断标准</li><li>组织关于价值问题的演讲</li><li>最常见的方法是把你的第一个要点用于建立你的价值判断的标准，然后把你的第二个要点用于将这些标准应用到你演讲的主题上。</li></ul></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Specific purpose: To persuade my audience the jogging is the ideal workout option.</span><br><span class="line">Main points:</span><br><span class="line">1. An ideal workout option should meet three major standards.</span><br><span class="line">   A. It should be good for one&#x27;s health.</span><br><span class="line">   B. It should be economical.</span><br><span class="line">   C. It should be flexible.</span><br><span class="line">2. Jogging meets all three standards for an ideal workout option.</span><br><span class="line">   A. Jogging offers multiple health benefits.</span><br><span class="line">   B. Jogging does not cost any money.</span><br><span class="line">   C. Jogging can be done anywhere, anytime.</span><br></pre></td></tr></table></figure></li><li><p><strong>speeches on questions of policy.</strong></p><ul><li><p>Question of policy means a question about whether a specific course of action should or should not be taken.Types of speeches on questions of policy include speeches to gain passive agreement and speeches to gain immediate action.</p><p>​     政策问题指的是某一具体行动方针是否应该采取的问题。关于政策问题的演讲类型包括获得被动同意的演讲和获得立即行动的演讲。</p></li><li><p><strong>Speeches to gain passive agreement(以获得听众认可为目标的演讲）</strong></p><p>​Persuasive speeches in which the speaker’s goal is to convince the audience that a given policy is desirable without encouraging the audience to take action in support of the policy.</p></li></ul><p>​说服性演讲，演讲者的目标是说服听众某一政策是可取的，但不鼓励听众采取行动支持该政策。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">To persude my audience that public speaking should be a required course for English majors.</span><br></pre></td></tr></table></figure><ul><li><p><strong>Speeches to gain immediate action(以促使听众立即行动为目标的演讲）</strong></p><p>​Persuasive speeches in which the speaker’s goal is to convince the audience to take action in support of a given policy.</p><p>​说服性演讲，演讲者的目标是说服听众采取行动支持某一特定政策。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">To persuade my audience to donate blood on a regular basis.</span><br></pre></td></tr></table></figure></li></ul></li></ul><p><strong>Organizing Speeches on Questions of Policy</strong></p><ul><li><p><strong>problem-solution order 问题解决方案的顺序</strong><br />A method of organizing persuasive speeches in which the first main point deals with the existence of a problem and the second main point presents a solution to the problem</p><p>​第一个要点说明问题的存在，第二个要点提出问题的解决方案</p></li><li><p><strong>problem-cause-solution order</strong><br />A method of organizing persuasive speeches in which the first main point identifies a problem,the second main point analyzes the causes of the problem,and the third main point presents a solution to the problem.<br />第一个要点确定问题，第二个要点分析问题的原因，第三个要点提出问题的解决方案</p></li><li><p><strong>comparative advantages order  比较优势的顺序</strong><br />A method of organizing persuasive speeches in which each main point explains why a speaker’s solution to a problem is preferable to other proposed solutions</p><p>​每个要点都说明为什么演讲者对某个问题的解决方案比其他提出的解决方案更可取</p></li><li><p><strong>motivated sequence （动机序列法）</strong></p><p>A method of organizing persuasive speeches that seek immediate action.要求立即采取</p><ul><li>attention(引起听众的注意）<br />need（解释解决问题的必要性）<br />satisfaction（提出解决问题的办法）<br />visualization（形象地描述采用上述办法的好处）<br />action（号召听众立即采取行动）</li></ul></li></ul><p>Methods of persuasion<br /><strong>1.Building credibility (ethos）</strong></p><blockquote><p>Credibility are affected by competence and character   信誉受能力和品格的影响<br />Explain your competence<br />Establish common ground with your audience 与你的听众建立共同立场<br />show respect for your listeners<br />deliver your speeches fluently, expressively and with conviction  演讲要流利、有表现力、有说服力</p></blockquote><p><strong>2 .Using evidence（logos)</strong></p><blockquote><p><strong>Specific evidence</strong>  is more persuasive .<br /><strong>Novel evidence</strong> is more persuasive if evidence is new to the audience.<br /><strong>Evidence from credible sources</strong> is  more persuasive.</p></blockquote><p><strong>3.Reasoning</strong><br />The process of drawing a conclusion on the basis of evidence</p><p>​(1)（归纳论证）Reasoning from specific instances<br />particular facts to a general conclusion  用具体的事实来概括结论</p><p>​(2)（演绎论证）Reasoning from principle<br />move from the general to the specific  从一般到具体</p><p>​(3)（因果论证）Causal reasoning</p><p>seeks to establish the  relationship between causes and  effects 试图建立因果关系</p><p>​(4)（类比论证）Analogical reasoning</p><p>Compare two similar cases and infers the truth of both  比较两个相似的案例，并推断两者的真相</p><blockquote><p>四种常见的推理</p><ul><li><p>根据具体事例推理</p><p>避免轻率结论/用词准确，避免一概而论/利用数字和材料支撑</p></li><li><p>根据原理推理</p><p>从普遍原理走向特殊的结论的过程</p><p>原理（大前提）必须准确/推理要有相的说服力</p></li><li><p>根据因果推理</p><p>避免两者仅仅时间有联系，而非因果/不要简化为单一事件起因</p></li><li><p>类比推理</p><p>类比实例必须是可比较的/类比的角度和立场具有多样性</p></li></ul></blockquote><p>fallacies you should guard against  常见的谬误<br />(1) red herring 红鲱鱼<br />引入完全不相干的物体，使听众从正在讨论的问题中走神<br />(2) ad hominem   对人不对事<br />转而攻击人而不是争议之中的问题<br />除非这个的性格和诚实水平足够成为有效议题</p><p>​(3) bandwagon 从众效应<br />如果某项是受欢迎的，那么它一定是最好的、正确的等等</p><p>​(4) slippery slope 滑坡谬误<br />只有走错了一步就不可避免的延续下去</p><p><strong>4.Appealing to emotions（pathos)</strong></p><h1 id="u15-speaking-on-special-occasions"><a class="markdownIt-Anchor" href="#u15-speaking-on-special-occasions"></a> U15 Speaking on Special Occasions</h1><ul><li><p>Speeches of Introducation 引见致词</p><p>A speech of introduction is an address that introduces the main speaker to the auience.</p></li><li><blockquote><p>Tips:</p><ul><li>Be brief: 2-3minutes</li><li>Make sure your remakrs are completely accurate</li><li>Adapt your remarks to the occasion</li><li>Adapt your remarks to the main speaker</li><li>Adpat your remarks to the Audience</li></ul></blockquote></li><li><p>Speeches of Acceptance 获奖致词</p><p>A speech to give thanks for a gift or an award. When giving such a speech, you thank the people who are bestowing the award recognize the people who helped you gain it.</p><p>致谢:为礼物或奖品而致谢的演说在做这样的演讲时，你要感谢颁奖的人，感谢帮助你获奖的人。</p></li><li><p>Speeches of Toast 祝酒词</p><p>A speech of saying a fews words of greeting, celebartion, or thanks in conjunction with  a meal or reception.</p><p>祝词:在宴会或招待会上说几句问候、庆祝或感谢的话</p></li><li><blockquote><p>Some toasts are very brief:</p><ul><li>– a few sentences of welcome</li><li>​     – wishes for good health</li><li>​     – Joyful marriage</li><li>​     – a prosperous career</li></ul></blockquote></li><li><p>Commemorative Speeches 纪念性演讲</p><ul><li><p>Commemorative speeches are speeches of praise or celebration.</p></li><li><p>Your aim is to pay tribute to a person, a group of people, an institution, or an idea.</p></li><li><p>Your fundamental purpose is to inspire the audience:</p><p>​     to arouse and heighten their appreciation of or admiration for the person, institution, or idea.</p><p>纪念演讲是赞美或庆祝的演讲。</p><p>你的目标是向一个人、一群人、一个机构或一个想法致敬。</p><p>你的根本目的是激励听众:激发并提高他们对这个人、机构或想法的欣赏或钦佩</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;u1-speaking-in-public&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#u1-speaking-in-public&quot;&gt;&lt;/a&gt; U1 Speaking in Public&lt;/h1&gt;
&lt;figure class=&quot;hig</summary>
      
    
    
    
    <category term="CET" scheme="https://zhang0224gz.github.io/categories/CET/"/>
    
    
  </entry>
  
  <entry>
    <title>报错集合</title>
    <link href="https://zhang0224gz.github.io/2022/05/28/%E6%8A%A5%E9%94%99%E9%9B%86%E5%90%88/"/>
    <id>https://zhang0224gz.github.io/2022/05/28/%E6%8A%A5%E9%94%99%E9%9B%86%E5%90%88/</id>
    <published>2022-05-28T01:32:21.423Z</published>
    <updated>2022-05-31T10:16:53.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="报错1yarn-create-umi-myapp"><a class="markdownIt-Anchor" href="#报错1yarn-create-umi-myapp"></a> 报错1：yarn create umi myapp</h1><blockquote><p>@typescript-eslint/parser@5.26.0: The engine “node” is incompatible with this module. Expected version “^12.22.0 || ^14.17.0 || &gt;=16.0.0”. Got “12.14.0”<br />error Found incompatible module.<br />info Visit <a href="https://yarnpkg.com/en/docs/cli/create">https://yarnpkg.com/en/docs/cli/create</a> for documentation about this command.</p></blockquote><p>@typescript-eslint/parser@5.26.0:引擎“Node”与此模块不兼容。预期的版本”^ 12.22.0 | | ^ 14.17.0 | | &gt; = 16.0.0”。有“12.14.0”<br />错误发现不兼容的模块<br />\info访问https://yarnpkg.com/en/docs/cli/create获取该命令的相关文档。</p><p>解决办法 : 命令行执行即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn config set ignore-engines true</span><br></pre></td></tr></table></figure><p>重新install项目包，发现还有问题。</p><p>删除node_modules包和<a href="https://so.csdn.net/so/search?q=yarn&amp;spm=1001.2101.3001.7020">yarn</a>.lock文件，重新yarn install。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">//安装</span><br><span class="line">npm install -g yarn </span><br><span class="line">//查看版本</span><br><span class="line">yarn -v  </span><br><span class="line">// 初始化</span><br><span class="line">yarn init </span><br><span class="line">// 添加包</span><br><span class="line">yarn add [package]</span><br><span class="line">yarn add [package]@[version]</span><br><span class="line">yarn add [package]@[tag]</span><br><span class="line">// 添加到不同依赖项</span><br><span class="line">yarn add [package] --dev</span><br><span class="line">yarn add [package] --peer</span><br><span class="line">yarn add [package] --optional</span><br><span class="line">// 升级包</span><br><span class="line">yarn upgrade [package]</span><br><span class="line">// 移除依赖包</span><br><span class="line">yarn remove [package]</span><br><span class="line">// 安装所有依赖</span><br><span class="line">yarn 或 yarn install</span><br></pre></td></tr></table></figure><h1 id="报错2stylelint"><a class="markdownIt-Anchor" href="#报错2stylelint"></a> 报错2：Stylelint</h1><p>node.js基于 Chrome V8 引擎的 Javascript 运行环境<br /><code>此处说明下：新版的Node.js已自带npm，安装Node.js时会一起安装，npm的作用就是对Node.js依赖的包进行管理，也可以理解为用来安装/卸载Node.js需要装的东西</code><br />Stylelint是一个强大的，现代的代码检查工具，与ESLint类似，Stylelint能够通过定义一系列的编码风格规则帮助我们避免在样式表中出现错误。<br /><code>npm</code> is two things: first and foremost, it is an online repository for the publishing of open-source Node.js projects; second, it is a command-line utility for interacting with said repository that aids in package installation, version management, and dependency management. A plethora of Node.js libraries and applications are published on npm, and many more are added every day. These applications can be searched for on <a href="https://www.npmjs.com/">https://www.npmjs.com/</a>. Once you have a package you want to install, it can be installed with a single command-line command.</p><blockquote><p>Stylelint:Please specify path to ‘stylelint’ package correctly<br />Stylelint:请正确指定’ styelint '包的路径</p></blockquote><p>错误原因：这是因为没有在dos窗口下载stylelint导致的，下载了就行了</p><blockquote><p>Stylelint: no configuration provided for D:\workspace…<br />Stylelint:没有为D:\工作区提供配置…</p></blockquote><p>错误原因：node.js下载后需要在工程中添加相关配置文件；一般我们写web不需要使用到stylelint哈……我打开的那个工程有这些pycharm默认打开了……<br />解决办法：直接取消勾选Enable就行</p><h2 id="pycharm中使用stylelintnodejs全局环境重新配置"><a class="markdownIt-Anchor" href="#pycharm中使用stylelintnodejs全局环境重新配置"></a> pycharm中使用stylelint/nodejs全局环境重新配置</h2><p>第一步：首先得安装 node.js<br />官网下载安装。</p><ul><li>​配置依赖的环境变量</li></ul><p>npm config list 获取npm配置信息</p><blockquote><p>说明：这里的环境配置主要配置的是npm安装的全局模块所在的路径，以及缓存cache的路径，之所以要配置，是因为以后在执行类似：npm install express [-g] （后面的可选参数-g，g代表global全局安装的意思）的安装语句时，会将安装的模块安装到【C:\Users\用户名\AppData\Roaming\npm】路径中，占C盘空间。<br />例如：我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹【D:\Develop\nodejs】下创建两个文件夹【node_global】及【node_cache】如下图：</p></blockquote><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174129730-1728082988.png" alt="img" /></p><p>创建完两个空文件夹之后，打开cmd命令窗口，输入</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> <span class="keyword">prefix</span> <span class="string">&quot;D:\Develop<span class="subst">\n</span>odejs<span class="subst">\n</span>ode_global&quot;</span></span><br><span class="line">npm config <span class="keyword">set</span> cache <span class="string">&quot;D:\Develop<span class="subst">\n</span>odejs<span class="subst">\n</span>ode_cache&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174155924-729432114.png" alt="img" /></p><p>接下来设置环境变量，关闭cmd窗口，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量”</p><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174211646-2129655843.png" alt="img" /></p><p>进入环境变量对话框，在【系统变量】下新建【NODE_PATH】，输入【D:\my app\nodejs\node_global\node_modules】，将【用户变量】下的【Path】修改为【D:\Develop\nodejs\node_global】</p><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174226230-50949781.png" alt="img" /></p><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174233751-1796080030.png" alt="img" /></p><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174241271-459236568.png" alt="img" /></p><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174247318-1561517594.png" alt="img" /></p><p>配置完后，安装个module测试下，我们就安装最常用的express模块，打开cmd窗口，</p><blockquote><p>express模块是 <strong>JavaScript 库或文件</strong>，可以用 Node 的 require () 函数将它们导入其它代码。 Express 本身就是一个模块，Express 应用中使用的中间件和数据库也是。 下面的代码以 Express 框架为例展示了如何通过名字来导入模块。</p></blockquote><blockquote><p>全局安装</p><p>命令：npm install express -g</p><p>-g代表安装到nodejs安装目录下的lib里面，而-d代表把相依性套件也一起安装。</p><p>2、本地安装</p><p>命令：npm install express</p><p>本地安装是安装在当前文件目录下，安装完成后，可以看到当前文件目录下多了一个“node_modules”文件夹，它里面有一个“express”文件夹</p></blockquote><p>输入如下命令进行模块的全局安装：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> express -g     <span class="comment"># -g是全局安装的意思</span></span><br></pre></td></tr></table></figure><p><img src="https://images2018.cnblogs.com/blog/1212358/201806/1212358-20180627174314650-2106403391.png" alt="img" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220531170337590.png" alt="image-20220531170337590" /></p><p>上面ok之后 我们安装淘宝的cnpm镜像，因为国外的很慢。我们可以采用cnpm install 来代替npm安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>npm默认的仓库地址是在国外网站，速度较慢，建议大家设置到淘宝镜像。但是切换镜像是比较麻烦的。推荐一款切换镜像的工具：nrm</p><p>我们首先安装nrm，这里<code>-g</code>代表全局安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install nrm -g</span><br></pre></td></tr></table></figure><p>然后通过<code>nrm ls</code>命令查看npm的仓库列表,带*的就是当前选中的镜像仓库：</p><p><img src="https://img2018.cnblogs.com/blog/1212358/201810/1212358-20181005220220325-400897019.png" alt="img" /></p><p>通过<code>nrm use taobao</code>来指定要使用的镜像源：</p><p><img src="https://img2018.cnblogs.com/blog/1212358/201810/1212358-20181005220231973-218721473.png" alt="img" /></p><p>然后通过<code>nrm test npm</code>来测试速度：</p><p><img src="https://img2018.cnblogs.com/blog/1212358/201810/1212358-20181005220242021-1510968611.png" alt="img" /></p><p>注意：</p><ul><li>有教程推荐大家使用cnpm命令，但是使用发现cnpm有时会有bug，不推荐。</li><li>安装完成请一定要重启下电脑！！！</li><li>安装完成请一定要重启下电脑！！！</li><li>安装完成请一定要重启下电脑！！！</li></ul><p>ps: 也可以不配置，配置主要是为了下面第二步寻找安装stylelint依赖的路径文件夹用。默认在 C:\Users\用户名\AppData\Roaming\npm 文件夹中。<br />设置好后，我的依赖包都安装在 node_modules 这个文件夹内：</p><p><code>D:\work\nodejs\npm-global\node_modules</code></p><p>第二步： 全局安装 stylelint<br />cmd 中输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g stylelint                     # 安装stylelint包</span><br><span class="line">npm install -g stylelint-config-standard     # 安装标准配置文件</span><br></pre></td></tr></table></figure><p>下面是安装stylelint依赖的路径：</p><p>​<code>D:\work\nodejs\npm-global\node_modules\stylelint</code><br />第三步：设置pycharm</p><p><img src="https://img-blog.csdnimg.cn/20201210183435212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE0NjI5Ng==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" /></p><p>第四步：在项目中新建一个名为<code>.stylelintrc.json</code> 的文件<br />在文件中写入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;extends&quot;:&quot;stylelint-config-standard&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转载链接地址：<a href="https://blog.csdn.net/weixin_42146296/article/details/110958641">(8条消息) pycharm中使用stylelint_寻寻觅觅oO的博客-CSDN博客</a></p><p><a href="https://www.cnblogs.com/coder-lzh/p/9232192.html">nodeJS安装和环境变量的配置 - 发疯的man - 博客园 (cnblogs.com)</a></p><p>pycharm文档说明：<a href="https://www.jetbrains.com/help/pycharm/using-stylelint-code-quality-tool.html#ws_stylelint_lint_your_code">Stylelint | PyCharm (jetbrains.com)</a></p><h1 id="报错3json-standard-does-not-allow-such-tokens"><a class="markdownIt-Anchor" href="#报错3json-standard-does-not-allow-such-tokens"></a> 报错3：JSON standard does not allow such tokens</h1><ul><li>JSON标准不允许这样的标记</li></ul><h1 id="报错4npm安装报错"><a class="markdownIt-Anchor" href="#报错4npm安装报错"></a> 报错4：npm安装报错</h1><p>（npm ERR! code EPERM npm ERR! syscall mkdir npm ERR! path C:\Program Files\nodejs\node_ca…）</p><p>使用npm 安装vue的时候突然报错了：</p><p><img src="https://img-blog.csdnimg.cn/c66cefc7b3a5408780fdedbe10e0d1b8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzgwMTU1,size_16,color_FFFFFF,t_70" alt="请添加图片描述" /></p><p>错误详解<br />该错误发生在修改npm的全局安装路径之后，再执行npm install 包 -g或是npm install 包时发生，但是在管理员身份下运行cmd，均能执行成功。</p><p>2.1 修改npm全局安装：<br />命令行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\my app\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\my app\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure><p>在C盘User/用户名/下有一个<code>.npmrc</code>的文件<br />将上述node_global文件夹的路径加入环境变量<br />2.2 导致该安装问题的原因<br />没有管理员权限，无法在node_global和node_cache两个文件夹下进行一些必要的操作</p><p>2.3 解决方法：<br />1.删除.npmrc文件<br />该文件在：C:\Users{账户}\下的.npmrc文件，<br />一般这种类型的都是默认被隐藏，一定要选择将隐藏取消掉</p><p><img src="https://img-blog.csdnimg.cn/c727a6a4565341798887a666039e9c9e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQyNzgwMTU1,size_16,color_FFFFFF,t_70" alt="请添加图片描述" /></p><p>删掉即可。</p><p>2.或者直接用命令清理就行，控制台输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure><ol start="3"><li>删除用户下的.npmrc文件，即不改变全局安装的路径（不够好，本质问题仍没有解决，全局还是会安装在C盘）<br />每次都用管理员身份运行命令行（不够方便，vscode 下的命令行默认也不是管理员身份运行的）<br />直接修改node_global和node_cache文件夹的权限：<br />右键文件夹，打开属性，切换到安全选项卡</li></ol><p><img src="https://img-blog.csdnimg.cn/fb448b998e5a41de96b10af6fb3fae63.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAWmloX0Fu,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述" /></p><p>选择编辑，将没有打钩的位置全部打上钩（即将其它用户的权限设置为与管理员相同），应用即可。</p><h1 id="npm-warn-using-force-recommended-protections-disabled"><a class="markdownIt-Anchor" href="#npm-warn-using-force-recommended-protections-disabled"></a> npm WARN using --force Recommended protections disabled.</h1><p>npm WARN using——force建议的保护被禁用。  警告，使用 <code>--force</code> 将禁用推荐的保护</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;报错1yarn-create-umi-myapp&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#报错1yarn-create-umi-myapp&quot;&gt;&lt;/a&gt; 报错1：yarn create umi myapp&lt;/h1&gt;
&lt;blockqu</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JavaScript</title>
    <link href="https://zhang0224gz.github.io/2022/05/08/%E7%AC%94%E8%AE%B0/Web/web3/"/>
    <id>https://zhang0224gz.github.io/2022/05/08/%E7%AC%94%E8%AE%B0/Web/web3/</id>
    <published>2022-05-08T05:35:05.080Z</published>
    <updated>2022-10-02T06:04:10.445Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1初级"><a class="markdownIt-Anchor" href="#1初级"></a> 1.初级</h1><h2 id="11-js的使用方法"><a class="markdownIt-Anchor" href="#11-js的使用方法"></a> 1.1 JS的使用方法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//第一种：写在head标签里</span><br><span class="line">//不推荐头部使用：根据代码运行是自上而下解释的特性，会先解析head标签里JS，然后才解析元素，故需要监听</span><br><span class="line">//需添加 window.onload</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        alert(<span class="number">123</span>);<span class="comment">// 弹出框，默认设置不可修改</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//第二种：写在body结束标签上面</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    alert(123);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//第三种：外部导入JS文件</span><br><span class="line">//写在body结束标签上面的内容</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;demo.js&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//注意：在引入js文件的script里面，一定不能写js代码</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//可以另起一行，按照法二在标签内写js代码</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">//写在.js文件中的内容</span><br><span class="line">alert(123);</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;demo.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="number">123</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 在前端控制台console打印出123</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-js获取元素的方法"><a class="markdownIt-Anchor" href="#12-js获取元素的方法"></a> 1.2 JS获取元素的方法</h2><p>在js中想要操作元素，或者说执行一些行为，首先需要获取到对应的元素。才能进行下一步的操作，所以要首先学会如何获取元素</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//JS获取独有标签</span><br><span class="line">document.title获取标题</span><br><span class="line">document.head获取头部信息</span><br><span class="line">document.body获取body内容</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//其他标签的获取</span><br><span class="line">通过id获取元素：document.getElementById(&quot;idname&quot;); </span><br><span class="line">通过class获取元素：document.getElementsByClassName(&quot;classname&quot;);</span><br><span class="line">通过标签名获取元素：document.getElementsByTagName(&quot;tagdem&quot;); </span><br><span class="line">表单中的name：document.getElementsByName(&quot;name&quot;);</span><br><span class="line">selector选择器(不兼容IE7及以下):</span><br><span class="line">document.querySelector (&quot;&quot;); 通过CSS选择器获取一个</span><br><span class="line">document.querySelectorAll(&quot;&quot;); 通过CSS选择器获取所有</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS获取元素的方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        #p1&#123;&#125;</span><br><span class="line">        .p2&#123;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>我是段落标签1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>我是段落标签2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">name</span>=<span class="string">&quot;p3&quot;</span>&gt;</span>我是段落标签3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//1.通过id获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p1&quot;</span>)</span></span><br><span class="line"><span class="javascript">    <span class="comment">//var/let 定义一个变量，通过变量接收获取的元素（注意：变量名不能使用关键字和变量名）</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//2.通过class获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//当不唯一的时候，需要使用下标，下表从0开始</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//法一：下标在document.getElementsByClassName(&quot;p2&quot;)后面</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;p2&quot;</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//法二：下标在oP后面</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;p2&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP[<span class="number">1</span>]);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//3.通过标签名获取元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;p&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP[<span class="number">2</span>]);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//4.表单中的name</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementsByName(<span class="string">&quot;p3&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">// name属性值不是唯一的 类数组</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP[<span class="number">0</span>]);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//5.selector选择器</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//法一：通过选择器获取单个</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.querySelector(<span class="string">&quot;#p1&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.p2&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP[<span class="number">0</span>]);<span class="comment">//下标使用失败：只能获取选择器选择的第一个元素，谁在最前面就获取谁，加下标没有用</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//法二：通过选择器获取多个</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;.p2&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP[<span class="number">1</span>]);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">     <span class="comment">//只有id和获取单个选择器不需要加下标，其他都要加下标才显示一个否则是一个集合</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 不支持伪类和伪元素选择器</span></span></span><br><span class="line"><span class="javascript">   <span class="comment">// “=”是赋值的意思，通常要用赋值的形式</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//获取嵌套元素</span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span> <span class="attr">CLASS</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>我是段落标签4</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>111111<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"> </span></span><br><span class="line"><span class="javascript"><span class="comment">//id 只能使用document.getElementById(&quot;p1&quot;)获取元素,其他可以更换开头（document，id），但不能是集合（嵌套元素）</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//获取嵌套在p标签中的span标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p1&quot;</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">//获取元素，只要保证它是一个确定的标签即可，例：</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP1 = oP.getElementsByTagName(<span class="string">&quot;span&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(oP1[<span class="number">0</span>]);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="13-js的基本事件"><a class="markdownIt-Anchor" href="#13-js的基本事件"></a> 1.3 JS的基本事件</h2><p>事件含义：所谓事件，是指JavaScript捕获到用户的操作，并做出正确的响应</p><p>使用：在事件函数里而，有一个关键字this，代表当前发事件的这个元素。事件通过函数完成，在函数内部书写自己想要实现的效果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//鼠标事件</span><br><span class="line">左键单击 onclick</span><br><span class="line">左键双击 ondblclick</span><br><span class="line">鼠标移入 onmouseover/onmouseenter</span><br><span class="line">鼠标移出 onmouseout/onmouseleave</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS基本事件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;p1&quot;</span> <span class="attr">CLASS</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>我是段落标签1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>我是段落标签2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">name</span>=<span class="string">&quot;p3&quot;</span>&gt;</span>我是段落标签3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    111</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP = <span class="built_in">document</span>.getElementById(<span class="string">&quot;p1&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//鼠标单击事件</span></span></span><br><span class="line"><span class="javascript">    oP.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// oP.innerText = &quot;&lt;h1&gt;我不是段落标签1&lt;/h1&gt;&quot;;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//可以带标签进行渲染这个标签,上面只显示文本不会渲染</span></span></span><br><span class="line"><span class="javascript">        oP.innerHTML = <span class="string">&#x27;&lt;h1&gt;我不是段落标签1&lt;/h1&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//鼠标（连续）双击事件</span></span></span><br><span class="line"><span class="javascript">    oP.ondblclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">         oP.innerHTML = <span class="string">&#x27;&lt;h1&gt;我不是段落标签1&lt;/h1&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//鼠标滑入滑出事件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oP1 = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;div&quot;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">    oP1.onmouseenter = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        oP1.innerText = <span class="string">&quot;byebye&quot;</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    oP1.onmouseleave = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript">    </span>&#123;</span></span><br><span class="line"><span class="javascript">        oP1.innerText = <span class="string">&quot;hello&quot;</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//在修改别的标签时，得使用innerHTML(会解析标签),innerText(不会解析标签)</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="14-js修改样式"><a class="markdownIt-Anchor" href="#14-js修改样式"></a> 1.4 JS修改样式</h2><p>js可以修改规范和不规范的标签的样式，也可以配合点击事件等一起使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.style.height 单个样式修改</span><br><span class="line">.style.cssText 多个样式修改</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS修改样式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#3A87CD</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    111</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> obox = <span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//元素获取值 var obox = document.querySelector(&quot;div&quot;).value;</span></span></span><br><span class="line"><span class="javascript">    obox.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript">    </span>&#123;</span></span><br><span class="line"><span class="javascript">        obox.style.width = <span class="string">&quot;100px&quot;</span>;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//.是不能.一个变量可以使用 obox.style[&quot;width&quot;]=&quot;20px&quot;</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//style[] 可以是一个变量也可以是一个字符串</span></span></span><br><span class="line"><span class="javascript">        obox.style.height = <span class="string">&quot;100px&quot;</span>;</span></span><br><span class="line"><span class="javascript">        obox.style.background = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="javascript">        </span></span><br><span class="line"><span class="javascript">        <span class="comment">//可以使用cssText修改多个</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//obox.style.csstext = &quot;width: 100px; height: 100px;&quot;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//一般情况下不这么做(JS和CSS混合在一起)，因为一般css很多</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//Question: 如何将JS和CSS分开呢？</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="15-js操作标签属性"><a class="markdownIt-Anchor" href="#15-js操作标签属性"></a> 1.5 JS操作标签属性</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">规范的标签属性： . 符号直接操作(可读可写)</span><br><span class="line"> .id  修改id</span><br><span class="line"> .className  修改class</span><br><span class="line">不规范(自定义)的标签属性：</span><br><span class="line">获取： .getAttribute()</span><br><span class="line">设置： .setAttribute()  (增/添)</span><br><span class="line">移除： .removeAttribute()  (删)</span><br><span class="line">判断： .hasAttribute()</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS操作标签属性<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#3A87CD</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--对于页面当中这些属性是可读并且可写的操作--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 标签属性的可写（可赋值、修改值）可读（可以打印出来）-&gt; .操作</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> obox = <span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(obox.id); <span class="comment">//undefined</span></span></span><br><span class="line"><span class="javascript">    obox.id = <span class="string">&quot;box1&quot;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(obox.id); <span class="comment">//box1</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//添加一个class属性，并且class的属性值为box1</span></span></span><br><span class="line"><span class="javascript">    obox.className = <span class="string">&quot;box2&quot;</span>;<span class="comment">//增：有则增，无则改</span></span></span><br><span class="line"><span class="javascript">    obox.className = <span class="string">&quot;box3&quot;</span>;<span class="comment">//不是再加一个，是修改操作</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//className只操作合法属性</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//合法属性：非自定义，页面标签原本已有的属性名</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(obox.className);<span class="comment">//查</span></span></span><br><span class="line"><span class="javascript">    obox.removeAttribute(<span class="string">&quot;class&quot;</span>);<span class="comment">//删</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//自定义属性的增删改查</span></span></span><br><span class="line"><span class="javascript">    obox.setAttribute(<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;abc1&quot;</span>);<span class="comment">//增</span></span></span><br><span class="line"><span class="javascript">    obox.setAttribute(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;abc1&quot;</span>);</span></span><br><span class="line"><span class="javascript">    obox.setAttribute(<span class="string">&quot;abc&quot;</span>,<span class="string">&quot;abc2&quot;</span>);<span class="comment">//改：无则增，有则改</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(obox.hasAttribute(<span class="string">&quot;class&quot;</span>));<span class="comment">//查：存在true不存在false</span></span></span><br><span class="line"><span class="javascript">    obox.removeAttribute(<span class="string">&quot;class&quot;</span>);<span class="comment">//删</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//合法属性也可以通过自定义属性方式添加</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-js与css分离"><a class="markdownIt-Anchor" href="#16-js与css分离"></a> 1.6  JS与CSS分离</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS与CSS分离<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#3A87CD</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> obox = <span class="built_in">document</span>.querySelector(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="javascript">    obox.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript">    </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//增/改选择器的两种方法</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// obox.className = &quot;box1&quot;;</span></span></span><br><span class="line"><span class="javascript">        obox.setAttribute(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;box1&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="17-js的基本数据类型"><a class="markdownIt-Anchor" href="#17-js的基本数据类型"></a> 1.7 JS的基本数据类型</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">number 数字</span><br><span class="line">string 字符串</span><br><span class="line">boolean 布尔型</span><br><span class="line">undefined 未定义</span><br><span class="line">null 空（对象）</span><br><span class="line">object 对象</span><br><span class="line">前五个是简单数据类型，最后一个是复杂数据类型</span><br><span class="line"></span><br><span class="line">typeof x 显示数据类型</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS基本数据类型<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//这些类型都是关键字</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//number 数字</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> a = <span class="number">123</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> a);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//string 字符串</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> b = <span class="string">&quot;123&quot;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> b);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//boolean 布尔型</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> c = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> c);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//undefined 未定义</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> d;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> d);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//null 空（对象）-&gt; 是属于六大基本数据类型之一，只是在显示的时候将其归为object显示</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> e = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> e);</span></span><br><span class="line"><span class="javascript">    <span class="comment">//object 对象 （数组（列表），函数 -&gt;复杂数据类型）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> f = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="keyword">typeof</span> f);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="2提升"><a class="markdownIt-Anchor" href="#2提升"></a> 2.提升</h1><h2 id="21-js运算符"><a class="markdownIt-Anchor" href="#21-js运算符"></a> 2.1 JS运算符</h2><p>算术运算符</p><ul><li>算术运算符(基础数字运算) <strong>+   -   *   /   %</strong></li><li>当不是数字之间的运算的时候，+号两边一旦有字符串(引号引起的部分)，那么+号就不再是数学运算了，而是拼接，最终结果是字符串。</li><li>-/*% 尽量将字符串转换成数字（隐式类型转换)</li><li>NaN: Not a Number number</li></ul><p>赋值运算符</p><ul><li><em><em>+=  -=  <em>=  /=  =</em></em> 这些是基本的赋值运算符，除此之外还有</em>*++ --**,这两个都存在隐式类型转换，会全部转成数字。</li></ul><p>逻辑运算符</p><ul><li>JS中的逻辑运算用：<strong>&amp;&amp;、||、!</strong> 来表示。</li><li>&amp;&amp; 和 || 不会进行类型转换，！则会进行类型转换，将后面的数据先转换为布尔型在取反</li></ul><p>比较运算符</p><ul><li><strong>&lt;   !=   &gt;=   &lt;=   ==   ===</strong></li><li>如果等号两边是boolean、string、number三者中任意两者进行比较时，优先转换为数字进行比较。</li><li>如果等号两边出现了null或undefined,null和undefined除了和自己相等，就彼此相等</li><li>NaN==NaN 返回false，NaN和所有值包括自己都不相等。</li></ul><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS运算符<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//算术运算符</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="number">1</span> + <span class="string">&#x27;2&#x27;</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//&#x27;12&#x27; +为字符拼接</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="number">1</span> - <span class="string">&#x27;2&#x27;</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//-1 隐式转换为number型(- % * /)</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="number">1</span> + <span class="literal">true</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//2 true=1,false=0</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="number">1</span> + <span class="literal">null</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//1 null=0</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="number">1</span> + <span class="literal">undefined</span> + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//NAN: not a Number number</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//赋值运算符</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> a = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> b = <span class="literal">null</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(a++ +<span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//1</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(a +<span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//2</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(++a +<span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//3</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(++b +<span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//隐式转换 null-&gt;number = 0</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//比较运算符</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write((<span class="string">&#x27;2&#x27;</span> == <span class="number">2</span>) + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//true ==在JS中是等于但为不全等（只判断值是否相等，不判断类型）</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write((<span class="string">&#x27;2&#x27;</span> === <span class="number">2</span>) + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//false === 全等，先去判断类型是否一致再去判断值是否相等</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//逻辑运算符</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write((<span class="number">2</span>&gt;<span class="number">3</span>&amp;&amp;<span class="number">2</span>&lt;<span class="number">5</span>) + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//false &amp;&amp;与</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write((<span class="number">2</span>&gt;<span class="number">3</span>||<span class="number">2</span>&lt;<span class="number">5</span>) + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//true ||或</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(!(<span class="number">2</span>&gt;<span class="number">3</span>&amp;&amp;<span class="number">2</span>&lt;<span class="number">5</span>) + <span class="string">&quot;&lt;br/&gt;&quot;</span>);<span class="comment">//true !非</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//隐式转换：-/*% ++ -- (其他类型转number), ！(转为布尔型取反)</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="22-js流程控制"><a class="markdownIt-Anchor" href="#22-js流程控制"></a> 2.2 JS流程控制</h2><p>JS中流程控制是if判断和switch选择</p><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS流程控制<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//if判断</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> food = <span class="string">&quot;山竹&quot;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span>(food == <span class="string">&quot;dinner&quot;</span>)</span></span><br><span class="line"><span class="javascript">    &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">&quot;真饱！&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span> <span class="keyword">if</span>(food == <span class="string">&quot;山竹&quot;</span>)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">&quot;我吃了，但没吃饱！&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">&quot;好饿！&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//简化写法</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> a = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    a&gt;<span class="number">1</span>?<span class="built_in">console</span>.log(a+<span class="number">1</span>):<span class="built_in">console</span>.log(a+<span class="number">3</span>);<span class="comment">//表达式?为真的值:为假的值;</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//switch选择</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> day = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">switch</span>(day)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">1</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;今天星期一&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;<span class="comment">//如果不加break;会一直运行到有break的地方，或default结束</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">2</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;今天星期二&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">3</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;今天星期三&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">4</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;今天星期四&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">5</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;今天星期五&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">6</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;今天星期六&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="number">7</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;今天星期日&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> sex = <span class="string">&quot;girl&quot;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">switch</span>(sex)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="string">&quot;girl&quot;</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;她是女孩。&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">case</span> <span class="string">&quot;boy&quot;</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;他是男孩。&quot;</span>);</span></span><br><span class="line"><span class="javascript">            <span class="keyword">break</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">default</span>:</span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.write(<span class="string">&quot;写错啦！&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//break 关键字</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="23-js循环"><a class="markdownIt-Anchor" href="#23-js循环"></a> 2.3 JS循环</h2><p>for循环</p><ul><li><p><code>for(initialize; test; increment)&#123; statment &#125;</code></p></li><li><p>JS中的for循环相当于while的简写，更加方便</p></li></ul><p>while循环</p><ul><li><code>while (expression)&#123; statement &#125;</code></li><li>while是一个基本的循环语句，expression为真的时候，就会执行循环体</li></ul><p>do…while循环</p><ul><li>do…while和while类似，只是会先执行一个循环</li></ul><p>for in语句</p><ul><li>JS中的for也支持类似于python中的用法，可以遍历对象所有的属性。</li></ul><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS循环<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//for循环（先判断再执行）</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//声明循环变量，判断循环条件，更新循环变量</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">&quot;我是&quot;</span> + i + <span class="string">&quot;号&lt;br/&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span></span><br><span class="line"><span class="javascript">    &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(i==<span class="number">6</span>)&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">continue</span>;<span class="comment">//跳出本次循环，继续下次循环</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(<span class="string">&quot;我是&quot;</span> + i + <span class="string">&quot;号&lt;br/&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//while循环（先判断再执行）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">while</span>(i&lt;=<span class="number">5</span>)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(i + <span class="string">&quot;&lt;br/&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">        i++;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//do...while循环（先执行再判断）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">do</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(i + <span class="string">&quot;&lt;br/&gt;&quot;</span>);</span></span><br><span class="line"><span class="javascript">        i++;</span></span><br><span class="line"><span class="javascript">    &#125;<span class="keyword">while</span>(i&lt;<span class="number">1</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//for in 语句</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> array = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];<span class="comment">//数组即Python中的列表</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> array)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.write(i + <span class="string">&quot; &quot;</span>,array[i] + <span class="string">&quot;&lt;br/&gt;&quot;</span>)<span class="comment">//i接收的对应元素的下标</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="24-js字符串方法"><a class="markdownIt-Anchor" href="#24-js字符串方法"></a> 2.4 JS字符串方法</h2><p><strong>length 长度；slice 切片；substring 截取</strong></p><p>indexOf 索引；split 分割；replace 替换</p><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS字符串方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> str = <span class="string">&quot;hello world!&quot;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//str[0] = &#x27;a&#x27;; //同样字符串不可更改</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str.length);<span class="comment">//长度</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str.slice(<span class="number">1</span>, <span class="number">4</span>));<span class="comment">//切片，从下标1切到下标4 [1,4)</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(str.substring(<span class="number">1</span>, <span class="number">4</span>));<span class="comment">//截取，从下标1切到下标4 [1,4)</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//切片不会自动比较参数的大小，截取会比较参数的大小，都是左闭右开</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//str.slice(4, 1)/str.substring(4, 1)</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Object</span>.key(str));<span class="comment">//查看对象的方法</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="25-数组方法"><a class="markdownIt-Anchor" href="#25-数组方法"></a> 2.5 数组方法</h2><p><strong>length 长度</strong>；push 追加；unshift 添加</p><p>pop,shift 删除；indexOf 查找</p><p><strong>改：slice 切片, join 拼接, sort 正向排序, reverse  反向无排序</strong></p><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>数组方法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> array = [<span class="string">&quot;橘子&quot;</span>,<span class="string">&quot;苹果&quot;</span>,<span class="string">&quot;香蕉&quot;</span>,<span class="string">&quot;栗子&quot;</span>];</span></span><br><span class="line"><span class="javascript">    array[<span class="number">1</span>] = <span class="string">&quot;葡萄&quot;</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(array.length);<span class="comment">//长度</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(array.slice(<span class="number">1</span>, <span class="number">3</span>));<span class="comment">//切片，左闭右开</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;d&#x27;</span>];</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(arr.reverse());<span class="comment">//反向，无排序</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// console.log(arr.sort());//正向排序</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(array.join(<span class="string">&#x27;-&#x27;</span>));<span class="comment">//拼接</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="26-js循环练习"><a class="markdownIt-Anchor" href="#26-js循环练习"></a> 2.6 JS循环练习</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>111<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>222<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>333<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>444<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oli = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;ul li&quot;</span>);<span class="comment">//获取元素 4个li</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// console.log(oli);</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//从Nodelist类数组中取出4个li元素</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;oli.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">        oli[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;<span class="comment">//点击对应的元素弹出对应的文本内容</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//alert(this.innerText);//获取元素自身的文本内容</span></span></span><br><span class="line"><span class="javascript">            </span></span><br><span class="line"><span class="javascript">            alert(i);<span class="comment">//获取下标但全都变成4 -&gt; 作用域问题</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//JS里面for循环是没有块级作用域概念，即局部作用域/局部变量</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//因为没有此概念，因此它是一个全局变量的i</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//全局变量的i，当循环的时候for循环执行到另外一个事件的时候，循环里面正常</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 获取i的值，当循环进到事件里面之后此地方的i是for循环第一个不符合条件的值4</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>解决alert(i);的办法:</p><ul><li>解决办法1： var定义的全局变量i 换成局部变量 let</li><li>解决办法2：利用index_num存储下标值</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oli = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;ul li&quot;</span>);<span class="comment">//获取元素 4个li</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//解决办法1： var定义的全局变量i 换成局部变量 let</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span>; i&lt;oli.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">        oli[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;<span class="comment">//点击对应的元素弹出对应的文本内容</span></span></span><br><span class="line"><span class="javascript">            alert(i);<span class="comment">//获取下标</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> oli = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;ul li&quot;</span>);<span class="comment">//获取元素 4个li</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;oli.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 解决办法2：利用index_num存储下标值</span></span></span><br><span class="line"><span class="javascript">        oli[i].index_num = i;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        oli[i].onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;<span class="comment">//点击对应的元素弹出对应的文本内容</span></span></span><br><span class="line"><span class="javascript">            alert(<span class="built_in">this</span>.index_num);<span class="comment">//读取的是循环里面提前存的0,1,2,3，不是事件存的 </span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125; </span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3进阶"><a class="markdownIt-Anchor" href="#3进阶"></a> 3.进阶</h1><h2 id="31-js的内置对象"><a class="markdownIt-Anchor" href="#31-js的内置对象"></a> 3.1 JS的内置对象</h2><p>JS内部已经内置了不少对象，类似于Python中的内置模块，可以直接使用，并且对象一般不需要导入，可以直接使用。</p><ul><li>Math对象是一个处理数学相关的对象，可以用来执行在数学相关的内容</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Math.<span class="built_in">sqrt</span>(<span class="number">4</span>)<span class="comment">//开方</span></span><br><span class="line">   Math.<span class="built_in">abs</span>(<span class="number">-7</span>)<span class="comment">//绝对值</span></span><br><span class="line">   Math.PI<span class="comment">//π</span></span><br><span class="line">   Math.<span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">2</span>)<span class="comment">//幂运算 x^y</span></span><br><span class="line">   Math.round(<span class="number">3.6</span>)<span class="comment">//取整 4 四舍五入</span></span><br><span class="line">   Math.<span class="built_in">ceil</span>(<span class="number">3.4</span>)<span class="comment">//向上取整 4</span></span><br><span class="line">   Math.<span class="built_in">floor</span>(<span class="number">3.6</span>)<span class="comment">//向下取整 3</span></span><br><span class="line">   Math.max(<span class="number">3</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">9</span>)<span class="comment">//求最大值</span></span><br><span class="line">   Math.min(<span class="number">2</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>)<span class="comment">//求最小值</span></span><br><span class="line">   Math.random()<span class="comment">//随机数：默认[0-1]</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义随机数范围</span></span><br><span class="line">console.<span class="built_in">log</span>(Math.random());<span class="comment">//随机数：默认[0-1]</span></span><br><span class="line">    console.<span class="built_in">log</span>(Math.random()*<span class="number">100</span>);<span class="comment">//[0,100]</span></span><br><span class="line">    console.<span class="built_in">log</span>(Math.round(Math.random()*<span class="number">100</span>));<span class="comment">//取[0,100]整数</span></span><br></pre></td></tr></table></figure><ul><li>日期对象也是常用对象之一，基本和常用的方法都是需要了解和熟悉</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个日期对象</span></span><br><span class="line">   var today = <span class="keyword">new</span> Date();<span class="comment">//本机电脑的时间，不是网络时间</span></span><br><span class="line"></span><br><span class="line">   var year = today.getFullYear();<span class="comment">//获取年</span></span><br><span class="line">   var month = today.getMonth();<span class="comment">//获取月：国外月份从零开始</span></span><br><span class="line">   var date = today.getDate();<span class="comment">//获取日</span></span><br><span class="line">   var day = today.getDay();<span class="comment">//获取星期</span></span><br><span class="line">   var hour = today.getHours();<span class="comment">//获取小时</span></span><br><span class="line">   var min = today.getMinutes();<span class="comment">//获取分钟</span></span><br><span class="line">   var sec = today.getSeconds();<span class="comment">//获取秒</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">//变量合并</span></span><br><span class="line">   document.write(<span class="string">&quot;现在是北京时间：&quot;</span>+year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+date+<span class="string">&quot;日&quot;</span>+hour+<span class="string">&quot;:&quot;</span>+min+<span class="string">&quot;:&quot;</span>+sec+<span class="string">&quot;&lt;br/&gt;&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//时间戳 </span></span><br><span class="line"><span class="comment">//从1970年到现在时间的总秒数，相当于生活中的密码锁</span></span><br><span class="line"><span class="comment">//当你生成一个新的区块的时候，这个时间戳会按照时间的顺序去反复生成一个对应的数据化的密码。</span></span><br><span class="line"><span class="comment">//如果有黑客想要攻击网站或软件时候，不仅仅需要获取对应这个区块的系统资料还需要破解每一个时间戳所生成的记录</span></span><br><span class="line"><span class="comment">//时间戳用来记录数据的一些关键的时间点，保障数据的一些安全性</span></span><br><span class="line"><span class="comment">//时间戳：1000ms = 1s</span></span><br><span class="line"></span><br><span class="line">var timestan = Date.now();<span class="comment">//获取时间戳</span></span><br><span class="line">document.write(timestan);<span class="comment">//ms为单位</span></span><br><span class="line">    <span class="comment">//可以网上进行转换</span></span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS的内置对象<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//数学对象</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.sqrt(<span class="number">4</span>));<span class="comment">//开方</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(-<span class="number">7</span>));<span class="comment">//绝对值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.PI);<span class="comment">//π</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.pow(<span class="number">2</span>, <span class="number">2</span>));<span class="comment">//幂运算 x^y</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="number">3.6</span>));<span class="comment">//取整 4 四舍五入</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.ceil(<span class="number">3.4</span>));<span class="comment">//向上取整 4</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.floor(<span class="number">3.6</span>));<span class="comment">//向下取整 3</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.max(<span class="number">3</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">9</span>));<span class="comment">//求最大值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.min(<span class="number">2</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>));<span class="comment">//求最小值</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random());<span class="comment">//随机数：默认[0-1]</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.random()*<span class="number">100</span>);<span class="comment">//[0,100]</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">100</span>));<span class="comment">//取[0,100]整数</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//日期对象</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//定义一个日期对象</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>();<span class="comment">//本机电脑的时间，不是网络时间</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(today);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> year = today.getFullYear();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(year);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> month = today.getMonth();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(month);<span class="comment">//国外月份从零开始</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> month = today.getMonth()+<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(month);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> day = today.getDay();<span class="comment">//获取星期</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(day);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> date = today.getDate();<span class="comment">//获取日</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(date);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> hour = today.getHours();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(hour);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> min = today.getMinutes();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(min);</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> sec = today.getSeconds();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(sec);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//变量合并</span></span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(<span class="string">&quot;现在是北京时间：&quot;</span>+year+<span class="string">&quot;年&quot;</span>+month+<span class="string">&quot;月&quot;</span>+date+<span class="string">&quot;日&quot;</span>+hour+<span class="string">&quot;:&quot;</span>+min+<span class="string">&quot;:&quot;</span>+sec+<span class="string">&quot;&lt;br/&gt;&quot;</span>)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//时间戳 从1970年到现在时间的总秒数，相当于生活中的密码锁</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//当你生成一个新的区块的时候，这个时间戳会按照时间的顺序去反复生成一个对应的数据化的密码。</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//如果有黑客想要攻击网站或软件时候，不仅仅需要获取对应这个区块的系统资料还需要破解每一个时间戳所生成的记录</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//时间戳用来记录数据的一些关键的时间点，保障数据的一些安全性</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//时间戳：1000ms = 1s</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> timestan = <span class="built_in">Date</span>.now();</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.write(timestan);<span class="comment">//ms为单位</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//可以网上进行转换</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="32-js的window对象"><a class="markdownIt-Anchor" href="#32-js的window对象"></a> 3.2 JS的Window对象</h2><p>Window对象是所有客户端JS特性和API的主要接入点。它表示Web浏览器的一个窗口或窗体，并且可以用标识符window来引用它。</p><p>Window对象定义了一些属性和方法，比如：<strong>alert()方法、非常重要的document属性</strong>等</p><p><strong>计时器</strong>就是Window中的一个方法，可以用来实现计时的一些操作。</p><ul><li>定时器的使用</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建定时器</span></span><br><span class="line"><span class="comment">//setTimeout在指定的时间后仅执行一次</span></span><br><span class="line">setTimeout(function ()&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="number">123</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>);<span class="comment">//毫秒为单位</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//setInterval以指定时间为周期循环执行</span></span><br><span class="line">    setInterval(function ()&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="number">321</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清除定时器</span></span><br><span class="line">    <span class="comment">//先通过一个变量接收</span></span><br><span class="line">    var timer1 = setTimeout(function ()&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="number">123</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">    clearTimeout(timer1);</span><br><span class="line">    </span><br><span class="line">    var timer2 = setInterval(function ()&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="number">321</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">    clearInterval(timer2);</span><br></pre></td></tr></table></figure><p>定时器可以实现定时操作，并且通过window对象来实现跳转操作</p><ul><li>windows的使用</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打开一个新窗口</span></span><br><span class="line">var w = window.open();<span class="comment">//创建一个空白窗口</span></span><br><span class="line">var w = window.open(<span class="string">&quot;demo.html&quot;</span>,<span class="string">&quot;haha&quot;</span>,<span class="string">&quot;width=300,height=200&quot;</span>);<span class="comment">//第三个参数非标准，html5规范也主张浏览器忽略它</span></span><br><span class="line"></span><br><span class="line">w.alert(<span class="string">&quot;hello!&quot;</span>);<span class="comment">//弹出框</span></span><br><span class="line">w.location = <span class="string">&quot;https://www.bilibili.com/&quot;</span>;<span class="comment">//跳转新页面的传统方式</span></span><br><span class="line">w.close();<span class="comment">//关闭窗口</span></span><br></pre></td></tr></table></figure><h2 id="33-js的函数"><a class="markdownIt-Anchor" href="#33-js的函数"></a> 3.3 JS的函数</h2><p>JS 的函数包裹在花括号当中，使用关键词function来定义。函数可以挂载在一个对象上，作为一个对象的属性，称为对象的方法。</p><ul><li>JS函数特性：在JS中，函数即对象，程序可以随意操控它们。比如，JS可以把函数赋值给变量，或者作为参数传递给其他的函数，甚至可以设置属性，调用它们的方法。</li></ul><h3 id="js有名函数和匿名函数"><a class="markdownIt-Anchor" href="#js有名函数和匿名函数"></a> JS有名函数和匿名函数</h3><ul><li><p>有名函数：有名字的函数，使用时是：函数名加上括号执行，充当时间函数执行</p></li><li><p>匿名函数：没有名字的函数，匿名函数不能单独出现，一般充当事件函数，比如点击事件调用的函数</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有名函数</span></span><br><span class="line">   <span class="function">function <span class="title">func</span><span class="params">()</span></span>&#123;</span><br><span class="line">       console.<span class="built_in">log</span>(<span class="number">1</span>);<span class="comment">//打印一个1</span></span><br><span class="line">   &#125;</span><br><span class="line">   func();<span class="comment">//函数调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//匿名函数</span></span><br><span class="line">   document.onclick = function ()&#123;</span><br><span class="line">       console.<span class="built_in">log</span>(<span class="number">2</span>);<span class="comment">//事件触发调用</span></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="函数的参数传参"><a class="markdownIt-Anchor" href="#函数的参数传参"></a> 函数的参数/传参</h3><ul><li>形参，实参，不定参数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//x为形参（形式参数），3为实参（实际参数）</span></span><br><span class="line"><span class="function">function <span class="title">func</span><span class="params">(x)</span></span>&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    func(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="function">function <span class="title">sum</span><span class="params">(x,y)</span></span>&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(x + y);</span><br><span class="line">    &#125;</span><br><span class="line">    sum(<span class="number">1</span>,<span class="number">7</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不定参数（不定长参数）</span></span><br><span class="line"><span class="function">function <span class="title">add</span><span class="params">(x,y)</span></span>&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(x, y);</span><br><span class="line">        console.<span class="built_in">log</span>(arguments);<span class="comment">//不定长参数:统一获取，有多少拿多少</span></span><br><span class="line">    &#125;</span><br><span class="line">    add(<span class="number">1</span>);</span><br><span class="line">    add(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">    add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line">    <span class="comment">//add(1); 1 undefined</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取不定长参数arguments中的值</span></span><br><span class="line">    <span class="function">function <span class="title">add1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// console.log(arguments);</span></span><br><span class="line">        <span class="keyword">for</span>(var i=<span class="number">0</span>; i&lt;arguments.length;i++) &#123;</span><br><span class="line">            console.<span class="built_in">log</span>(arguments[i]);<span class="comment">//数组值</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(var i in arguments)&#123;</span><br><span class="line">            document.write(i);<span class="comment">//索引值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    add1(<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>);</span><br></pre></td></tr></table></figure><h3 id="函数的分类"><a class="markdownIt-Anchor" href="#函数的分类"></a> 函数的分类</h3><ul><li>功能性函数，返回性函数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//功能性函数</span></span><br><span class="line">    <span class="comment">//无返回值，得到的结果为undefined</span></span><br><span class="line">    <span class="comment">// alert(1);</span></span><br><span class="line">    var a = alert(<span class="number">1</span>);<span class="comment">//定义一个变量无值传入</span></span><br><span class="line">    console.<span class="built_in">log</span>(a);<span class="comment">//undefined</span></span><br><span class="line">    var b = console.<span class="built_in">log</span>(<span class="number">2</span>);</span><br><span class="line">    console.<span class="built_in">log</span>(b);</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回性函数</span></span><br><span class="line">    <span class="comment">//有返回值，所以会返回结果</span></span><br><span class="line">    var oBox = document.querySelector(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">    console.<span class="built_in">log</span>(oBox);<span class="comment">//&lt;div&gt;&lt;/div&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义一个函数</span></span><br><span class="line">    <span class="function">function <span class="title">func1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    var a = func1();<span class="comment">//8</span></span><br><span class="line">    console.<span class="built_in">log</span>(a);<span class="comment">//undefined</span></span><br><span class="line">    <span class="function">function <span class="title">func2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我返回了&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    var a = func2();<span class="comment">//1</span></span><br><span class="line">    console.<span class="built_in">log</span>(a);<span class="comment">//我返回了</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//return返回后的函数不会执行</span></span><br><span class="line">    <span class="function">function <span class="title">func3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        console.<span class="built_in">log</span>(<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;我返回了&quot;</span>;</span><br><span class="line">         console.<span class="built_in">log</span>(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    var a = func3();<span class="comment">//7</span></span><br><span class="line">    console.<span class="built_in">log</span>(a);<span class="comment">//我返回了</span></span><br></pre></td></tr></table></figure><h3 id="函数的作用域"><a class="markdownIt-Anchor" href="#函数的作用域"></a> 函数的作用域</h3><ul><li>全局作用域，函数作用域，块级作用域</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在函数内部不使用var声明的变量都会成为全局变量</span></span><br><span class="line"><span class="comment">//在函数内部使用var声明的变量是局部变量</span></span><br><span class="line"></span><br><span class="line">var a = <span class="number">100</span>;</span><br><span class="line"><span class="function">function <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    var a = <span class="number">200</span>;</span><br><span class="line">    alert(a);</span><br><span class="line">&#125;</span><br><span class="line">alert(a);<span class="comment">//100</span></span><br><span class="line">func();<span class="comment">//200</span></span><br><span class="line">alert(a);<span class="comment">//100</span></span><br><span class="line"></span><br><span class="line">var a = <span class="number">100</span>;</span><br><span class="line"><span class="function">function <span class="title">func</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// var a = 200;</span></span><br><span class="line">    a = <span class="number">200</span>;</span><br><span class="line">    alert(a);</span><br><span class="line">&#125;</span><br><span class="line">alert(a);<span class="comment">//100</span></span><br><span class="line">func();<span class="comment">//200</span></span><br><span class="line">alert(a);<span class="comment">//200</span></span><br><span class="line"></span><br><span class="line">var a = <span class="number">100</span>;</span><br><span class="line"><span class="function">function <span class="title">func1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    var a = <span class="number">200</span>;</span><br><span class="line">    <span class="function">function <span class="title">func2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        var a = <span class="number">300</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    func2();</span><br><span class="line">    alert(a);</span><br><span class="line">&#125;</span><br><span class="line">alert(a);<span class="comment">//100</span></span><br><span class="line">func1();<span class="comment">//200</span></span><br><span class="line">alert(a);<span class="comment">//100</span></span><br><span class="line"></span><br><span class="line">var a = <span class="number">100</span>;</span><br><span class="line"><span class="function">function <span class="title">func1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    var a = <span class="number">200</span>;</span><br><span class="line">    <span class="function">function <span class="title">func2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        a = <span class="number">300</span>;</span><br><span class="line">        <span class="comment">//子作用域只能改变父作用域的值，不能向上改变</span></span><br><span class="line">    &#125;</span><br><span class="line">    func2();</span><br><span class="line">    alert(a);</span><br><span class="line">&#125;</span><br><span class="line">alert(a);<span class="comment">//100</span></span><br><span class="line">func1();<span class="comment">//300</span></span><br><span class="line">alert(a);<span class="comment">//100</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//推荐用let，块级作用域的变量</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        var i = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    console.<span class="built_in">log</span>(i);</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//块级作用域/局部作用域</span></span><br><span class="line">        <span class="comment">//只在花括号内部有效</span></span><br><span class="line">        let j = <span class="number">2</span>;</span><br><span class="line">        console.<span class="built_in">log</span>(j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// console.log(j);报错</span></span><br></pre></td></tr></table></figure><h3 id="自定义函数"><a class="markdownIt-Anchor" href="#自定义函数"></a> 自定义函数</h3><ul><li>~ + - ！()</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">~function ()&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;();</span><br><span class="line">  +function ()&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;();</span><br><span class="line">  -function ()&#123;</span><br><span class="line">      console.<span class="built_in">log</span>(<span class="number">1</span>);</span><br><span class="line">  &#125;();</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS函数<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> oBox = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;div&quot;</span>);</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        alert(<span class="number">1</span>);</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    oBox.onclick = func;<span class="comment">//当作点击事件时，不能加上括号</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="34-js异常"><a class="markdownIt-Anchor" href="#34-js异常"></a> 3.4 JS异常</h2><p>写代码会出现或多或少的错误，而出现错误就会终止代码的运行；能不能在可能出现错误的代码它不出现错误或执行自己写的错误<br />提供一些异常处理机制，具有一部分异常恢复能力</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="comment">//先执行这里，没有问题的话就会执行完成</span></span><br><span class="line">&#125;<span class="keyword">catch</span>(e)&#123;</span><br><span class="line">    <span class="comment">//如果输入不合法，将执行这里的逻辑</span></span><br><span class="line">    alert(e);<span class="comment">//告诉用户产生了什么错误</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;太胖了！&quot;</span>);<span class="comment">//或者自定义错误</span></span><br><span class="line">&#125;finally&#123;</span><br><span class="line">    <span class="comment">//不管是否抛出异常，都会执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>栗子：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>JS异常<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;func()&quot;</span>&gt;</span>点我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">//正确代码：</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     function func() &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//         var num = 123;</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//         alert(&quot;我是&quot;+num);</span></span></span><br><span class="line"><span class="javascript"><span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//var num = 123;</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;我是&quot;</span>+num);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">catch</span>(e)&#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;错误类型：&quot;</span>+e.name+<span class="string">&quot; 错误信息：&quot;</span>+e.message);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">finally</span> &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;我已经执行完毕&quot;</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">    </span></span><br><span class="line"><span class="javascript">    <span class="comment">//捕获异常</span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> num = <span class="number">123</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(num&lt;<span class="number">100</span>)<span class="keyword">throw</span> <span class="string">&quot;太小了&quot;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(num==<span class="number">100</span>)<span class="keyword">throw</span> <span class="string">&quot;刚昂好&quot;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span>(num&gt;<span class="number">100</span>)<span class="keyword">throw</span> <span class="string">&quot;太大了&quot;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//e接受throw里的信息</span></span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">catch</span>(e)&#123; </span></span><br><span class="line"><span class="javascript">            alert(e);</span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">finally</span> &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&quot;我已经执行完毕&quot;</span>);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4练习"><a class="markdownIt-Anchor" href="#4练习"></a> 4.练习</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1初级&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1初级&quot;&gt;&lt;/a&gt; 1.初级&lt;/h1&gt;
&lt;h2 id=&quot;11-js的使用方法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#11-js的使用方法&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Web" scheme="https://zhang0224gz.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>数据库第三章</title>
    <link href="https://zhang0224gz.github.io/2022/05/01/%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://zhang0224gz.github.io/2022/05/01/%E7%AC%94%E8%AE%B0/%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2022-05-01T11:34:02.458Z</published>
    <updated>2022-09-11T14:01:47.274Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">CREATE SCHEMA `school`</span><br><span class="line">DEFAULT CHARACTER SET utf8</span><br><span class="line">COLLATE utf8_bin;</span><br><span class="line"></span><br><span class="line">-- CREATE DATABASE `school`;</span><br><span class="line">-- Drop DATABASE `school`;</span><br><span class="line"></span><br><span class="line">use school;</span><br><span class="line">create table `student`(</span><br><span class="line">`sno` <span class="keyword">char</span>(<span class="number">10</span>) <span class="keyword">not</span> null primary key,</span><br><span class="line">    `sname` varchar(<span class="number">45</span>) <span class="keyword">not</span> null ,</span><br><span class="line">    `sage` <span class="keyword">int</span> null <span class="keyword">default</span> <span class="number">18</span>,</span><br><span class="line">    `sdept` varchar(<span class="number">45</span>)</span><br><span class="line">)COMMENT = <span class="string">&#x27;学生信息表&#x27;</span>;</span><br><span class="line">drop table student;</span><br><span class="line"></span><br><span class="line"><span class="function">create table <span class="title">course</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">cno <span class="keyword">char</span>(<span class="number">4</span>) <span class="keyword">not</span> null primary key,</span></span></span><br><span class="line"><span class="params"><span class="function">    cname varchar(<span class="number">45</span>) <span class="keyword">not</span> null,</span></span></span><br><span class="line"><span class="params"><span class="function">    -- 列级约束</span></span></span><br><span class="line"><span class="params"><span class="function">    cpno <span class="keyword">char</span>(<span class="number">4</span>) references cno,</span></span></span><br><span class="line"><span class="params"><span class="function">    credit tinyint</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line">-- drop table course;</span><br><span class="line"></span><br><span class="line"><span class="function">create table <span class="title">sc</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">sno <span class="keyword">char</span>(<span class="number">10</span>),</span></span></span><br><span class="line"><span class="params"><span class="function">    cno <span class="keyword">char</span>(<span class="number">4</span>),</span></span></span><br><span class="line"><span class="params"><span class="function">    score <span class="keyword">int</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    -- 表级约束</span></span></span><br><span class="line"><span class="params"><span class="function">    primary key (sno,cno),</span></span></span><br><span class="line"><span class="params"><span class="function">    -- 约束限制：constraint关键字</span></span></span><br><span class="line"><span class="params"><span class="function">    constraint `fk_sno` foreign key(sno) references student(sno),</span></span></span><br><span class="line"><span class="params"><span class="function">    foreign key(cno) references course(cno)</span></span></span><br><span class="line"><span class="params"><span class="function">-- 类型要一致，宽度要一致</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line">drop table sc;</span><br><span class="line"></span><br><span class="line">问题：Error Code: <span class="number">1822.</span> Failed to add the foreign key constraint. Missing index <span class="keyword">for</span> constraint <span class="string">&#x27;fk_sno&#x27;</span> in the referenced table <span class="string">&#x27;student&#x27;</span></span><br><span class="line"></span><br><span class="line">MySQL报这个错时去检查外键设置！！！这个外键是不是另外一个表的主键</span><br><span class="line">设置外键的时候需要注意以下几点：</span><br><span class="line">（<span class="number">1</span>）外键是用于两个表的数据之间建立连接，可以是一列或者多列，即一个表可以有一个或多个外键。</span><br><span class="line">（<span class="number">2</span>）这个表里面设置的外键必须是另外一个表的主键！</span><br><span class="line">（<span class="number">3</span>）外键可以不是这个表的主键，但必须和另外一个表的主键相对应（字段的类型和值必须一样）。</span><br><span class="line">（<span class="number">4</span>）带有主键的那张表称为父表，含外键的是子表，必须先删除外键约束才能删除父表。</span><br><span class="line"></span><br><span class="line">所以：school生成表时忘记给sno加主键了。经过搜索暂没有法子直接修改数据为主键，故删表重写QAQ</span><br><span class="line"></span><br><span class="line">刚刚了解constraint约束，发现一个加主键的法子</span><br><span class="line"><span class="function">alter table student add constraint pk primary <span class="title">key</span> <span class="params">(sno)</span></span>;</span><br><span class="line">格式为：</span><br><span class="line">alter table 表格名称 add constraint 约束名称 增加的约束类型 （列名）</span><br><span class="line">    constraint `fk_sno` <span class="function">foreign <span class="title">key</span><span class="params">(sno)</span> references <span class="title">student</span><span class="params">(sno)</span></span></span><br><span class="line"><span class="function">没有写名字系统会默认生成名字，如：sc_ibfk_1</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>，根据内容划分</span><br><span class="line"><span class="number">2.</span>根据作用域、作用范围划分</span><br><span class="line">域(列)完整性：</span><br><span class="line">域完整性是对数据表中字段属性的约束</span><br><span class="line">实体完整性在MySQL中实现：</span><br><span class="line">通过主键约束和候选键约束实现的</span><br><span class="line">参照完整性：</span><br><span class="line">也就是说是MySQL的外键</span><br><span class="line"><span class="number">3.</span>根据声明语句的书写形式、约束声明的位置划分</span><br><span class="line">列级约束</span><br><span class="line"><span class="function">name <span class="title">varchar</span><span class="params">(<span class="number">20</span>)</span> <span class="keyword">default</span> ‘老王’</span></span><br><span class="line"><span class="function">表级约束</span></span><br><span class="line"><span class="function">[constraint fk_name] foreign <span class="title">key</span><span class="params">(deptno)</span> references <span class="title">dept</span><span class="params">(deptno)</span> 所有的列都声明完了，再声明约束</span></span><br><span class="line"><span class="function">create table <span class="title">emp</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">empno <span class="keyword">int</span> promary key auto_increment,</span></span></span><br><span class="line"><span class="params"><span class="function">ename varchar(<span class="number">32</span>) <span class="keyword">not</span> null,</span></span></span><br><span class="line"><span class="params"><span class="function">deptno <span class="keyword">int</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">[constraint fk_name] foreign key(deptno) references dept(deptno) – 添加外键约束</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line">[]可选择内容，去掉</span><br><span class="line">id、name组合值不能重复，单一重复可通过</span><br><span class="line"><span class="function">constraint id_unique <span class="title">unique</span><span class="params">(id, name)</span> – 添加复合约束</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">练习代码：</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">USE school</span>;</span><br><span class="line"><span class="function">CREATE TABLE <span class="title">t1</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">#<span class="keyword">default</span>:默认约束, 域完整性;指定某列的默认值，插入数据时候，此列没有值，则用<span class="keyword">default</span>指定的值来填充</span></span></span><br><span class="line"><span class="params"><span class="function">id INT DEFAULT <span class="number">1</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">#,写; : id INT DEFAULT <span class="number">1</span>;</span></span></span><br><span class="line"><span class="params"><span class="function">#错误代码： <span class="number">1064</span></span></span></span><br><span class="line"><span class="params"><span class="function">#You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version <span class="keyword">for</span> the right syntax to use near <span class="string">&#x27;&#x27; at line 2</span></span></span></span><br><span class="line"><span class="string"><span class="params"><span class="function">#错误代码： 1064</span></span></span></span><br><span class="line"><span class="string"><span class="params"><span class="function">#You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span>name varchar(<span class="number">20</span>) <span class="keyword">default</span> <span class="string">&#x27;老王&#x27;</span>)</span>&#x27; at line 1</span></span><br><span class="line"><span class="function">NAME <span class="title">VARCHAR</span><span class="params">(<span class="number">20</span>)</span> DEFAULT &#x27;老王&#x27;</span></span><br><span class="line"><span class="function">)</span>;</span><br><span class="line"></span><br><span class="line">#插入操作</span><br><span class="line"><span class="function">INSERT INTO t1 <span class="title">VALUES</span> <span class="params">(<span class="string">&#x27;haha&#x27;</span>)</span></span>;#未要求要全部写入</span><br><span class="line">#错误代码： <span class="number">1136</span></span><br><span class="line">#Column count doesn<span class="number">&#x27;</span>t match value count at row <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function">INSERT INTO <span class="title">t1</span><span class="params">(id)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT <span class="title">t1</span><span class="params">(NAME)</span> <span class="title">VALUES</span> <span class="params">(<span class="string">&#x27;haha&#x27;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">#修改默认值</span><br><span class="line">ALTER TABLE t1 MODIFY id INT DEFAULT <span class="number">4</span>;</span><br><span class="line"><span class="function">ALTER TABLE t1 MODIFY NAME <span class="title">VARCHAR</span><span class="params">(<span class="number">20</span>)</span> DEFAULT &#x27;小白&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#删除默认值操作modify/change</span><br><span class="line">ALTER TABLE t1 MODIFY id INT;</span><br><span class="line"><span class="function">ALTER TABLE t1 CHANGE NAME NAME <span class="title">VARCHAR</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">#查询内容</span><br><span class="line">SELECT * FROM t1;</span><br><span class="line"></span><br><span class="line"><span class="function">CREATE TABLE <span class="title">t2</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">#<span class="keyword">not</span> null: 非空约束，域完整性;指定某列的值不为空，在插入数据的时候必须非空 ‘’ 不等于 null, <span class="number">0</span>不等于 null</span></span></span><br><span class="line"><span class="params"><span class="function">id INT NOT <span class="literal">NULL</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">NAME VARCHAR(<span class="number">20</span>) NOT <span class="literal">NULL</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br><span class="line">#插入操作</span><br><span class="line"><span class="function">INSERT <span class="title">t2</span><span class="params">(id)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">2</span>)</span></span>;</span><br><span class="line">#错误代码： <span class="number">1364</span></span><br><span class="line">#Field <span class="string">&#x27;name&#x27;</span> doesn<span class="number">&#x27;</span><span class="function">t have a <span class="keyword">default</span> value</span></span><br><span class="line"><span class="function">INSERT <span class="title">t2</span><span class="params">(NAME)</span> <span class="title">VALUES</span> <span class="params">(<span class="string">&#x27;小花&#x27;</span>)</span></span>;</span><br><span class="line">#错误代码： <span class="number">1364</span></span><br><span class="line">#Field <span class="string">&#x27;id&#x27;</span> doesn<span class="number">&#x27;</span><span class="function">t have a <span class="keyword">default</span> value</span></span><br><span class="line"><span class="function">INSERT t2 <span class="title">VALUES</span> <span class="params">(<span class="number">3</span>,<span class="string">&#x27;小华&#x27;</span>)</span>,<span class="params">(<span class="number">5</span>,<span class="string">&#x27;小黑&#x27;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">#添加<span class="keyword">not</span> null约束</span><br><span class="line">#<span class="number">1.</span>建表时</span><br><span class="line">#<span class="number">2.</span>alter语句添加:alter…modify/change…</span><br><span class="line">ALTER TABLE t2 MODIFY id INT NOT <span class="literal">NULL</span>;</span><br><span class="line"><span class="function">ALTER TABLE t2 MODIFY NAME <span class="title">VARCHAR</span><span class="params">(<span class="number">20</span>)</span> NOT <span class="literal">NULL</span></span>;</span><br><span class="line"></span><br><span class="line">#删除约束：alter…modify/change…</span><br><span class="line">ALTER TABLE t2 MODIFY id INT;</span><br><span class="line"><span class="function">ALTER TABLE t2 CHANGE NAME NAME <span class="title">VARCHAR</span><span class="params">(<span class="number">10</span>)</span></span>;<span class="meta">#alter完全修改内容</span></span><br><span class="line"></span><br><span class="line">SELECT * FROM t2;</span><br><span class="line"></span><br><span class="line"><span class="function">CREATE TABLE <span class="title">t3</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">#unique: 唯一约束，实体完整性；指定列或者列组合不能重复，保证数据的唯一性；不能出现重复的值，但是可以有多个null；同一张表可以有多个唯一的约束</span></span></span><br><span class="line"><span class="params"><span class="function">id INT UNIQUE,</span></span></span><br><span class="line"><span class="params"><span class="function">NAME VARCHAR(<span class="number">20</span>)</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br><span class="line">#插入操作</span><br><span class="line"><span class="function">INSERT <span class="title">t3</span><span class="params">(id)</span> <span class="title">VALUES</span> <span class="params">(<span class="number">2</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT <span class="title">t3</span><span class="params">(NAME)</span> <span class="title">VALUES</span> <span class="params">(<span class="string">&#x27;小花&#x27;</span>)</span></span>;</span><br><span class="line"><span class="function">INSERT t3 <span class="title">VALUES</span> <span class="params">(<span class="number">3</span>,<span class="string">&#x27;小华&#x27;</span>)</span>,<span class="params">(<span class="number">5</span>,<span class="string">&#x27;小黑&#x27;</span>)</span></span>;</span><br><span class="line">#内容重复输入</span><br><span class="line"><span class="function">INSERT t3 <span class="title">VALUES</span> <span class="params">(<span class="number">3</span>,<span class="string">&#x27;小华&#x27;</span>)</span>,<span class="params">(<span class="number">5</span>,<span class="string">&#x27;小黑&#x27;</span>)</span></span>;</span><br><span class="line">#错误代码： <span class="number">1062</span></span><br><span class="line">#Duplicate entry <span class="string">&#x27;3&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;t3.id&#x27;</span></span><br><span class="line"></span><br><span class="line">#添加约束</span><br><span class="line">ALTER TABLE t3</span><br><span class="line"></span><br><span class="line">#删除约束</span><br><span class="line">ALTER TABLE t3 DROP INDEX id_unique;</span><br><span class="line">DROP id ON t3;</span><br><span class="line"></span><br><span class="line">SELECT * FROM t3;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#SQL：结构化的查询语言</span><br><span class="line">#交互式SQL，嵌入式SQL</span><br><span class="line"><span class="meta">#select 目标表达式列表</span></span><br><span class="line"><span class="meta">#from 目标关系列表</span></span><br><span class="line"><span class="meta">#where 目标条件列表 -&gt; 条件子句</span></span><br><span class="line"><span class="meta">#order by 排序子句</span></span><br><span class="line"><span class="meta">#group by 分组子句</span></span><br><span class="line"></span><br><span class="line">#一、单表查询</span><br><span class="line">#一个<span class="keyword">for</span>语句遍历所有的行</span><br><span class="line">#数据库中第三种状态：除了真假，还有未知</span><br><span class="line">#目标列查询 *,col1,col2</span><br><span class="line">#目标表达式列表 重命名 数学表达式函数</span><br><span class="line"></span><br><span class="line">use school;</span><br><span class="line">select * from student;</span><br><span class="line">select sno,sname from student;</span><br><span class="line"></span><br><span class="line">#重命名</span><br><span class="line">select sno as <span class="string">&#x27;学号&#x27;</span>, sname as <span class="string">&#x27;姓名&#x27;</span> from student;</span><br><span class="line"><span class="meta">#as和单引号可省略，单引号使用防止字符有空格</span></span><br><span class="line">select sno 学号,sname as <span class="string">&#x27;姓  名&#x27;</span> from student;</span><br><span class="line"></span><br><span class="line">select <span class="number">2022</span>-sage <span class="string">&#x27;出生年份&#x27;</span> from student;</span><br><span class="line">#不加<span class="string">&#x27;出生年份&#x27;</span>以<span class="string">&#x27;2022-sage&#x27;</span>作为列名</span><br><span class="line">select <span class="number">2022</span>-sage  from student;</span><br><span class="line"></span><br><span class="line">select cno from course;</span><br><span class="line">#可跟函数</span><br><span class="line"><span class="function">select <span class="title">lower</span><span class="params">(cno)</span> from course</span>;</span><br><span class="line"><span class="function">select <span class="title">upper</span><span class="params">(cno)</span> from course</span>;</span><br><span class="line"></span><br><span class="line">#聚集函数/统计查询</span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(*)</span> from student</span>;</span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(*)</span> as &#x27;班级人数&#x27; from student</span>;</span><br><span class="line"></span><br><span class="line">#单条件查询where</span><br><span class="line">select sno,sname,ssex from student where ssex=<span class="string">&#x27;女&#x27;</span>;</span><br><span class="line">select sno,sname,ssex,sage from student where sage&lt;=<span class="number">30</span> <span class="keyword">and</span> ssex=<span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">select sno,sname,ssex,sage from student where sage&lt;=<span class="number">30</span> <span class="keyword">or</span> ssex=<span class="string">&#x27;男&#x27;</span>;#<span class="string">&#x27;男&#x27;</span>不要加空格,虽然有些软件可以自动去两边空格,仅侥幸</span><br><span class="line">select * from student where sdept=<span class="string">&#x27;计算机系&#x27;</span> <span class="keyword">or</span> sdept=<span class="string">&#x27;历史系&#x27;</span>;</span><br><span class="line">#减短查询：查询集合<span class="function">in</span></span><br><span class="line"><span class="function">select * from student where sdept <span class="title">in</span> <span class="params">(<span class="string">&#x27;计算机系&#x27;</span>,<span class="string">&#x27;音乐系&#x27;</span>,<span class="string">&#x27;历史系&#x27;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">select * from student where sage&gt;=<span class="number">23</span> <span class="keyword">and</span> sage&lt;<span class="number">25</span>;#[<span class="number">23</span>,<span class="number">25</span>)</span><br><span class="line">select * from student where <span class="keyword">not</span> sage&gt;=<span class="number">23</span> <span class="keyword">and</span> sage&lt;<span class="number">25</span>;</span><br><span class="line">select * from student where sage between <span class="number">23</span> <span class="keyword">and</span> <span class="number">25</span>;#并，闭区间[<span class="number">23</span>,<span class="number">25</span>]，多条件无法实现 </span><br><span class="line"></span><br><span class="line">#一个<span class="keyword">for</span>语句遍历所有的行，where为真<span class="literal">true</span>才被选中</span><br><span class="line">#数据库中第三种状态：除了真假，还有未知</span><br><span class="line">select * from course;</span><br><span class="line">select * from course where <span class="keyword">not</span> cpno=<span class="string">&#x27;C001&#x27;</span>; #为空未被选中</span><br><span class="line">select * from course where cpno!=<span class="string">&#x27;C001&#x27;</span>; </span><br><span class="line">select * from course where cpno=null;#无法比较……得到未知</span><br><span class="line">select * from course where cpno is null;</span><br><span class="line">select * from course where cpno is <span class="keyword">not</span> null;#方式一</span><br><span class="line"><span class="function">select * from course where <span class="title">not</span> <span class="params">(cpno is null)</span></span>;#方式二</span><br><span class="line"></span><br><span class="line">#只限制前三条查询：起始下标<span class="number">0</span>,偏移量<span class="number">3</span>（网页分页查询使用）</span><br><span class="line">select * from student where ssex=<span class="string">&#x27;男&#x27;</span> limit <span class="number">0</span>,<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">#所有的人按系科排序（默认：升序排序asc）-&gt; 字符集utf8 排序规则utf8_bin</span><br><span class="line">select * from student order by sdept desc;</span><br><span class="line">select * from student order by sdept desc, sage asc;#放最后执行</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">#单表查询的分组聚集查询</span><br><span class="line"><span class="meta">#select 目标表达式列表 from 目标关系列表 where 目标条件列表 group by 分组条件列表(方便计算) order by 排序列列表(排序所依赖的列，方便看，最后一个子句)</span></span><br><span class="line"></span><br><span class="line">select * from course where cpno=null;</span><br><span class="line"><span class="meta">#where子句只认后面结果是否为真，null不管在哪是不是空和任何数据得到结果都是不知道，无法比较 </span></span><br><span class="line">select * from course where cpno is null;</span><br><span class="line"><span class="function">select * from course where <span class="title">not</span><span class="params">(cpno is null)</span></span>;</span><br><span class="line"><span class="function">select <span class="title">lower</span><span class="params">(cno)</span>,cname from course</span>;</span><br><span class="line">select * from student order by sdept asc, sage desc;</span><br><span class="line"></span><br><span class="line">#<span class="number">1.</span>coubt(*)记得元祖的数目(整个行)，<span class="number">2.</span>某个分量里出现的个数(某一列)</span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(*)</span> from student</span>;</span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(*)</span> from student where ssex</span>=<span class="string">&#x27;男&#x27;</span>;</span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(ssex)</span> from student where ssex</span>=<span class="string">&#x27;女&#x27;</span>;#没去重，记了两次 -&gt; <span class="function">distinct</span></span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(distinct ssex)</span> from student where ssex</span>=<span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(distinct ssex)</span> from student</span>;</span><br><span class="line"></span><br><span class="line">select * from course order by cpno asc;</span><br><span class="line">#升序排列空值放最上面,可能作为最小值看待 </span><br><span class="line"></span><br><span class="line">#聚集查询/统计查询</span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(*)</span> as &#x27;人数&#x27;, <span class="title">max</span><span class="params">(sage)</span> as &#x27;最大年龄&#x27;, <span class="title">min</span><span class="params">(sage)</span> as &#x27;最小年龄&#x27;, <span class="title">sum</span><span class="params">(sage)</span>, <span class="title">avg</span><span class="params">(sage)</span> from student</span>;</span><br><span class="line">#正常，更多都是用在分组统计</span><br><span class="line">#空值统计是不在内的</span><br><span class="line"></span><br><span class="line">select cpno, count(*) from course group by cpno;</span><br><span class="line">#询问：空值怎办？是否有一个专有的分组？ 分组和排序,空值都算在内 (空值作为一个具体的值也参与分组,只是计数,但不能进行计算:求平均值...)</span><br><span class="line"></span><br><span class="line"><span class="function">select <span class="title">count</span><span class="params">(*)</span> as &#x27;人数&#x27;, <span class="title">max</span><span class="params">(sage)</span> as &#x27;最大年龄&#x27;, <span class="title">min</span><span class="params">(sage)</span> as &#x27;最小年龄&#x27;, <span class="title">sum</span><span class="params">(sage)</span>, <span class="title">avg</span><span class="params">(sage)</span> from student where ssex</span>=<span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">select sdept, count(*) as <span class="string">&#x27;人数&#x27;</span>, max(sage) as <span class="string">&#x27;最大年龄&#x27;</span>, min(sage) as <span class="string">&#x27;最小年龄&#x27;</span>, sum(sage), avg(sage) from student group by sdept;</span><br><span class="line">#对分组进行筛选</span><br><span class="line"><span class="meta">#where是对元祖进行筛选，having是对分组进行筛选（具体的值），无太大差别（having必须在group by后面用，可以使用聚集函数count(*)&gt;=2）</span></span><br><span class="line">select sdept, count(*) as <span class="string">&#x27;人数&#x27;</span>, max(sage) as <span class="string">&#x27;最大年龄&#x27;</span>, min(sage) as <span class="string">&#x27;最小年龄&#x27;</span>, sum(sage), avg(sage) <span class="function">from student group by sdept having <span class="title">count</span><span class="params">(*)</span>&gt;</span>=<span class="number">2</span>;</span><br><span class="line">select sdept,avg(sage) as <span class="string">&#x27;平均年龄&#x27;</span> from student where ssex=<span class="string">&#x27;男&#x27;</span> group by sdept having avg(sage)&gt;=<span class="number">22</span>;</span><br><span class="line">#可以使用别名进行筛选，<span class="string">&#x27;平均年龄&#x27;</span>&gt;=<span class="number">22</span>当成字符串和<span class="number">22</span>比较 -&gt; 平均年龄&gt;=<span class="number">22</span></span><br><span class="line">select sdept,avg(sage) as <span class="string">&#x27;平均年龄&#x27;</span> from student where ssex=<span class="string">&#x27;男&#x27;</span> group by sdept having 平均年龄&gt;=<span class="number">22</span>;</span><br><span class="line">#名字里含有空格加 ``(用于表名，列名)</span><br><span class="line">select sdept,avg(sage) as <span class="string">&#x27;平 均 年 龄&#x27;</span> from student where ssex=<span class="string">&#x27;男&#x27;</span> group by sdept having `平 均 年 龄`&gt;=<span class="number">22</span>;</span><br><span class="line"></span><br><span class="line">#单表查询的模糊查询 like</span><br><span class="line">select * from student where sname like <span class="string">&quot;刘%&quot;</span>; # %：<span class="number">0</span>个或多个字符 </span><br><span class="line">select * from course where cname like <span class="string">&#x27;%C语言%&#x27;</span>; #对大小写敏感Cc</span><br><span class="line">select * from student where sname like <span class="string">&#x27;诸葛_&#x27;</span>; #一个 _ 表示一个字符</span><br><span class="line">#内容就含有%和_:替代别人的功能卸载掉 \% 或 \_</span><br><span class="line">select * from course where cname like <span class="string">&#x27;\%C语言%&#x27;</span>;</span><br><span class="line">#若\也作为内容,使用\\表示内容,利用ESCAPE寻找其它字符赋予其\的功能</span><br><span class="line">select * from course where cname like <span class="string">&#x27;1%C语言%&#x27;</span> escape <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">#用的比较少好，一般用正则表达式</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">#多表查询</span><br><span class="line">#<span class="number">1.</span>连接查询</span><br><span class="line">#最简单链接：笛卡尔积(交叉连接)cross join</span><br><span class="line">#内连接inner join...on:一般连接，等值连接，自然连接(公共属性上的等值连接)nature join</span><br><span class="line">#外连接：左外连接left join...on，右外连接right join...on，全外连接full join</span><br><span class="line"></span><br><span class="line">#<span class="number">2.</span>嵌套查询:不相关子查询(干完就跑路)、相关子查询(交错互通，内层查询都要看一下外层查询，外层查询都要看一下内层查询)</span><br><span class="line">#不相关子查询(干完就跑路) in(…)</span><br><span class="line">#一个值 ‘=’；多个值 ‘in<span class="number">&#x27;</span>或<span class="string">&#x27;=ANY&#x27;</span></span><br><span class="line"><span class="meta">#sname<span class="meta-string">&lt;&gt;</span><span class="meta-string">&quot;刘备&quot;</span> : 不包括刘备</span></span><br><span class="line">#<span class="string">&quot;&gt; ALL&quot;</span> == &gt; max 大于所有的</span><br><span class="line">#<span class="string">&quot;&gt; ANY&quot;</span> == &gt;min 大于某一个 P92</span><br><span class="line"></span><br><span class="line">#<span class="number">3.</span>集合查询</span><br><span class="line">待续……</span><br><span class="line"></span><br><span class="line">use school;</span><br><span class="line">#单表查询 <span class="number">9&#x27;</span>：</span><br><span class="line">#简单查询、条件查询、空值查询(is null/is <span class="keyword">not</span> null)、</span><br><span class="line"><span class="meta">#between and、count(*) min(*)，目标表达式(列名、重名、运算、函数)、</span></span><br><span class="line">#分组查询(group by...having)、模糊查询(like，escape，<span class="string">&quot;\\&quot;</span>)、排序字句(order by...asc/desc)</span><br><span class="line"><span class="meta">#select 目标表达式列表 from 目标关系列表 where 目标条件列表(and,or,not分割) group by 分组列 order by 排序依据列+排序方式</span></span><br><span class="line"></span><br><span class="line">select * from sc;</span><br><span class="line">select sno from sc where cno=<span class="string">&quot;C003&quot;</span>;</span><br><span class="line">#找出选修C001也选修C003的同学学号</span><br><span class="line">select sno,cno from sc where cno=<span class="string">&quot;C001&quot;</span> <span class="keyword">and</span> cno=<span class="string">&quot;C003&quot;</span>;#错的</span><br><span class="line">(select sno,cno from sc where cno=<span class="string">&quot;C001&quot;</span>) <span class="class"><span class="keyword">union</span> (<span class="title">select</span> <span class="title">sno</span>,<span class="title">cno</span> <span class="title">from</span> <span class="title">sc</span> <span class="title">where</span> <span class="title">cno</span>=</span><span class="string">&quot;C003&quot;</span>);</span><br><span class="line">select sno from sc where cno=<span class="string">&quot;C001&quot;</span> <span class="keyword">and</span> </span><br><span class="line">sno in (select sno from sc where cno=<span class="string">&quot;C003&quot;</span>);</span><br><span class="line">select sc.sno,sname,sc.cno,cname,grade from student,course,sc where student.sno=sc.sno <span class="keyword">and</span> sc.cno=course.cno <span class="keyword">and</span> sc.cno=<span class="string">&quot;C003&quot;</span>;</span><br><span class="line"></span><br><span class="line">#多表查询</span><br><span class="line">#<span class="number">1.</span>连接查询</span><br><span class="line">select * from student,sc where student.sno=sc.sno;</span><br><span class="line">select sno,sname from student,sc where student.sno=sc.sno <span class="keyword">and</span> cno=<span class="string">&quot;C003&quot;</span>;#Error Code: <span class="number">1052.</span> Column <span class="string">&#x27;sno&#x27;</span> in field <span class="built_in">list</span> is ambiguous</span><br><span class="line">select student.sno,sname from student,sc where student.sno=sc.sno <span class="keyword">and</span> cno=<span class="string">&quot;C003&quot;</span>;</span><br><span class="line">select sc.sno,<span class="function">sname <span class="title">from</span> <span class="params">(student inner join sc on student.sno=sc.sno)</span> where cno</span>=<span class="string">&quot;C003&quot;</span>;</span><br><span class="line"></span><br><span class="line">#最简单链接：笛卡尔积(交叉连接)cross join</span><br><span class="line">select * from student,sc;</span><br><span class="line">select * from student cross join sc;</span><br><span class="line"></span><br><span class="line">#内连接inner join...on:一般连接，等值连接，自然连接(公共属性上的等值连接)nature join,</span><br><span class="line">select * from student inner join sc;</span><br><span class="line">select sc.sno,<span class="function">sname <span class="title">from</span> <span class="params">(student inner join sc on student.sno=sc.sno)</span> where cno</span>=<span class="string">&quot;C003&quot;</span>;</span><br><span class="line">select * from student natural join sc;#只剩一行sno</span><br><span class="line">select * from student natural join student;#Error Code: <span class="number">1066.</span> Not unique table/alias: <span class="string">&#x27;student&#x27;</span></span><br><span class="line">select * from student A natural join student B;#自己与自己自然连接，先相等再去掉一份</span><br><span class="line"></span><br><span class="line">#外连接：左外连接left join...on，右外连接right join...on，全外连接full join</span><br><span class="line">select * from student left join sc on student.sno=sc.sno;</span><br><span class="line">select * from sc right join student on student.sno=sc.sno;</span><br><span class="line">select * from student full join sc on student.sno=sc.sno;#Error Code: <span class="number">1054.</span> Unknown column <span class="string">&#x27;student.sno&#x27;</span> in <span class="string">&#x27;on clause&#x27;</span></span><br><span class="line">select * from student full join sc ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#<span class="number">2.</span>嵌套查询:不相关子查询(干完就跑路)、相关子查询(交错互通，内层查询都要看一下外层查询，外层查询都要看一下内层查询)</span><br><span class="line">#不相关子查询(干完就跑路)</span><br><span class="line">select sno,<span class="function">sname from student where</span></span><br><span class="line"><span class="function">sno <span class="title">in</span> <span class="params">(select cno from sc where cno=<span class="string">&quot;C003&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">select sname from student where sdept=(select sdept from student where sname=<span class="string">&quot;刘备&quot;</span>);#一个值 ‘=’；多个值 ‘in<span class="number">&#x27;</span>或<span class="string">&#x27;=ANY&#x27;</span></span><br><span class="line">select sname from student where sname&lt;&gt;<span class="string">&quot;刘备&quot;</span> <span class="keyword">and</span> sdept=(select sdept from student where sname=<span class="string">&quot;刘备&quot;</span>);<span class="meta">#sname<span class="meta-string">&lt;&gt;</span><span class="meta-string">&quot;刘备&quot;</span> 不包括刘备</span></span><br><span class="line">select * from student where sdept&lt;&gt;<span class="string">&quot;计算机系&quot;</span> <span class="keyword">and</span> sage&gt;ANY (select sage from student where sdept=<span class="string">&quot;计算机系&quot;</span>);</span><br><span class="line">#<span class="string">&quot;&gt; ALL&quot;</span> == &gt; max 大于所有的</span><br><span class="line">#<span class="string">&quot;&gt; ANY&quot;</span> == &gt;min 大于某一个 P92</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#<span class="number">3.</span>集合查询</span><br><span class="line">(select sno,cno from sc where cno=<span class="string">&quot;C001&quot;</span>) <span class="keyword">union</span> (select sno,cno from sc where cno=<span class="string">&quot;C003&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#SQL查询 select</span><br><span class="line">#一、单表查询</span><br><span class="line">#<span class="number">1.</span>目标查询 from</span><br><span class="line">#<span class="number">2.</span>条件查询 where</span><br><span class="line">#<span class="number">3.</span>分组查询 group by</span><br><span class="line">#<span class="number">4.</span>排序查询 order by</span><br><span class="line">#二、多表查询</span><br><span class="line">#<span class="number">1.</span>连接查询 cross join</span><br><span class="line">#<span class="number">2.</span>嵌套查询</span><br><span class="line">#（<span class="number">1</span>）不相关子查询</span><br><span class="line">#（<span class="number">2</span>）相关子查询 EXISTS</span><br><span class="line">#<span class="number">3.</span>集合查询 </span><br><span class="line"></span><br><span class="line">use school;</span><br><span class="line"></span><br><span class="line">select * from student;</span><br><span class="line">#连接查询</span><br><span class="line">select b.* from student a,student b where a.sname=<span class="string">&#x27;刘备&#x27;</span> <span class="keyword">and</span> b.sname&lt;&gt;<span class="string">&quot;刘备&quot;</span> <span class="keyword">and</span> a.sdept=b.sdept;</span><br><span class="line">select * from student a,student b where a.sname=<span class="string">&#x27;刘备&#x27;</span> <span class="keyword">and</span> b.sname&lt;&gt;<span class="string">&quot;刘备&quot;</span> <span class="keyword">and</span> a.sdept=b.sdept;</span><br><span class="line">#不相关子查询</span><br><span class="line">select sdept from student where sname=<span class="string">&quot;刘备&quot;</span>;</span><br><span class="line">select * from student where sname&lt;&gt;<span class="string">&quot;刘备&quot;</span> <span class="keyword">and</span> sdept=(select sdept from student where sname=<span class="string">&quot;刘备&quot;</span>);</span><br><span class="line">#相关子查询</span><br><span class="line">select * from student X where X.sname&lt;&gt;<span class="string">&quot;刘备&quot;</span> <span class="function"><span class="keyword">and</span> <span class="title">EXISTS</span><span class="params">(select * from student Y where Y.sname=<span class="string">&quot;刘备&quot;</span> <span class="keyword">and</span> Y.sdept=X.sdept)</span></span>;</span><br><span class="line"></span><br><span class="line">#EXISTS 存在谓词：只要有返回值就为真</span><br><span class="line">select * from sc where sno=<span class="string">&#x27;202006001&#x27;</span> <span class="keyword">and</span> cno=<span class="string">&#x27;C003&#x27;</span>;</span><br><span class="line"><span class="function">select sname from student where <span class="title">EXISTS</span> <span class="params">(select * from sc where sno=student.sno <span class="keyword">and</span> cno=<span class="string">&#x27;C003&#x27;</span>)</span></span>;<span class="meta">#m*n</span></span><br><span class="line">select sname from student,sc where student.sno=sc.sno <span class="keyword">and</span> cno=<span class="string">&#x27;C003&#x27;</span>;</span><br><span class="line"><span class="function">select sname from student where sno <span class="title">in</span> <span class="params">(select sno from sc where cno=<span class="string">&#x27;C003&#x27;</span>)</span></span>;<span class="meta">#m+n</span></span><br><span class="line"></span><br><span class="line">#最难最重要: 存在谓词表达全部和否定</span><br><span class="line">select sname from student,sc where student.sno=sc.sno <span class="keyword">and</span> cno&lt;&gt;<span class="string">&#x27;C003&#x27;</span>;#错误！！！</span><br><span class="line"><span class="function">select sname from student where sno <span class="keyword">not</span> <span class="title">in</span> <span class="params">(select sno from sc where cno=<span class="string">&#x27;C003&#x27;</span>)</span></span>;<span class="meta">#m+n</span></span><br><span class="line"></span><br><span class="line"><span class="function">select * from course where <span class="keyword">not</span> <span class="title">exists</span><span class="params">(select * from sc where sno=<span class="string">&#x27;202006001&#x27;</span> <span class="keyword">and</span> cno=course.cno)</span></span>;</span><br><span class="line"><span class="function">select * from course where <span class="title">exists</span><span class="params">(select * from sc where sno=<span class="string">&#x27;202006001&#x27;</span> <span class="keyword">and</span> cno=course.cno)</span></span>;</span><br><span class="line"></span><br><span class="line">#查询选修了全部课程的学生的信息 等价于 不存在一门课该学生没有选修</span><br><span class="line">select sno,<span class="function">sname from student where <span class="keyword">not</span> <span class="title">exists</span><span class="params">(select * from course where <span class="keyword">not</span> exists(select * from sc where student.sno=sc.sno <span class="keyword">and</span> sc.cno=course.cno))</span></span>;</span><br><span class="line">select sno,<span class="function">sname from student where <span class="keyword">not</span> <span class="title">exists</span><span class="params">(select * from course where cpno=<span class="string">&#x27;C003&#x27;</span> AND <span class="keyword">not</span> exists(select * from sc where student.sno=sc.sno <span class="keyword">and</span> sc.cno=course.cno))</span></span>;</span><br><span class="line">#查询选修了【<span class="number">202006001</span>选修的课】全部课程的学生信息 等价于 不存在这么一门课，刘备选了而你没有选</span><br><span class="line"><span class="function">select sno from sc A where <span class="keyword">not</span> <span class="title">exists</span><span class="params">(select * from sc B where B.sno=<span class="string">&#x27;202006001&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> exists(select * from sc C where B.cno=C.cno <span class="keyword">and</span> A.sno=C.sno))</span></span>;</span><br><span class="line"></span><br><span class="line">#查询选修了【<span class="number">202006001</span>选修的课】全部课程的学生信息 等价于 不存在这么一门课，刘备选了而你没有选(distinct去重）</span><br><span class="line">select distinct sno from sc A where <span class="keyword">not</span> exists(select * from sc B where B.sno=<span class="string">&#x27;202006001&#x27;</span> <span class="keyword">and</span> <span class="keyword">not</span> exists(select * from sc C where B.cno=C.cno <span class="keyword">and</span> A.sno=C.sno));</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br></pre></td><td class="code"><pre><span class="line">USE school;</span><br><span class="line"></span><br><span class="line">DELIMITER $$ </span><br><span class="line"><span class="function">CREATE  PROCEDURE  <span class="title">insert_student</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    p_sno  CHAR(<span class="number">10</span>),</span></span></span><br><span class="line"><span class="params"><span class="function">    p_sname  VARCHAR(<span class="number">50</span>),</span></span></span><br><span class="line"><span class="params"><span class="function">    p_sex  VARCHAR(<span class="number">1</span>),</span></span></span><br><span class="line"><span class="params"><span class="function">    p_age INT,</span></span></span><br><span class="line"><span class="params"><span class="function">    p_dept VARCHAR(<span class="number">20</span>)</span></span></span><br><span class="line"><span class="params"><span class="function"> )</span></span></span><br><span class="line"><span class="function">BEGIN</span></span><br><span class="line"><span class="function">   # 声明变量info，以表明插入是否成功。</span></span><br><span class="line"><span class="function">   DECLARE  info  <span class="title">VARCHAR</span><span class="params">(<span class="number">20</span>)</span>  DEFAULT  &#x27;插入成功&#x27;</span>; </span><br><span class="line">   # 异常处理</span><br><span class="line">   DECLARE  CONTINUE  HANDLER  FOR  <span class="number">1062</span>  SET  info=<span class="string">&#x27;插入失败，不能插入重复的数据&#x27;</span>; </span><br><span class="line">   <span class="function">INSERT  INTO  student  <span class="title">VALUES</span><span class="params">(p_sno,p_sname,p_sex,p_age,p_dept)</span></span>;</span><br><span class="line">   SELECT  info;</span><br><span class="line">END  $$   </span><br><span class="line">DELIMITER ;</span><br><span class="line"></span><br><span class="line">SET @sno=<span class="string">&#x27;202006012&#x27;</span>;</span><br><span class="line">SET @sname=<span class="string">&#x27;魏延&#x27;</span>;</span><br><span class="line">SET @ssex=<span class="string">&#x27;男&#x27;</span>;</span><br><span class="line">SET @sage=<span class="number">25</span>;</span><br><span class="line">SET @sdept=<span class="string">&#x27;计算机系&#x27;</span>;</span><br><span class="line"></span><br><span class="line">SET @sno=<span class="string">&#x27;202006012&#x27;</span>;</span><br><span class="line">SET @sname=<span class="string">&#x27;甄宓&#x27;</span>;</span><br><span class="line">SET @ssex=<span class="string">&#x27;女&#x27;</span>;</span><br><span class="line">SET @sage=<span class="number">32</span>;</span><br><span class="line">SET @sdept=<span class="string">&#x27;汉语言系&#x27;</span>;</span><br><span class="line"><span class="function">CALL <span class="title">insert_student</span><span class="params">(@sno,@sname,@ssex,@sage,@sdept)</span></span>;</span><br><span class="line">SELECT * FROM student;</span><br><span class="line"></span><br><span class="line">#系统变量，用户自定义变量，局部变量</span><br><span class="line">select @@version;</span><br><span class="line"></span><br><span class="line"><span class="meta">#delimiter双$符号的作用</span></span><br><span class="line">#插入一个相同学号的同学</span><br><span class="line">#插入一个超出字符限制的数据</span><br><span class="line">#区别和联系</span><br><span class="line">#存储过程使用call,可返回好多输出变量，作为一句话调用</span><br><span class="line">#函数不用call调用，写上就可以得到值，可以作为表达式一部分</span><br><span class="line">#触发器在满足特定条件下才能触发</span><br><span class="line">#游标</span><br><span class="line"></span><br><span class="line">#创建存储过程</span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc01</span><span class="params">()</span></span></span><br><span class="line"><span class="function">begin </span></span><br><span class="line"><span class="function">select sname,sage from student</span>;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">call proc01;</span><br><span class="line"></span><br><span class="line">#定义局部变量: 用户自定义，在begin/end块中有效</span><br><span class="line"><span class="meta">#declare var_name type [default var_value];</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc02</span><span class="params">()</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">declare tname <span class="title">varchar</span><span class="params">(<span class="number">20</span>)</span> <span class="keyword">default</span> &quot;student&#x27;s name&quot;</span>;</span><br><span class="line">    -- <span class="function">declare tname <span class="title">varchar</span><span class="params">(<span class="number">5</span>)</span> <span class="keyword">default</span> &quot;student&#x27;s name&quot;</span>;</span><br><span class="line">    <span class="built_in">set</span> tname = <span class="string">&#x27;Yangyang&#x27;</span>;</span><br><span class="line">    select tname;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="function">call <span class="title">proc02</span><span class="params">()</span></span>;</span><br><span class="line">#Error Code: <span class="number">1406.</span> Data too <span class="keyword">long</span> <span class="keyword">for</span> column <span class="string">&#x27;tname&#x27;</span> at row <span class="number">1</span></span><br><span class="line">drop procedure proc02;</span><br><span class="line"></span><br><span class="line">#用户变量：用户自定义，不需要提前声明，使用及声明；可在begin/end块外有效(外部也可以使用用户变量)</span><br><span class="line"># @var_name</span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc03</span><span class="params">()</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function"><span class="built_in">set</span> @tname </span>= <span class="string">&#x27;potato&#x27;</span>;</span><br><span class="line">    select @tname;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="function">call <span class="title">proc03</span><span class="params">()</span></span>;</span><br><span class="line">select @tname;</span><br><span class="line"></span><br><span class="line">#系统变量分为全局变量和会话变量</span><br><span class="line"># @@global.var_name</span><br><span class="line">#全局变量在MYSQL启动的时候由服务器自动将他的初始化为默认值</span><br><span class="line">#会话变量在每次建立一个新的连接的时候,由MYSQL来初始化,MYSQL会将当前所有全局变量的值复制一份,来作为会话变量</span><br><span class="line">#全局变量的修改会影响整个服务器,但是对会话变量的修改,只会影响到当前的会话(也就是当前的数据库连接)</span><br><span class="line">#可以更改的系统变量,我们可以利用<span class="built_in">set</span>语句进行更改</span><br><span class="line">show global variables;-- 查看全局变量</span><br><span class="line">select @@sort_buffer_size;-- 查看某全局变量</span><br><span class="line"><span class="built_in">set</span> @@sort_buffer_size = <span class="number">50000</span>;-- 修改全局变量的值</span><br><span class="line"><span class="built_in">set</span> global sort_buffer_size = <span class="number">100000</span>;</span><br><span class="line">select @@sort_buffer_size;</span><br><span class="line"></span><br><span class="line">#存储过程传参</span><br><span class="line"><span class="meta">#in表示传入的参数,可以传入数值或者变量,即使传入变量,并不会改变变量的值,可以内部更改,</span></span><br><span class="line">#仅仅作用在函数范围内</span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc04</span><span class="params">(in miniage <span class="keyword">int</span>,in maxage <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">select * from student where sage&gt;miniage <span class="keyword">and</span> sage&lt;maxage</span>;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">drop procedure proc04;</span><br><span class="line"><span class="function">call <span class="title">proc04</span><span class="params">(<span class="number">22</span>,<span class="number">30</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#out表示从存储过程内部传值给调用者</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc05</span><span class="params">(in in_sage <span class="keyword">int</span>, out out_sname varchar(<span class="number">45</span>))</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">select sname into out_sname from student where sage</span>=in_sage;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="function">call <span class="title">proc05</span><span class="params">(<span class="number">22</span>,@out_res)</span></span>;</span><br><span class="line">select @out_res;</span><br><span class="line"></span><br><span class="line"><span class="meta">#inout表示从外部传入的参数经过修改后可以返回的变量,既可以使用传入变量的值</span></span><br><span class="line">#也可以修改变量的值(即使函数执行完)</span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc06</span><span class="params">(inout num <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function"><span class="built_in">set</span> num </span>= num*<span class="number">10</span>;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="built_in">set</span> @inout_num = <span class="number">2</span>;</span><br><span class="line"><span class="function">call <span class="title">proc06</span><span class="params">(@inout_num)</span></span>;</span><br><span class="line">select @inout_num;</span><br><span class="line"></span><br><span class="line">#流程控制-判断</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>...then...;</span></span><br><span class="line"><span class="meta">#elseif...then...;</span></span><br><span class="line"><span class="meta">#end <span class="meta-keyword">if</span>;</span></span><br><span class="line">#判断IF语句包含多个条件判断,根据结果为TURE和FALSE执行语句,与编程语言中的<span class="keyword">if</span>、<span class="keyword">else</span> <span class="keyword">if</span>、</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>语法类似</span></span><br><span class="line">delimiter $$</span><br><span class="line">create procedure proc07(in score <span class="keyword">int</span>)</span><br><span class="line">begin</span><br><span class="line"><span class="keyword">if</span> score&lt;<span class="number">60</span> then select <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">    elseif score&gt;=<span class="number">60</span> <span class="keyword">and</span> score&lt;<span class="number">80</span> then select <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">    elseif score&gt;=<span class="number">80</span> <span class="keyword">and</span> score&lt;<span class="number">90</span> then select <span class="string">&#x27;良好&#x27;</span>;</span><br><span class="line">    elseif score&gt;=<span class="number">90</span> <span class="keyword">and</span> score&lt;=<span class="number">100</span> then select <span class="string">&#x27;优秀&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> select <span class="string">&#x27;成绩错误！&#x27;</span>;</span><br><span class="line">    end <span class="keyword">if</span>;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="built_in">set</span> @score = <span class="number">79</span>;</span><br><span class="line"><span class="function">call <span class="title">proc07</span><span class="params">(@score)</span></span>;</span><br><span class="line"></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc08</span><span class="params">(in in_name varchar(<span class="number">45</span>))</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">declare var_float <span class="title">decimal</span><span class="params">(<span class="number">7</span>,<span class="number">2</span>)</span></span>; -- 定义局部变量，<span class="number">7</span>个长度，<span class="number">2</span>个小数 </span><br><span class="line"><span class="function">declare res <span class="title">varchar</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line">    select sage into var_float from student where sname=in_name;</span><br><span class="line">    <span class="keyword">if</span> var_float&gt;<span class="number">25</span> then <span class="built_in">set</span> res=<span class="string">&#x27;毕业了&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">set</span> res=<span class="string">&#x27;在上学&#x27;</span>;</span><br><span class="line">    end <span class="keyword">if</span>;</span><br><span class="line">    select res;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="function">call <span class="title">proc08</span><span class="params">(<span class="string">&#x27;刘备&#x27;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc07</span><span class="params">(in score <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">declare res <span class="title">varchar</span><span class="params">(<span class="number">45</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span> score&lt;<span class="number">60</span> then <span class="built_in">set</span> res= <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">    elseif score&gt;=<span class="number">60</span> <span class="keyword">and</span> score&lt;=<span class="number">100</span> then <span class="built_in">set</span> res= <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">set</span> res= <span class="string">&#x27;成绩错误&#x27;</span>;</span><br><span class="line">    end <span class="keyword">if</span>;</span><br><span class="line">    select res as <span class="string">&#x27;成绩结果&#x27;</span>;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">drop procedure proc07;</span><br><span class="line"><span class="built_in">set</span> @score=<span class="number">55</span>;</span><br><span class="line"><span class="function">call <span class="title">proc07</span><span class="params">(@score)</span></span>;</span><br><span class="line"></span><br><span class="line">#流程控制-<span class="keyword">case</span></span><br><span class="line"><span class="meta">#case... </span></span><br><span class="line"><span class="meta">#when...then...;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span>...;</span></span><br><span class="line"><span class="meta">#end case;</span></span><br><span class="line">#CASE是另一个条件判断语句,类似于编程语言中的<span class="keyword">switch</span>语法</span><br><span class="line">#语法一:当<span class="keyword">case</span>后面的语句与when后面的语句相等时,则会执行then后面的语句,如果均不匹配则执行<span class="keyword">else</span></span><br><span class="line">#语法二:直接写<span class="keyword">case</span> 当when后面的条件成立则执行then后面的语句,如果都不成立,则执行<span class="keyword">else</span></span><br><span class="line">delimiter $$</span><br><span class="line">create procedure proc08(in food varchar(<span class="number">45</span>),in pay_type <span class="keyword">int</span>)</span><br><span class="line">begin</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;面包&#x27;</span></span><br><span class="line">    when <span class="number">1</span> then select <span class="string">&#x27;微信支付&#x27;</span>;</span><br><span class="line">    when <span class="number">2</span> then select <span class="string">&#x27;支付宝支付&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> select <span class="string">&#x27;其他支付方式&#x27;</span>;</span><br><span class="line">    end <span class="keyword">case</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;饮料&#x27;</span></span><br><span class="line">    when <span class="number">1</span> then select <span class="string">&#x27;微信支付&#x27;</span>;</span><br><span class="line">    when <span class="number">2</span> then select <span class="string">&#x27;支付宝支付&#x27;</span>;</span><br><span class="line">    <span class="keyword">else</span> select <span class="string">&#x27;其他支付方式&#x27;</span>;</span><br><span class="line">    end <span class="keyword">case</span>;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="function">call <span class="title">proc08</span><span class="params">(<span class="string">&#x27;饮料&#x27;</span>,<span class="number">2</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">#控制流程-循环</span><br><span class="line">#循环分类：<span class="keyword">while</span>、repeate、loop</span><br><span class="line">#循环控制：leave 类似于<span class="keyword">break</span>,跳出,结束当前所在的循环</span><br><span class="line"><span class="meta">#   iteater 类似于continue,继续,结束本次循环,继续下一次</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#label:while...do</span></span><br><span class="line">#...</span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span>...then leave label;</span></span><br><span class="line"><span class="meta">#end while lable;</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc09</span><span class="params">(in insertCount <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">declare i <span class="keyword">int</span> <span class="keyword">default</span> 1</span>;</span><br><span class="line">    label:<span class="keyword">while</span> i&lt;=insertCount <span class="keyword">do</span> </span><br><span class="line">    insert into student(sno,sname) values(i,concat(<span class="string">&#x27;user-&#x27;</span>,i));</span><br><span class="line">    <span class="built_in">set</span> i=i+<span class="number">1</span>;</span><br><span class="line">end <span class="keyword">while</span> label;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">drop procedure proc09;</span><br><span class="line"><span class="function">call <span class="title">proc09</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc10</span><span class="params">(in delCount <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">declare i <span class="keyword">int</span> <span class="keyword">default</span> 1</span>;</span><br><span class="line">    label:<span class="keyword">while</span> i&lt;=delCount <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">delete</span> from student where sno=i;</span><br><span class="line">    <span class="keyword">if</span> i=<span class="number">5</span> then leave label;</span><br><span class="line">    end <span class="keyword">if</span>;</span><br><span class="line">    <span class="built_in">set</span> i = i+<span class="number">1</span>;</span><br><span class="line">    end <span class="keyword">while</span> label;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">drop procedure proc10;</span><br><span class="line"><span class="function">call <span class="title">proc10</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">#Error Code: <span class="number">1175.</span> You are <span class="keyword">using</span> safe update mode <span class="keyword">and</span> you tried to update a table without a WHERE that uses a KEY column. Cannot use range access on index <span class="string">&#x27;PRIMARY&#x27;</span> due to type <span class="keyword">or</span> collation conversion on field <span class="string">&#x27;sno&#x27;</span> To disable safe mode, toggle the option in Preferences -&gt; SQL Editor <span class="keyword">and</span> reconnect.</span><br><span class="line">#因为MySql运行在safe-updates模式下，该模式会导致非主键条件下无法执行update或者<span class="keyword">delete</span>命令。可以通过以下SQL进行状态查询</span><br><span class="line">show variables like <span class="string">&#x27;SQL_SAFE_UPDATES&#x27;</span>;</span><br><span class="line">SET SQL_SAFE_UPDATES = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#label:repeat</span></span><br><span class="line">#...;</span><br><span class="line"><span class="meta">#until 条件表达式;</span></span><br><span class="line"><span class="meta">#end repeat label;</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc11</span><span class="params">(in insertCount <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">declare i <span class="keyword">int</span> <span class="keyword">default</span> 1</span>;</span><br><span class="line">    label:<span class="function">repeat</span></span><br><span class="line"><span class="function">insert into <span class="title">student</span><span class="params">(sno,sname)</span> <span class="title">values</span><span class="params">(i,concat(<span class="string">&#x27;user-&#x27;</span>,i))</span></span>;</span><br><span class="line">        <span class="built_in">set</span> i=i+<span class="number">1</span>;</span><br><span class="line">        until i&gt;insertCount</span><br><span class="line">        end repeat label;</span><br><span class="line">select <span class="string">&#x27;循环结束&#x27;</span>;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line"><span class="function">call <span class="title">proc11</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#label:loop</span></span><br><span class="line"># ...</span><br><span class="line"><span class="meta"># <span class="meta-keyword">if</span> 条件表达式 then leave label;</span></span><br><span class="line"><span class="meta"># end <span class="meta-keyword">if</span>;</span></span><br><span class="line"><span class="meta"># end loop label;</span></span><br><span class="line">delimiter $$</span><br><span class="line"><span class="function">create procedure <span class="title">proc12</span><span class="params">(in delCount <span class="keyword">int</span>)</span></span></span><br><span class="line"><span class="function">begin</span></span><br><span class="line"><span class="function">declare i <span class="keyword">int</span> <span class="keyword">default</span> 1</span>;</span><br><span class="line">    label:loop</span><br><span class="line"><span class="keyword">delete</span> from student where sno=i;</span><br><span class="line">        <span class="built_in">set</span> i=i+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> i&gt;delCount then leave label;</span><br><span class="line">        end <span class="keyword">if</span>;</span><br><span class="line">        end loop label;</span><br><span class="line">end $$</span><br><span class="line">delimiter ;</span><br><span class="line">drop procedure proc12;</span><br><span class="line"><span class="function">call <span class="title">proc12</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line">#调用储存过程显示Error Code: <span class="number">1305.</span> PROCEDURE school.proc12 does <span class="keyword">not</span> exist</span><br><span class="line">#<span class="number">1.</span>首先考虑是否是此储存过程当真不在，查看当前存储过程，发现存储过程存在：</span><br><span class="line"><span class="meta">#show procedure status;</span></span><br><span class="line"># <span class="number">2.</span>此时想到是用户没有当前存储过程的调用权限，赋予存储过程权限给当前用户，此时又出现了一个错误</span><br><span class="line">#GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">#ERROR <span class="number">1133</span> (<span class="number">42000</span>): Can<span class="number">&#x27;</span>t find any matching row in the user table</span><br><span class="line">#通过查询资料发现，需要先将当前的存储过程刷新，再执行授权语句：</span><br><span class="line">#FLUSH PRIVILEGES;</span><br><span class="line">#GRANT ALL  PRIVILEGES ON test.*  TO <span class="string">&#x27;root&#x27;</span>@localhost;</span><br><span class="line">#<span class="number">3.</span>再执行调用此存储过程，显示成功调用</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数据库" scheme="https://zhang0224gz.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://zhang0224gz.github.io/2022/04/23/%E7%AC%94%E8%AE%B0/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
    <id>https://zhang0224gz.github.io/2022/04/23/%E7%AC%94%E8%AE%B0/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E7%AC%AC%E4%BA%8C%E7%AB%A0/</id>
    <published>2022-04-23T09:34:54.928Z</published>
    <updated>2022-06-01T10:11:25.612Z</updated>
    
    <content type="html"><![CDATA[<h1 id="磁盘调度算法笔记fcfs-sstf-scan-cscan"><a class="markdownIt-Anchor" href="#磁盘调度算法笔记fcfs-sstf-scan-cscan"></a> <a href="https://www.cnblogs.com/zhahu/p/12333689.html">磁盘调度算法笔记–（FCFS、SSTF、SCAN、CSCAN） </a></h1><p>为了减少对文件的访问时间，应采用一种最佳的磁盘调度算法。使各种进程对磁盘平均访问时间最小。由于在访问磁盘的事件中主要是寻道时间，因此，磁盘调度算法的目标是是磁盘的平均寻道时间最小。目前磁盘调度算法有以下几类：</p><p><img src="https://img-blog.csdnimg.cn/20191208170200798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDkyNzQzNg==,size_16,color_FFFFFF,t_70" alt="img" /></p><h2 id="1先来先服务fcfs根据进程请求访问磁盘的先后次序进行调度"><a class="markdownIt-Anchor" href="#1先来先服务fcfs根据进程请求访问磁盘的先后次序进行调度"></a> 1.先来先服务(FCFS)：根据进程请求访问磁盘的先后次序进行调度。</h2><p>假设磁头的初始位置是100号磁道，有多个进程先后陆续的请求访问55，58，39，18，90，160，150，38，184号磁道</p><p>按照FCFS的规则，按照请求到达的顺序，磁头需要一次移动到55，58，39，90，160，150，38，184号磁道</p><p><img src="https://img-blog.csdnimg.cn/20191208210418468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDkyNzQzNg==,size_16,color_FFFFFF,t_70" alt="img" /></p><p>磁头总共移动的磁道个数为45+3+19+21+72+70+10+112+146=498</p><p>平均寻道长度为498/9=55.3个磁道</p><p>优点：公平，性能还可以</p><p>缺点：如果有大量进程竞争使用磁盘，请求访问磁道很分散，则FCFS在性能上很差，寻道时间长。</p><h2 id="最短寻道时间优先sstf其要求访问的磁道与当前磁头所在的磁道距离最近以使每次的寻道时间最短但这种调度算法却不能保证平均寻道时间最短"><a class="markdownIt-Anchor" href="#最短寻道时间优先sstf其要求访问的磁道与当前磁头所在的磁道距离最近以使每次的寻道时间最短但这种调度算法却不能保证平均寻道时间最短"></a> 最短寻道时间优先（SSTF）：其要求访问的<a href="https://baike.baidu.com/item/%E7%A3%81%E9%81%93/3641860">磁道</a>与当前磁头所在的磁道距离最近，以使每次的寻道时间最短，但这种<a href="https://baike.baidu.com/item/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/3017645">调度算法</a>却不能保证<a href="https://baike.baidu.com/item/%E5%B9%B3%E5%9D%87%E5%AF%BB%E9%81%93%E6%97%B6%E9%97%B4/586257">平均寻道时间</a>最短。</h2><p>假设磁头的初始位置是100号磁道，有多个进程先后陆续的请求访问55，58，39，18，90，160，150，38，184号磁道</p><p>按照SSTF的规则，请求到达的</p><p><img src="https://img-blog.csdnimg.cn/20191208211803552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDkyNzQzNg==,size_16,color_FFFFFF,t_70" alt="img" /></p><p>​</p><p>磁头总共移动了（100-18）+（184-18）=248个磁道</p><p>平均寻道长度为248/9=27.5个磁道</p><p>优点：性能较好，平均寻道时间短</p><p>缺点：可能产生“饥饿”现象</p><h2 id="扫描算法scan当磁头正在由里向外移动时scan算法所选择的下一个访问对象应是其欲访问的磁道既在当前磁道之外又是距离最近的-这样由里向外地访问直至再无更外的磁道需要访问时才将磁臂换向由外向里移动-也叫电梯算法"><a class="markdownIt-Anchor" href="#扫描算法scan当磁头正在由里向外移动时scan算法所选择的下一个访问对象应是其欲访问的磁道既在当前磁道之外又是距离最近的-这样由里向外地访问直至再无更外的磁道需要访问时才将磁臂换向由外向里移动-也叫电梯算法"></a> 扫描算法（SCAN）：当磁头正在由里向外移动时，SCAN算法所选择的下一个访问对象应是其欲访问的磁道，既在当前磁道之外，又是距离最近的。这样由里向外地访问，直至再无更外的磁道需要访问时，才将<a href="https://baike.baidu.com/item/%E7%A3%81%E8%87%82">磁臂</a>换向，由外向里移动。也叫电梯算法。</h2><p><img src="https://img-blog.csdnimg.cn/2019120821532690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDkyNzQzNg==,size_16,color_FFFFFF,t_70" alt="img" /></p><p>磁头总共移动了（184-100）+（184-18）=250个磁道</p><p>平均寻道长度为250/9=27.8个磁道</p><p>优点：性能较好，平均寻道时间短，不会产生饥饿现象</p><p>缺点：1，只有到最边上的磁道才能改变磁头的移动方向。2.SCAN对于各个位置磁道响应频率不平均。</p><h2 id="循环扫描算法cscan为了减少scan算法造成的某些进程的请求被严重推迟cscan算法规定磁头单向移动"><a class="markdownIt-Anchor" href="#循环扫描算法cscan为了减少scan算法造成的某些进程的请求被严重推迟cscan算法规定磁头单向移动"></a> 循环扫描算法（CSCAN）：为了减少SCAN算法造成的某些进程的请求被严重推迟，CSCAN算法规定磁头单向移动。</h2><p><img src="https://img-blog.csdnimg.cn/20191208215946720.png" alt="img" /></p><p>磁头总共移动了（184-100）+（184-18）+（90-18）=322个磁道</p><p>平均寻道长度为322/9=35.8个磁道</p><p>优点：比起SCAN算法，对于各位置磁道的响应频率很平均。</p><p>缺点：只有到边上才能改变磁头移动方向，比起SCAN算法来，平均寻道时间更长。</p><p>进程同步与互斥是进程管理的重点，也是操作系统学科的一个难点。<br />具体包括:进程同步的基本概念、实现临界区互斥的基本方法(包括软件实现方法、硬件实现方法)、信号量(P、V操作)、管程、经典同步问题(包括生产者-消费者问题、读者-写者问题、哲学家进餐问题等)。我们一定要掌握P、V操作的概念、流程，以及P、V操作在同步问题、互斥问题中的应用。</p><p>首先,要求掌握进程的概念，其中进程和程序这两个概念的区别和联系一定要搞清楚。<br />第二,要记住进程的三个基本状态以及它们之间相互转换条件，一定要记住不可能从就绪状态直接转换到等待状态。<br />第三,需要理解进程控制和原语这两个概念，掌握进程的创建、撤销、阻塞、唤醒的条件，理解四种原语的执行过程。</p><p>第四,理解什么是并发进程间的直接制约以及由直接制约所引发的进程同步，重点要掌握如何用P、V原语操作实现同步问题，要会利用P、V原语操作来解决经典的同步问题；<br />第五,了解进程的通信方式及它们各自的特点；<br />第六,要理解进程和线程的异同以及多线程模型</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220423175009902.png" alt="image-20220423175009902" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220423200443602.png" alt="image-20220423200443602" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220423200512488.png" alt="image-20220423200512488" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220423205923975.png" alt="image-20220423205923975" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220423210117512.png" alt="image-20220423210117512" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220424204723464.png" alt="image-20220424204723464" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;磁盘调度算法笔记fcfs-sstf-scan-cscan&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#磁盘调度算法笔记fcfs-sstf-scan-cscan&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.cnblogs.co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>废的摄像头代码</title>
    <link href="https://zhang0224gz.github.io/2022/04/20/%E6%99%BA%E8%83%BD%E8%BD%A6/%E5%BA%9F%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
    <id>https://zhang0224gz.github.io/2022/04/20/%E6%99%BA%E8%83%BD%E8%BD%A6/%E5%BA%9F%E7%9A%84%E4%BB%A3%E7%A0%81/</id>
    <published>2022-04-20T12:41:00.948Z</published>
    <updated>2022-07-17T08:29:27.395Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2022/07/17</span></span><br><span class="line"><span class="comment">//最后一版的1.0，经过二十天的折磨终于实现大道至简了，我觉得这是反应最快的思路了</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"></span><br><span class="line">uint8 threshold_max;</span><br><span class="line">uint8 mid_x,mid_y,pre_x,pre_y,temp_x,temp_y;</span><br><span class="line">uint16 n,count_noBeacon=<span class="number">0</span>,zero=<span class="number">0</span>;</span><br><span class="line">uint32 sum_x,sum_y;</span><br><span class="line">uint8 flag_stick=<span class="number">0</span>,flag_beacon=<span class="number">1</span>,flag_row=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  uint8 i,j,flag;</span><br><span class="line">  </span><br><span class="line">  flag=<span class="number">0</span>;</span><br><span class="line">  threshold_max = <span class="number">180</span>;</span><br><span class="line">  sum_x=<span class="number">0</span>,sum_y=<span class="number">0</span>;</span><br><span class="line">  n=<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  pre_x = mid_x;</span><br><span class="line">  pre_y = mid_y;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(mt9v03x_finish_flag)&#123;</span><br><span class="line">    mt9v03x_finish_flag=<span class="number">0</span>;</span><br><span class="line">    ips200_displayimage032(mt9v03x_image[<span class="number">0</span>],col,row);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//找中心点</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">17</span>;i&lt;row;i++)&#123;</span><br><span class="line">      <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mt9v03x_image[i][j]&gt;threshold_max)&#123;</span><br><span class="line">          sum_x = sum_x + j;</span><br><span class="line">          sum_y = sum_y + i;</span><br><span class="line">          n++;</span><br><span class="line">          flag=<span class="number">1</span>;</span><br><span class="line">          <span class="keyword">if</span>(n&gt;<span class="number">400</span>)flag_row=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">      mid_x = sum_x/n;</span><br><span class="line">      mid_y = sum_y/n;</span><br><span class="line">      </span><br><span class="line">      ips200_showfloat(<span class="number">0</span>,<span class="number">19</span>,mid_x,<span class="number">6</span>,<span class="number">3</span>);</span><br><span class="line">      ips200_showfloat(<span class="number">80</span>,<span class="number">19</span>,mid_y,<span class="number">6</span>,<span class="number">3</span>);</span><br><span class="line">      <span class="keyword">for</span>(i=mid_x<span class="number">-10</span>;i&lt;mid_x+<span class="number">10</span>;i++)</span><br><span class="line">        ips200_drawpoint(i,mid_y,RED);</span><br><span class="line">      <span class="keyword">for</span>(i=mid_y<span class="number">-10</span>;i&lt;mid_y+<span class="number">10</span>;i++)</span><br><span class="line">        ips200_drawpoint(mid_x,i,RED);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      mid_x=<span class="number">0</span>;</span><br><span class="line">      mid_y=<span class="number">0</span>;</span><br><span class="line">      </span><br><span class="line">      ips200_showstr(<span class="number">0</span>,<span class="number">19</span>,<span class="string">&quot;  not find points !&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    point_deal();<span class="comment">//处理点的坐标（畸变影响）</span></span><br><span class="line">    flag_stick = stick();<span class="comment">//是否一直怼着信标灯/停住出现卡死状态</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理点的坐标（畸变影响）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">point_deal</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  <span class="comment">//判断是否找到信标灯</span></span><br><span class="line">  <span class="keyword">if</span>(mid_x==<span class="number">0</span>)&#123;</span><br><span class="line">    count_noBeacon++;</span><br><span class="line">    <span class="keyword">if</span>(count_noBeacon&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">      flag_beacon=<span class="number">0</span>;<span class="comment">//没找到灯</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//在没找到点比较少时，将发现的点的坐标给予现在的坐标</span></span><br><span class="line">      <span class="keyword">if</span>(pre_x!=<span class="number">0</span>&amp;&amp;pre_y!=<span class="number">0</span>)&#123;</span><br><span class="line">        temp_x = pre_x;</span><br><span class="line">        temp_y = pre_y;</span><br><span class="line">      &#125;</span><br><span class="line">      mid_x = temp_x;</span><br><span class="line">      mid_y = temp_y;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    count_noBeacon=<span class="number">0</span>;</span><br><span class="line">    flag_beacon=<span class="number">1</span>;<span class="comment">//找到信标灯</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//处理x</span></span><br><span class="line">  <span class="keyword">if</span>(mid_x&lt;=<span class="number">110</span>)&#123;</span><br><span class="line">    mid_x=mid_x<span class="number">-20</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid_x&lt;=<span class="number">0</span>)mid_x=<span class="number">0</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    mid_x=mid_x+<span class="number">20</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//处理y（当很靠近灯的时候）</span></span><br><span class="line">  <span class="keyword">if</span>(flag_row)&#123;</span><br><span class="line">    mid_y=mid_y<span class="number">-5</span>;</span><br><span class="line">    flag_row=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一直怼着信标灯/停住出现卡死状态</span></span><br><span class="line"><span class="function">uint8 <span class="title">stick</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 bias; </span><br><span class="line">  bias=mid_x-pre_x;</span><br><span class="line">  <span class="keyword">if</span>(bias==<span class="number">0</span>)&#123;</span><br><span class="line">    zero++;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    zero=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(zero&gt;=<span class="number">20</span>)&#123;<span class="comment">//(zero&gt;=3&amp;&amp;flag_beacon==0)//有20个重复的画面并且未找到信标灯</span></span><br><span class="line">    zero=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//卡死了</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//没卡死</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _imgDeal_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _imgDeal_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 宏定 义 **************************** </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col MT9V03X_W <span class="comment">//120 //MT9V03X_W 宽 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row   MT9V03X_H<span class="comment">//80 //MT9V03X_H 高 </span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 变量定义 ****************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> uint8 threshold_max;</span><br><span class="line"><span class="keyword">extern</span> uint8 mid_x,mid_y,pre_x,pre_y,temp_x,temp_y;</span><br><span class="line"><span class="keyword">extern</span> uint16 n,count_noBeacon,zero;</span><br><span class="line"><span class="keyword">extern</span> uint32 sum_x,sum_y;</span><br><span class="line"><span class="keyword">extern</span> uint8 flag_stick,flag_beacon,flag_row;</span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 函数定义 ****************************</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">point_deal</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> uint8 <span class="title">stick</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2022</span>/<span class="number">07</span>/<span class="number">15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GrayScale 256</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxnum 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> offset 0</span></span><br><span class="line"></span><br><span class="line">uint8 mid_x,mid_y;</span><br><span class="line">uint8 pre_x,pre_y;</span><br><span class="line">uint8 zero=<span class="number">0</span>,count_beacon=<span class="number">0</span>;</span><br><span class="line">uint8 threshold;<span class="comment">//=70;//灰20-70；白70-126 -127-0</span></span><br><span class="line">uint8 bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line">uint8 domains[row][col]; <span class="comment">//连通域图</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//uint8 area_start[maxnum];</span></span><br><span class="line"><span class="comment">//uint8 area_end[maxnum];</span></span><br><span class="line"><span class="comment">//uint8 area_row[maxnum];</span></span><br><span class="line"><span class="comment">//uint8 num_area;   </span></span><br><span class="line"><span class="comment">//uint8 area_label[maxnum];</span></span><br><span class="line"><span class="comment">//uint8 point[col+20][2];</span></span><br><span class="line"><span class="comment">//int equalLabels[maxnum][2];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以不加二值化浪费时间，直接通过阈值来判断</span></span><br><span class="line"><span class="comment">//只改变与偏差有关的，与中线有关的间接有关的都不改变</span></span><br><span class="line"><span class="comment">//滤波等，思考……效率问题</span></span><br><span class="line"><span class="comment">//#define RED0xF800// 红色</span></span><br><span class="line"><span class="comment">//#define BLUE0x001F// 蓝色</span></span><br><span class="line"><span class="comment">//#define YELLOW0xFFE0// 黄色</span></span><br><span class="line"><span class="comment">//#define GREEN0x07E0// 绿色</span></span><br><span class="line"><span class="comment">//#define WHITE0xFFFF// 白色</span></span><br><span class="line"><span class="comment">//#define BLACK0x0000// 黑色 </span></span><br><span class="line"><span class="comment">//#define GRAY0X8430// 灰色</span></span><br><span class="line"><span class="comment">//#define BROWN0XBC40// 棕色</span></span><br><span class="line"><span class="comment">//#define PURPLE0XF81F// 紫色</span></span><br><span class="line"><span class="comment">//#define PINK0XFE19</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">  uint8 stick_flag;<span class="comment">//卡死标志</span></span><br><span class="line">  <span class="keyword">if</span>(mt9v03x_finish_flag)</span><br><span class="line">  &#123;</span><br><span class="line">    mt9v03x_finish_flag=<span class="number">0</span>;</span><br><span class="line">    threshold=<span class="number">100</span>;</span><br><span class="line">    ips200_displayimage032(mt9v03x_image[<span class="number">0</span>],col,row);</span><br><span class="line">    </span><br><span class="line">    Binarization(threshold);</span><br><span class="line"><span class="comment">//    ips200_displayimage032(bin_img[0],col, row);</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//    Find_Beacon(); </span></span><br><span class="line"><span class="comment">//    stick_flag=stick();</span></span><br><span class="line"><span class="comment">//    if(stick_flag==1&amp;&amp;flag_beacon==0)&#123;</span></span><br><span class="line"><span class="comment">//      //卡死在那,令车略微向后退</span></span><br><span class="line"><span class="comment">////      duty_l=duty_r=-7000;</span></span><br><span class="line"><span class="comment">//      duty_l=-duty_l;</span></span><br><span class="line"><span class="comment">//      duty_r=-duty_r;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    if(stick_flag==1&amp;&amp;fabs(mid_x-pre_x)&lt;6&amp;&amp;fabs(mid_y-pre_y)&lt;6)&#123;</span></span><br><span class="line"><span class="comment">//      duty_l=-duty_l-5000;</span></span><br><span class="line"><span class="comment">//      duty_r=-duty_r-5000;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    if(flag_beacon==0)&#123;</span></span><br><span class="line"><span class="comment">//      duty_l=0;</span></span><br><span class="line"><span class="comment">//      duty_r=duty_r+5000;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    if(flag_beacon==1)&#123;</span></span><br><span class="line"><span class="comment">//      duty_l=duty_l+5000;</span></span><br><span class="line"><span class="comment">//      duty_r=duty_r+5000;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图像二值化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(uint8 threshold)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  uint8 i,j,m,n;</span><br><span class="line">  uint8 flag_red=<span class="number">0</span>;<span class="comment">//信标灯没有阈值大于180的点</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;col; j++)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//      domains[i][j]=0;</span></span><br><span class="line">      <span class="keyword">if</span>(mt9v03x_image[i][j]&gt;threshold)</span><br><span class="line">        bin_img[i][j]=white;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        bin_img[i][j]=black;</span><br><span class="line">      <span class="keyword">if</span>(mt9v03x_image[i][j]&gt;<span class="number">160</span>)&#123;</span><br><span class="line">        ips200_drawpoint(j,i,RED);</span><br><span class="line">        flag_red=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(m=j<span class="number">-10</span>;m&lt;j+<span class="number">10</span>;m++)</span><br><span class="line">          ips200_drawpoint(m,i,RED);</span><br><span class="line">        <span class="keyword">for</span>(n=i<span class="number">-10</span>;n&lt;i+<span class="number">10</span>;n++)</span><br><span class="line">          ips200_drawpoint(j,n,RED);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ips200_showfloat(<span class="number">0</span>,<span class="number">16</span>,flag_red,<span class="number">6</span>,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uint8 flag_beacon=<span class="number">1</span>,flag_row=<span class="number">0</span>;<span class="comment">//判断是否找到信标灯</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_Beacon</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="comment">//  Connect_domains();</span></span><br><span class="line">  pre_x=mid_x;</span><br><span class="line">  pre_y=mid_y;</span><br><span class="line">  Find_CenterPoint();</span><br><span class="line"></span><br><span class="line"><span class="comment">//  if(bin_img[pre_x][pre_y]==black&amp;&amp;flag_beacon==1)&#123;</span></span><br><span class="line"><span class="comment">//    DirG_Output= -1200;</span></span><br><span class="line"><span class="comment">//    flag_beacon=0;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一直怼着信标灯/停住出现卡死状态</span></span><br><span class="line"><span class="function">uint8 <span class="title">stick</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 bias; </span><br><span class="line">  bias=mid_x-pre_x;</span><br><span class="line">  <span class="keyword">if</span>(bias==<span class="number">0</span>)&#123;</span><br><span class="line">    zero++;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    zero=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(zero&gt;=<span class="number">20</span>)&#123;<span class="comment">//(zero&gt;=3&amp;&amp;flag_beacon==0)//有20个重复的画面并且未找到信标灯</span></span><br><span class="line">    zero=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//卡死了</span></span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//没卡死</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//找中心点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_CenterPoint</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 i,j;</span><br><span class="line">  uint8 point_count=<span class="number">0</span>;</span><br><span class="line">  uint8 x,y,row_current=<span class="number">0</span>;</span><br><span class="line">  uint8 left,right,top,bottom;</span><br><span class="line">  uint8 n=<span class="number">0</span>;</span><br><span class="line">  uint16 sum_x=<span class="number">0</span>,sum_y=<span class="number">0</span>;</span><br><span class="line">  uint8 x_pre=<span class="number">0</span>,y_pre=<span class="number">0</span>;</span><br><span class="line">  uint8 flag=<span class="number">0</span>;<span class="comment">//没有找到第一个白点</span></span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(row_current!=i)&#123;</span><br><span class="line">        point_count=<span class="number">0</span>;</span><br><span class="line">        row_current=i;</span><br><span class="line">        x_pre=y_pre=<span class="number">0</span>;</span><br><span class="line">        flag=<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(bin_img[i][j]==white)&#123;</span><br><span class="line">        point_count++;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(point_count&gt;=<span class="number">1</span>&amp;&amp;flag==<span class="number">0</span>)&#123;</span><br><span class="line">          x = j<span class="number">-1</span>-point_count/<span class="number">2</span>;</span><br><span class="line">          y = i;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">while</span>(bin_img[y][x-left]==white)&#123;</span><br><span class="line">            left++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y][x+right]==white)&#123;</span><br><span class="line">            right++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y-top][x]==white)&#123;</span><br><span class="line">            top++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y+bottom][x]==white)&#123;</span><br><span class="line">            bottom++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>((bottom-top)&lt;<span class="number">2</span>&amp;&amp;(top-bottom)&lt;<span class="number">2</span>&amp;&amp;(left-right)&lt;<span class="number">2</span>&amp;&amp;(right-left)&lt;<span class="number">2</span>)&#123;</span><br><span class="line">            </span><br><span class="line"><span class="comment">//              point[n][0]=x;</span></span><br><span class="line"><span class="comment">//              point[n++][1]=y;</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x+1,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x-1,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y-1,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y+1,RED);</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">//            if(right-left&gt;=18)flag_row=1;</span></span><br><span class="line"><span class="comment">//            sum_x += x;</span></span><br><span class="line"><span class="comment">//            sum_y += y;</span></span><br><span class="line"><span class="comment">//            n++;</span></span><br><span class="line"><span class="comment">//            flag_beacon=1;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(x_pre==<span class="number">0</span>&amp;&amp;y_pre==<span class="number">0</span>)&#123;</span><br><span class="line">              <span class="keyword">if</span>(right-left&gt;=<span class="number">18</span>)flag_row=<span class="number">1</span>;</span><br><span class="line">              x_pre=x;</span><br><span class="line">              y_pre=y;</span><br><span class="line">              sum_x += x;</span><br><span class="line">              sum_y += y;</span><br><span class="line">              n++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x-x_pre&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">              <span class="keyword">if</span>(right-left&gt;=<span class="number">18</span>)flag_row=<span class="number">1</span>;</span><br><span class="line">              sum_x += x;</span><br><span class="line">              sum_y += y;</span><br><span class="line">              n++;</span><br><span class="line">              x_pre=x;</span><br><span class="line">              y_pre=y;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              flag=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">        point_count=<span class="number">0</span>;</span><br><span class="line">        left=right=top=bottom=<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j==col<span class="number">-1</span>&amp;&amp;bin_img[i][col<span class="number">-1</span>]==white)&#123;</span><br><span class="line">          x = j<span class="number">-1</span>-point_count/<span class="number">2</span>;</span><br><span class="line">          y = i;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">while</span>(bin_img[y][x-left]==white)&#123;</span><br><span class="line">            left++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y][x+right]==white)&#123;</span><br><span class="line">            right++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y-top][x]==white)&#123;</span><br><span class="line">            top++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y+bottom][x]==white)&#123;</span><br><span class="line">            bottom++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>((bottom-top)&lt;<span class="number">2</span>&amp;&amp;(top-bottom)&lt;<span class="number">2</span>&amp;&amp;(left-right)&lt;<span class="number">2</span>&amp;&amp;(right-left)&lt;<span class="number">2</span>)&#123;</span><br><span class="line">            </span><br><span class="line"><span class="comment">//              point[n][0]=x;</span></span><br><span class="line"><span class="comment">//              point[n++][1]=y;</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x+1,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x-1,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y-1,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y+1,RED);</span></span><br><span class="line">            </span><br><span class="line"><span class="comment">//            if(right-left&gt;=18)flag_row=1;</span></span><br><span class="line"><span class="comment">//            sum_x += x;</span></span><br><span class="line"><span class="comment">//            sum_y += y;</span></span><br><span class="line"><span class="comment">//            n++;</span></span><br><span class="line"><span class="comment">//            flag_beacon=1;</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(x_pre==<span class="number">0</span>&amp;&amp;y_pre==<span class="number">0</span>)&#123;</span><br><span class="line">              <span class="keyword">if</span>(right-left&gt;=<span class="number">18</span>)flag_row=<span class="number">1</span>;</span><br><span class="line">              x_pre=x;</span><br><span class="line">              y_pre=y;</span><br><span class="line">              sum_x += x;</span><br><span class="line">              sum_y += y;</span><br><span class="line">              n++;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(x-x_pre&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">              <span class="keyword">if</span>(right-left&gt;=<span class="number">18</span>)flag_row=<span class="number">1</span>;</span><br><span class="line">              sum_x += x;</span><br><span class="line">              sum_y += y;</span><br><span class="line">              n++;</span><br><span class="line">              x_pre=x;</span><br><span class="line">              y_pre=y;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              flag=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            point_count=<span class="number">0</span>;</span><br><span class="line">            left=right=top=bottom=<span class="number">0</span>;</span><br><span class="line">          &#125;     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  mid_x = sum_x/n;</span><br><span class="line">  mid_y = sum_y/n;</span><br><span class="line">  ips200_drawpoint(mid_x,mid_y,RED);</span><br><span class="line">  ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y,RED);</span><br><span class="line">  ips200_drawpoint(mid_x<span class="number">-1</span>,mid_y,RED);</span><br><span class="line">  ips200_drawpoint(mid_x<span class="number">-1</span>,mid_y<span class="number">-1</span>,RED);</span><br><span class="line">  ips200_drawpoint(mid_x,mid_y<span class="number">-1</span>,RED);</span><br><span class="line">  ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y<span class="number">-1</span>,RED);</span><br><span class="line">  ips200_drawpoint(mid_x<span class="number">-1</span>,mid_y+<span class="number">1</span>,RED);</span><br><span class="line">  ips200_drawpoint(mid_x,mid_y+<span class="number">1</span>,RED);</span><br><span class="line">  ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y+<span class="number">1</span>,RED);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(mid_x==<span class="number">0</span>)&#123;</span><br><span class="line">    count_beacon++;</span><br><span class="line">    <span class="keyword">if</span>(count_beacon&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">      flag_beacon=<span class="number">0</span>;<span class="comment">//没找到灯</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      mid_x=pre_x;</span><br><span class="line">      mid_y=pre_y;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">      count_beacon=<span class="number">0</span>;</span><br><span class="line">      flag_beacon=<span class="number">1</span>;<span class="comment">//找到信标灯</span></span><br><span class="line"><span class="comment">//      mid_x=mid_x;</span></span><br><span class="line"><span class="comment">//      mid_y=mid_y;</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(mid_x&lt;=<span class="number">110</span>)&#123;</span><br><span class="line">    mid_x=mid_x<span class="number">-20</span>;</span><br><span class="line">    <span class="keyword">if</span>(mid_x&lt;=<span class="number">0</span>)mid_x=<span class="number">0</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    mid_x=mid_x+<span class="number">20</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(flag_row)&#123;</span><br><span class="line">    mid_y=mid_y<span class="number">-5</span>;</span><br><span class="line">    flag_row=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//大津算法</span></span><br><span class="line"><span class="comment">//uint8 OTSU(void)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//  uint16 i,j;</span></span><br><span class="line"><span class="comment">//  uint8 img_row=row,img_col=col; </span></span><br><span class="line"><span class="comment">//  uint16 histogram[GrayScale]; //灰度直方图</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  //第一步：初始化灰度直方图</span></span><br><span class="line"><span class="comment">//  for(i=0; i&lt;GrayScale; i++)</span></span><br><span class="line"><span class="comment">//    histogram[i]=0; </span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  //第二步：统计每个灰度值出现得次数</span></span><br><span class="line"><span class="comment">//  for(i=0; i&lt;img_row; i++)</span></span><br><span class="line"><span class="comment">//    for(j=0; j&lt;img_col; j++)</span></span><br><span class="line"><span class="comment">//      ++histogram[mt9v03x_image[i][j]];</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  //第三步： 获取最小最大灰度值</span></span><br><span class="line"><span class="comment">//  uint16 minGray,maxGray;</span></span><br><span class="line"><span class="comment">//  for(minGray=0;minGray&lt;256&amp;&amp;histogram[minGray]==0;minGray++);</span></span><br><span class="line"><span class="comment">//  for(maxGray=255;maxGray&gt;minGray&amp;&amp;histogram[maxGray]==0;maxGray--);</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  //第四步：分情况讨论</span></span><br><span class="line"><span class="comment">//  // 最大=最小，图像只有一种颜色</span></span><br><span class="line"><span class="comment">//  if(maxGray==minGray)</span></span><br><span class="line"><span class="comment">//    return maxGray;</span></span><br><span class="line"><span class="comment">//  //最大=最小+1，图像只有两种颜色</span></span><br><span class="line"><span class="comment">//  if(maxGray==minGray+1)</span></span><br><span class="line"><span class="comment">//    return minGray;</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  //第五步：统计[最小,最大]范围内的像素总数</span></span><br><span class="line"><span class="comment">//  uint16 PixelSum=0;</span></span><br><span class="line"><span class="comment">//  for(i=minGray; i&lt;maxGray+1; i++)</span></span><br><span class="line"><span class="comment">//    PixelSum += histogram[i];</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  //第六步：统计[最小,最大]范围内的灰度值总数(灰度值*出现次数)</span></span><br><span class="line"><span class="comment">//  uint16 GraySum=0;</span></span><br><span class="line"><span class="comment">//  for(i=minGray; i&lt;maxGray+1; i++)</span></span><br><span class="line"><span class="comment">//    GraySum += histogram[i]*i;</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  //第七步： 大津法优化</span></span><br><span class="line"><span class="comment">//  float w0; //前景像素点占整幅图像的百分比 </span></span><br><span class="line"><span class="comment">//  float w1; //背景像素点占整幅图像的百分比 </span></span><br><span class="line"><span class="comment">//  uint16 w0num; //前景像素点数 </span></span><br><span class="line"><span class="comment">//  uint16 w1num; // 背景像素点数 </span></span><br><span class="line"><span class="comment">//  uint16 u0gray; //前景灰度值 </span></span><br><span class="line"><span class="comment">//  uint16 u1gray; //背景灰度值 </span></span><br><span class="line"><span class="comment">//  float u0; //w0平均灰度</span></span><br><span class="line"><span class="comment">//  float u1; //w1平均灰度</span></span><br><span class="line"><span class="comment">//  float deltaTmp=0,deltaMax=-1;</span></span><br><span class="line"><span class="comment">//  uint8 th;</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  u0gray = u1gray = w0num = w1num = 0;</span></span><br><span class="line"><span class="comment">//  for(i=minGray; i&lt;maxGray+1; i++)</span></span><br><span class="line"><span class="comment">//  &#123;</span></span><br><span class="line"><span class="comment">//    w0num += histogram[i];</span></span><br><span class="line"><span class="comment">//    w1num = PixelSum-w0num;</span></span><br><span class="line"><span class="comment">//    w0 = w0num*1.0/PixelSum;</span></span><br><span class="line"><span class="comment">//    w1 = w1num*1.0/PixelSum;</span></span><br><span class="line"><span class="comment">//    u0gray += histogram[i]*i;</span></span><br><span class="line"><span class="comment">//    u1gray = GraySum-u0gray;</span></span><br><span class="line"><span class="comment">//    u0 = u0gray*1.0/w0num;</span></span><br><span class="line"><span class="comment">//    u1 = u1gray*1.0/w1num;</span></span><br><span class="line"><span class="comment">//    deltaTmp = (float)(w0 * w1 * (u0 - u1)*(u0 - u1)); </span></span><br><span class="line"><span class="comment">//    //类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//    //第八步：遍历最大类间方差（因为呈正态分布） </span></span><br><span class="line"><span class="comment">//    if(deltaTmp&gt;deltaMax)</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//      deltaMax = deltaTmp;</span></span><br><span class="line"><span class="comment">//      th = i;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"><span class="comment">//  return th; </span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////连通域</span></span><br><span class="line"><span class="comment">//void Connect_domains(void)&#123;</span></span><br><span class="line"><span class="comment">//  uint16 i,j;</span></span><br><span class="line"><span class="comment">//  uint8 s,e,r,l;</span></span><br><span class="line"><span class="comment">//  searchArea();</span></span><br><span class="line"><span class="comment">//  markArea();</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  for(i=0;i&lt;num_area;i++)&#123;</span></span><br><span class="line"><span class="comment">//    r=area_row[i];</span></span><br><span class="line"><span class="comment">//    s=area_start[i];</span></span><br><span class="line"><span class="comment">//    e=area_end[i];</span></span><br><span class="line"><span class="comment">//    l=area_label[i];</span></span><br><span class="line"><span class="comment">//    for(j=s;j&lt;=e;j++)&#123;</span></span><br><span class="line"><span class="comment">//      domains[r][j]=l;</span></span><br><span class="line"><span class="comment">////      ips200_drawpoint(j,r,RED);</span></span><br><span class="line"><span class="comment">////      ips200_drawpoint(j+1,r,RED);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void searchArea(void)&#123;</span></span><br><span class="line"><span class="comment">//  uint8 i,j;</span></span><br><span class="line"><span class="comment">//  uint16 ns=0,ne=0,nr=0;</span></span><br><span class="line"><span class="comment">//  num_area = 0;</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  for(i=0;i&lt;row;i++)&#123;</span></span><br><span class="line"><span class="comment">//    if(bin_img[i][0]==white)&#123;</span></span><br><span class="line"><span class="comment">//      num_area++;</span></span><br><span class="line"><span class="comment">//      area_start[ns++]=0;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    for(j=1;j&lt;col;j++)&#123;</span></span><br><span class="line"><span class="comment">//      if(bin_img[i][j-1]==black&amp;&amp;bin_img[i][j]==white)&#123;</span></span><br><span class="line"><span class="comment">//        num_area++;</span></span><br><span class="line"><span class="comment">//        area_start[ns++]=j;</span></span><br><span class="line"><span class="comment">//      &#125;else if(bin_img[i][j]==black&amp;&amp;bin_img[i][j-1]==white)&#123;</span></span><br><span class="line"><span class="comment">//        area_end[ne++]=j-1;</span></span><br><span class="line"><span class="comment">//        area_row[nr++]=i;</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    if(bin_img[i][col-1]==white)&#123;</span></span><br><span class="line"><span class="comment">//      area_end[ne++]=col-1;</span></span><br><span class="line"><span class="comment">//      area_row[nr++]=i;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void markArea(void)&#123;</span></span><br><span class="line"><span class="comment">//  uint8 i,j;</span></span><br><span class="line"><span class="comment">////  int nel=0;</span></span><br><span class="line"><span class="comment">//  uint8 label=1;</span></span><br><span class="line"><span class="comment">//  uint8 row_current=0;</span></span><br><span class="line"><span class="comment">//  uint8 index_currentFirstArea=0;</span></span><br><span class="line"><span class="comment">//  uint8 index_preFirstArea=0;</span></span><br><span class="line"><span class="comment">//  uint8 index_preLastArea=0;</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  for(i=0;i&lt;num_area;i++)&#123;</span></span><br><span class="line"><span class="comment">//    area_label[i]=0;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"><span class="comment">//  for(i=0;i&lt;num_area;i++)&#123;</span></span><br><span class="line"><span class="comment">//    //轮到下一行时，变量更新 </span></span><br><span class="line"><span class="comment">//    if(row_current!=area_row[i])&#123;</span></span><br><span class="line"><span class="comment">//      row_current = area_row[i];</span></span><br><span class="line"><span class="comment">//      index_preFirstArea = index_currentFirstArea;</span></span><br><span class="line"><span class="comment">//      index_preLastArea = i-1;</span></span><br><span class="line"><span class="comment">//      index_currentFirstArea = i;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    </span></span><br><span class="line"><span class="comment">//    if(row_current!=area_row[index_preFirstArea]+1)&#123;</span></span><br><span class="line"><span class="comment">//      //相邻行不存在子区域 </span></span><br><span class="line"><span class="comment">//      area_label[i]=label++;</span></span><br><span class="line"><span class="comment">//    &#125;else&#123;</span></span><br><span class="line"><span class="comment">//      //当前行与上一行进行比较 </span></span><br><span class="line"><span class="comment">//      for(j=index_preFirstArea;j&lt;=index_preLastArea;j++)&#123;</span></span><br><span class="line"><span class="comment">//        if(area_start[i]&lt;=area_end[j]+offset&amp;&amp;area_end[i]&gt;=area_start[j]-offset)&#123;</span></span><br><span class="line"><span class="comment">//          //相连的情况 </span></span><br><span class="line"><span class="comment">//          if(area_label[i]==0)&#123;</span></span><br><span class="line"><span class="comment">//            //没有标记情况 </span></span><br><span class="line"><span class="comment">//            area_label[i]=area_label[j];</span></span><br><span class="line"><span class="comment">//          &#125;</span></span><br><span class="line"><span class="comment">////          else if(area_label[i]!=area_label[j])&#123;</span></span><br><span class="line"><span class="comment">////            //已经标记过，保存等价对 </span></span><br><span class="line"><span class="comment">////            equalLabels[nel][0]=area_label[i];</span></span><br><span class="line"><span class="comment">////            equalLabels[nel++][1]=area_label[j];</span></span><br><span class="line"><span class="comment">////          &#125;</span></span><br><span class="line"><span class="comment">//        &#125;else if(area_end[i]&lt;area_start[j]-offset)&#123;</span></span><br><span class="line"><span class="comment">//          //不相连的情况 </span></span><br><span class="line"><span class="comment">//          if(index_preFirstArea&lt;j-1)</span></span><br><span class="line"><span class="comment">//            index_preFirstArea=j-1;</span></span><br><span class="line"><span class="comment">//          j=index_preLastArea;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//      &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    //这一行循环完与上一行不存在联系 </span></span><br><span class="line"><span class="comment">//    if(area_label[i]==0)&#123;</span></span><br><span class="line"><span class="comment">//      area_label[i] = ++label;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _imgDeal_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _imgDeal_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 宏定 义 **************************** </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col MT9V03X_W <span class="comment">//120 //MT9V03X_W 宽 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row   MT9V03X_H<span class="comment">//80 //MT9V03X_H 高 </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GrayScale 256</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxnum 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> offset 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 变量定义 ****************************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> uint8 threshold;</span><br><span class="line"><span class="keyword">extern</span> uint8 mid_x,mid_y;</span><br><span class="line"><span class="keyword">extern</span> uint8 pre_x,pre_y;</span><br><span class="line"><span class="keyword">extern</span> uint8 zero,count_beacon;</span><br><span class="line"><span class="keyword">extern</span> uint8 bin_img[row][col]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> uint8 area_start[maxnum];</span><br><span class="line"><span class="keyword">extern</span> uint8 area_end[maxnum];</span><br><span class="line"><span class="keyword">extern</span> uint8 area_row[maxnum];</span><br><span class="line"><span class="keyword">extern</span> uint8 num_area;           </span><br><span class="line"><span class="keyword">extern</span> uint8 area_label[maxnum];</span><br><span class="line"><span class="keyword">extern</span> uint8 point[col+<span class="number">20</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">extern</span> uint8 flag_beacon,flag_row;</span><br><span class="line"><span class="comment">//extern uint8 stick_flag;</span></span><br><span class="line"><span class="comment">//extern uint8 equalLabels[maxnum][2];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 函数定义 ****************************</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">Find_Beacon</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(uint8 threshold)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> uint8 <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">searchArea</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">markArea</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">Connect_domains</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">Find_CenterPoint</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> uint8 <span class="title">stick</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GrayScale 256</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxnum 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> offset 0</span></span><br><span class="line"></span><br><span class="line">uint8 mid_x,mid_y;</span><br><span class="line">uint8 pre_x,pre_y;</span><br><span class="line">uint8 zero=<span class="number">0</span>;</span><br><span class="line">uint8 bias;</span><br><span class="line">uint8 stick_flag=<span class="number">0</span>;<span class="comment">//判断车是否被卡死</span></span><br><span class="line">uint8 count_beacon=<span class="number">0</span>;</span><br><span class="line">uint8 flag_beacon=<span class="number">0</span>;</span><br><span class="line">uint8 begin_beacon=<span class="number">0</span>;</span><br><span class="line">uint8 automatic_start=<span class="number">0</span>;</span><br><span class="line">uint8 flag1=<span class="number">0</span>;</span><br><span class="line">uint8 threshold;<span class="comment">//=70;//灰20-70；白70-126 -127-0</span></span><br><span class="line">uint8 bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line">uint8 domains[row][col]; <span class="comment">//连通域图</span></span><br><span class="line"></span><br><span class="line">uint8 area_start[maxnum];</span><br><span class="line">uint8 area_end[maxnum];</span><br><span class="line">uint8 area_row[maxnum];</span><br><span class="line">uint8 num_area;   </span><br><span class="line">uint8 area_label[maxnum];</span><br><span class="line">uint8 point[col+<span class="number">20</span>][<span class="number">2</span>];</span><br><span class="line"><span class="comment">//int equalLabels[maxnum][2];</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以不加二值化浪费时间，直接通过阈值来判断</span></span><br><span class="line"><span class="comment">//只改变与偏差有关的，与中线有关的间接有关的都不改变</span></span><br><span class="line"><span class="comment">//滤波等，思考……效率问题</span></span><br><span class="line"><span class="comment">//#define RED0xF800// 红色</span></span><br><span class="line"><span class="comment">//#define BLUE0x001F// 蓝色</span></span><br><span class="line"><span class="comment">//#define YELLOW0xFFE0// 黄色</span></span><br><span class="line"><span class="comment">//#define GREEN0x07E0// 绿色</span></span><br><span class="line"><span class="comment">//#define WHITE0xFFFF// 白色</span></span><br><span class="line"><span class="comment">//#define BLACK0x0000// 黑色 </span></span><br><span class="line"><span class="comment">//#define GRAY0X8430// 灰色</span></span><br><span class="line"><span class="comment">//#define BROWN0XBC40// 棕色</span></span><br><span class="line"><span class="comment">//#define PURPLE0XF81F// 紫色</span></span><br><span class="line"><span class="comment">//#define PINK0XFE19</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">  <span class="keyword">if</span>(mt9v03x_finish_flag)</span><br><span class="line">  &#123;</span><br><span class="line">    mt9v03x_finish_flag=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    stick_flag = stick();</span><br><span class="line">    threshold=<span class="number">70</span>;</span><br><span class="line"><span class="comment">//    ips200_showfloat(0,15,threshold,6,3);</span></span><br><span class="line"><span class="comment">//    if(threshold&lt;70)threshold=70;</span></span><br><span class="line">    Binarization(threshold);</span><br><span class="line">    ips200_displayimage032(bin_img[<span class="number">0</span>],col, row);</span><br><span class="line">    Find_Beacon(); </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_Beacon</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="comment">//  Connect_domains();</span></span><br><span class="line">  pre_x=mid_x;</span><br><span class="line">  pre_y=mid_y;</span><br><span class="line">  Find_CenterPoint();</span><br><span class="line"><span class="comment">//  if(mid_x==0&amp;&amp;mid_y==0)&#123;</span></span><br><span class="line"><span class="comment">//    mid_x=pre_x;</span></span><br><span class="line"><span class="comment">//    mid_y=pre_y;</span></span><br><span class="line"><span class="comment">//  &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一直怼着信标灯,出现卡死状态</span></span><br><span class="line"><span class="function">uint8 <span class="title">stick</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  bias = mid_y-pre_y;</span><br><span class="line">  <span class="keyword">if</span>(bias==<span class="number">0</span>)&#123;</span><br><span class="line">    zero++;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    zero=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(zero&gt;=<span class="number">3</span>&amp;&amp;flag1==<span class="number">1</span>)&#123;</span><br><span class="line">    zero=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//找中心点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_CenterPoint</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 i,j;</span><br><span class="line">  uint8 point_count=<span class="number">0</span>;</span><br><span class="line">  uint8 x,y,row_current=<span class="number">0</span>;</span><br><span class="line">  uint8 left,right,top,bottom;</span><br><span class="line">  uint8 n=<span class="number">0</span>;</span><br><span class="line">  uint16 sum_x=<span class="number">0</span>,sum_y=<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(row_current!=i)&#123;</span><br><span class="line">        point_count=<span class="number">0</span>;</span><br><span class="line">        row_current=i;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(bin_img[i][j]==white)&#123;</span><br><span class="line">        point_count++;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(point_count&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">          x = j<span class="number">-1</span>-point_count/<span class="number">2</span>;</span><br><span class="line">          y = i;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">while</span>(bin_img[y][x-left]==white)&#123;</span><br><span class="line">            left++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y][x+right]==white)&#123;</span><br><span class="line">            right++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y-top][x]==white)&#123;</span><br><span class="line">            top++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">while</span>(bin_img[y+bottom][x]==white)&#123;</span><br><span class="line">            bottom++;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span>((bottom-top)&lt;<span class="number">2</span>&amp;&amp;(top-bottom)&lt;<span class="number">2</span>&amp;&amp;(left-right)&lt;<span class="number">2</span>&amp;&amp;(right-left)&lt;<span class="number">2</span>)&#123;</span><br><span class="line">            </span><br><span class="line"><span class="comment">//              point[n][0]=x;</span></span><br><span class="line"><span class="comment">//              point[n++][1]=y;</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x+1,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x-1,y,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y-1,RED);</span></span><br><span class="line"><span class="comment">//              ips200_drawpoint(x,y+1,RED);</span></span><br><span class="line">            sum_x += x;</span><br><span class="line">            sum_y += y;</span><br><span class="line">            n++;</span><br><span class="line">            flag1=<span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        point_count=<span class="number">0</span>;</span><br><span class="line">        left=right=top=bottom=<span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mid_x = sum_x/n;<span class="comment">//信标灯纵坐标</span></span><br><span class="line">  mid_y = sum_y/n;<span class="comment">//信标灯横坐标</span></span><br><span class="line">  ips200_drawpoint(mid_x,mid_y,RED);</span><br><span class="line">  ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y,RED);</span><br><span class="line">  ips200_drawpoint(mid_x<span class="number">-1</span>,mid_y,RED);</span><br><span class="line">  ips200_drawpoint(mid_x,mid_y<span class="number">-1</span>,RED);</span><br><span class="line">  ips200_drawpoint(mid_x,mid_y+<span class="number">1</span>,RED);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(mid_x==<span class="number">0</span>)&#123;</span><br><span class="line">    count_beacon++;</span><br><span class="line">    <span class="keyword">if</span>(count_beacon&gt;=<span class="number">3</span>)&#123;</span><br><span class="line">      flag_beacon=<span class="number">0</span>;<span class="comment">//没找到信标灯</span></span><br><span class="line">      mid_x=<span class="number">0</span>;</span><br><span class="line">      mid_y=<span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      begin_beacon=<span class="number">1</span>;<span class="comment">//信标灯打开</span></span><br><span class="line">      count_beacon=<span class="number">0</span>;</span><br><span class="line">      flag_beacon=<span class="number">1</span>;<span class="comment">//找到信标灯</span></span><br><span class="line">      automatic_start=<span class="number">1</span>;<span class="comment">//自动发车标志位</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图像二值化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(uint8 threshold)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  uint8 i,j;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;col; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      domains[i][j]=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span>(mt9v03x_image[i][j]&gt;threshold)</span><br><span class="line">        bin_img[i][j]=white;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        bin_img[i][j]=black;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大津算法</span></span><br><span class="line"><span class="function">uint8 <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  uint16 i,j;</span><br><span class="line">  uint8 img_row=row,img_col=col; </span><br><span class="line">  uint16 histogram[GrayScale]; <span class="comment">//灰度直方图</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第一步：初始化灰度直方图</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;GrayScale; i++)</span><br><span class="line">    histogram[i]=<span class="number">0</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第二步：统计每个灰度值出现得次数</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;img_row; i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;img_col; j++)</span><br><span class="line">      ++histogram[mt9v03x_image[i][j]];</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第三步： 获取最小最大灰度值</span></span><br><span class="line">  uint16 minGray,maxGray;</span><br><span class="line">  <span class="keyword">for</span>(minGray=<span class="number">0</span>;minGray&lt;<span class="number">256</span>&amp;&amp;histogram[minGray]==<span class="number">0</span>;minGray++);</span><br><span class="line">  <span class="keyword">for</span>(maxGray=<span class="number">255</span>;maxGray&gt;minGray&amp;&amp;histogram[maxGray]==<span class="number">0</span>;maxGray--);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第四步：分情况讨论</span></span><br><span class="line">  <span class="comment">// 最大=最小，图像只有一种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray)</span><br><span class="line">    <span class="keyword">return</span> maxGray;</span><br><span class="line">  <span class="comment">//最大=最小+1，图像只有两种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> minGray;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第五步：统计[最小,最大]范围内的像素总数</span></span><br><span class="line">  uint16 PixelSum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">    PixelSum += histogram[i];</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第六步：统计[最小,最大]范围内的灰度值总数(灰度值*出现次数)</span></span><br><span class="line">  uint16 GraySum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">    GraySum += histogram[i]*i;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  <span class="comment">//第七步： 大津法优化</span></span><br><span class="line">  <span class="keyword">float</span> w0; <span class="comment">//前景像素点占整幅图像的百分比 </span></span><br><span class="line">  <span class="keyword">float</span> w1; <span class="comment">//背景像素点占整幅图像的百分比 </span></span><br><span class="line">  uint16 w0num; <span class="comment">//前景像素点数 </span></span><br><span class="line">  uint16 w1num; <span class="comment">// 背景像素点数 </span></span><br><span class="line">  uint16 u0gray; <span class="comment">//前景灰度值 </span></span><br><span class="line">  uint16 u1gray; <span class="comment">//背景灰度值 </span></span><br><span class="line">  <span class="keyword">float</span> u0; <span class="comment">//w0平均灰度</span></span><br><span class="line">  <span class="keyword">float</span> u1; <span class="comment">//w1平均灰度</span></span><br><span class="line">  <span class="keyword">float</span> deltaTmp=<span class="number">0</span>,deltaMax=<span class="number">-1</span>;</span><br><span class="line">  uint8 th;</span><br><span class="line">  </span><br><span class="line">  u0gray = u1gray = w0num = w1num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    w0num += histogram[i];</span><br><span class="line">    w1num = PixelSum-w0num;</span><br><span class="line">    w0 = w0num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    w1 = w1num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    u0gray += histogram[i]*i;</span><br><span class="line">    u1gray = GraySum-u0gray;</span><br><span class="line">    u0 = u0gray*<span class="number">1.0</span>/w0num;</span><br><span class="line">    u1 = u1gray*<span class="number">1.0</span>/w1num;</span><br><span class="line">    deltaTmp = (<span class="keyword">float</span>)(w0 * w1 * (u0 - u1)*(u0 - u1)); </span><br><span class="line">    <span class="comment">//类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//第八步：遍历最大类间方差（因为呈正态分布） </span></span><br><span class="line">    <span class="keyword">if</span>(deltaTmp&gt;deltaMax)</span><br><span class="line">    &#123;</span><br><span class="line">      deltaMax = deltaTmp;</span><br><span class="line">      th = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> th; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连通域</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Connect_domains</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint16 i,j;</span><br><span class="line">  uint8 s,e,r,l;</span><br><span class="line">  searchArea();</span><br><span class="line">  markArea();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">    r=area_row[i];</span><br><span class="line">    s=area_start[i];</span><br><span class="line">    e=area_end[i];</span><br><span class="line">    l=area_label[i];</span><br><span class="line">    <span class="keyword">for</span>(j=s;j&lt;=e;j++)&#123;</span><br><span class="line">      domains[r][j]=l;</span><br><span class="line"><span class="comment">//      ips200_drawpoint(j,r,RED);</span></span><br><span class="line"><span class="comment">//      ips200_drawpoint(j+1,r,RED);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">searchArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 i,j;</span><br><span class="line">  uint16 ns=<span class="number">0</span>,ne=<span class="number">0</span>,nr=<span class="number">0</span>;</span><br><span class="line">  num_area = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(bin_img[i][<span class="number">0</span>]==white)&#123;</span><br><span class="line">      num_area++;</span><br><span class="line">      area_start[ns++]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;col;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(bin_img[i][j<span class="number">-1</span>]==black&amp;&amp;bin_img[i][j]==white)&#123;</span><br><span class="line">        num_area++;</span><br><span class="line">        area_start[ns++]=j;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bin_img[i][j]==black&amp;&amp;bin_img[i][j<span class="number">-1</span>]==white)&#123;</span><br><span class="line">        area_end[ne++]=j<span class="number">-1</span>;</span><br><span class="line">        area_row[nr++]=i;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(bin_img[i][col<span class="number">-1</span>]==white)&#123;</span><br><span class="line">      area_end[ne++]=col<span class="number">-1</span>;</span><br><span class="line">      area_row[nr++]=i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">markArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 i,j;</span><br><span class="line"><span class="comment">//  int nel=0;</span></span><br><span class="line">  uint8 label=<span class="number">1</span>;</span><br><span class="line">  uint8 row_current=<span class="number">0</span>;</span><br><span class="line">  uint8 index_currentFirstArea=<span class="number">0</span>;</span><br><span class="line">  uint8 index_preFirstArea=<span class="number">0</span>;</span><br><span class="line">  uint8 index_preLastArea=<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">    area_label[i]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">    <span class="comment">//轮到下一行时，变量更新 </span></span><br><span class="line">    <span class="keyword">if</span>(row_current!=area_row[i])&#123;</span><br><span class="line">      row_current = area_row[i];</span><br><span class="line">      index_preFirstArea = index_currentFirstArea;</span><br><span class="line">      index_preLastArea = i<span class="number">-1</span>;</span><br><span class="line">      index_currentFirstArea = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(row_current!=area_row[index_preFirstArea]+<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="comment">//相邻行不存在子区域 </span></span><br><span class="line">      area_label[i]=label++;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//当前行与上一行进行比较 </span></span><br><span class="line">      <span class="keyword">for</span>(j=index_preFirstArea;j&lt;=index_preLastArea;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(area_start[i]&lt;=area_end[j]+offset&amp;&amp;area_end[i]&gt;=area_start[j]-offset)&#123;</span><br><span class="line">          <span class="comment">//相连的情况 </span></span><br><span class="line">          <span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//没有标记情况 </span></span><br><span class="line">            area_label[i]=area_label[j];</span><br><span class="line">          &#125;</span><br><span class="line"><span class="comment">//          else if(area_label[i]!=area_label[j])&#123;</span></span><br><span class="line"><span class="comment">//            //已经标记过，保存等价对 </span></span><br><span class="line"><span class="comment">//            equalLabels[nel][0]=area_label[i];</span></span><br><span class="line"><span class="comment">//            equalLabels[nel++][1]=area_label[j];</span></span><br><span class="line"><span class="comment">//          &#125;</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(area_end[i]&lt;area_start[j]-offset)&#123;</span><br><span class="line">          <span class="comment">//不相连的情况 </span></span><br><span class="line">          <span class="keyword">if</span>(index_preFirstArea&lt;j<span class="number">-1</span>)</span><br><span class="line">            index_preFirstArea=j<span class="number">-1</span>;</span><br><span class="line">          j=index_preLastArea;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//这一行循环完与上一行不存在联系 </span></span><br><span class="line">    <span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line">      area_label[i] = ++label;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2022</span>/<span class="number">7</span>/<span class="number">4</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GrayScale 256</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mid_x,mid_y;</span><br><span class="line"><span class="keyword">int</span> threshold;<span class="comment">//=70;//灰20-70；白70-126 -127-0</span></span><br><span class="line">uint8 bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以不加二值化浪费时间，直接通过阈值来判断</span></span><br><span class="line"><span class="comment">//只改变与偏差有关的，与中线有关的间接有关的都不改变</span></span><br><span class="line"><span class="comment">//滤波等，思考……效率问题</span></span><br><span class="line"><span class="comment">//#define RED0xF800// 红色</span></span><br><span class="line"><span class="comment">//#define BLUE0x001F// 蓝色</span></span><br><span class="line"><span class="comment">//#define YELLOW0xFFE0// 黄色</span></span><br><span class="line"><span class="comment">//#define GREEN0x07E0// 绿色</span></span><br><span class="line"><span class="comment">//#define WHITE0xFFFF// 白色</span></span><br><span class="line"><span class="comment">//#define BLACK0x0000// 黑色 </span></span><br><span class="line"><span class="comment">//#define GRAY0X8430// 灰色</span></span><br><span class="line"><span class="comment">//#define BROWN0XBC40// 棕色</span></span><br><span class="line"><span class="comment">//#define PURPLE0XF81F// 紫色</span></span><br><span class="line"><span class="comment">//#define PINK0XFE19</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">  <span class="keyword">if</span>(mt9v03x_finish_flag)</span><br><span class="line">  &#123;</span><br><span class="line"><span class="comment">//    threshold=OTSU();</span></span><br><span class="line"><span class="comment">//    ips200_showfloat(0,15,threshold,6,3);</span></span><br><span class="line"><span class="comment">//    if(threshold&lt;90)threshold=90;</span></span><br><span class="line"><span class="comment">//    threshold=255;</span></span><br><span class="line">    <span class="comment">//加一个：黑白天阈值限定</span></span><br><span class="line"><span class="comment">//    Binarization(threshold);</span></span><br><span class="line"><span class="comment">//    ips200_displayimage032(bin_img[0],col, row);</span></span><br><span class="line"><span class="comment">//    Find_Beacon();</span></span><br><span class="line"><span class="comment">//    ips200_showfloat(0,15,mt9v03x_image[60][100],6,3);</span></span><br><span class="line"><span class="comment">//    ips200_displayimage032(mt9v03x_image[0],col, row);</span></span><br><span class="line"><span class="comment">//    ips200_drawpoint(100,60,RED);</span></span><br><span class="line"><span class="comment">//    Scan_Point1();</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_Beacon</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> n_row=<span class="number">0</span>,n_col=<span class="number">0</span>,sum_row=<span class="number">0</span>,sum_col=<span class="number">0</span>;<span class="comment">//记录白块的行和列的个数，行或列的总和</span></span><br><span class="line">    <span class="keyword">int</span> n1,n2;</span><br><span class="line"><span class="keyword">int</span> point_row[col];<span class="comment">//记录每行白点所在列 </span></span><br><span class="line"><span class="keyword">int</span> point_col[row][<span class="number">5</span>];<span class="comment">//记录每行所有连续白点的中心线 </span></span><br><span class="line">    <span class="keyword">int</span> point_temp[row][<span class="number">2</span>];<span class="comment">//记下每行产生连续白点行数和产生的连续白点数 </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        point_temp[i][<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_temp[i][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        point_col[i][<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">2</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">3</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">4</span>] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line">n_row = <span class="number">0</span>,sum_row=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//memset(point_row,-1,sizeof(point_row));</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((mt9v03x_image[i][j<span class="number">-1</span>]&gt;threshold)&amp;&amp;(mt9v03x_image[i][j]&gt;threshold)&amp;&amp;(mt9v03x_image[i][j+<span class="number">1</span>]&gt;threshold))</span><br><span class="line">&#123;</span><br><span class="line">point_row[n_row++] = j;<span class="comment">//记下连续白点的列</span></span><br><span class="line">point_temp[i][<span class="number">0</span>] = i;  <span class="comment">//记下存在白点的行  </span></span><br><span class="line"><span class="comment">//                                ips200_drawpoint(j,i,RED);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(n_row!=<span class="number">0</span>)&#123;<span class="comment">//可以使用120个点的如果点与点间又3个点的间隔就算另一个图</span></span><br><span class="line">point_temp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">n1 = <span class="number">0</span>,n2=<span class="number">0</span>; <span class="comment">//记录第几个白块(存列数),记录有多少个连续的白点 </span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n_row;j++)</span><br><span class="line">&#123;</span><br><span class="line">sum_row += point_row[j];</span><br><span class="line">n2++;</span><br><span class="line">                <span class="keyword">if</span>(point_row[j+<span class="number">1</span>]-point_row[j]&gt;<span class="number">2</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                point_temp[i][<span class="number">1</span>]++;</span><br><span class="line">                point_col[i][n1++] = sum_row/n2;</span><br><span class="line">                sum_row = <span class="number">0</span>;</span><br><span class="line">                n2 = <span class="number">0</span>;</span><br><span class="line">&#125;         </span><br><span class="line">&#125;</span><br><span class="line">            n_col++;</span><br><span class="line">            ips200_drawpoint(point_col[i][<span class="number">0</span>],i,BLUE);</span><br><span class="line">            ips200_drawpoint(point_col[i][<span class="number">0</span>],i+<span class="number">1</span>,BLUE);</span><br><span class="line">            ips200_drawpoint(point_col[i][<span class="number">0</span>],i<span class="number">-1</span>,BLUE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span>(n_col==<span class="number">0</span>&amp;&amp;n_row==<span class="number">0</span>)&#123;<span class="comment">//找不到点 </span></span><br><span class="line">mid_x = col/<span class="number">2</span>;</span><br><span class="line">mid_y = row/<span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        n_row = <span class="number">0</span>,n_col=<span class="number">0</span>;</span><br><span class="line">        sum_row=<span class="number">0</span>,sum_col=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;row;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(point_temp[i][<span class="number">1</span>]==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        sum_col += point_col[i][<span class="number">0</span>];</span><br><span class="line">        sum_row += point_temp[i][<span class="number">0</span>];</span><br><span class="line">        n_row++;</span><br><span class="line">        <span class="keyword">if</span>(point_col[i+<span class="number">1</span>][<span class="number">0</span>]==<span class="number">-1</span>&amp;&amp;point_col[i<span class="number">-1</span>][<span class="number">0</span>]==<span class="number">-1</span>&amp;&amp;<span class="built_in">fabs</span>(point_col[i+<span class="number">1</span>]-point_col[i])&gt;<span class="number">2</span>&amp;&amp;<span class="built_in">fabs</span>(point_col[i<span class="number">-1</span>]-point_col[i])&gt;<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        mid_x = sum_col/n_row;</span><br><span class="line">        mid_y = sum_row/n_row;</span><br><span class="line">        sum_row = <span class="number">0</span>;</span><br><span class="line">        sum_col = <span class="number">0</span>;</span><br><span class="line">        n_row = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//        ips200_showfloat(0,13,n_row,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,14,sum_col,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,15,sum_row,4,3);</span></span><br><span class="line">        ips200_showfloat(<span class="number">0</span>,<span class="number">16</span>,mid_x,<span class="number">4</span>,<span class="number">3</span>);</span><br><span class="line">        ips200_showfloat(<span class="number">0</span>,<span class="number">17</span>,mid_y,<span class="number">4</span>,<span class="number">3</span>);</span><br><span class="line">        </span><br><span class="line">    ips200_drawpoint(mid_y,mid_x,RED);<span class="comment">//列，行</span></span><br><span class="line">    ips200_drawpoint(mid_y,mid_x+<span class="number">1</span>,RED);</span><br><span class="line">    ips200_drawpoint(mid_y+<span class="number">1</span>,mid_x,RED);</span><br><span class="line">    ips200_drawpoint(mid_y+<span class="number">1</span>,mid_x+<span class="number">1</span>,RED);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图像二值化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(<span class="keyword">int</span> threshold)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; i++)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;col; j++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(mt9v03x_image[i][j]&gt;threshold)</span><br><span class="line">        bin_img[i][j]=white;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        bin_img[i][j]=black;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大津算法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  <span class="keyword">int</span> img_row=row,img_col=col; </span><br><span class="line">  <span class="keyword">int</span> histogram[GrayScale]; <span class="comment">//灰度直方图</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第一步：初始化灰度直方图</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;GrayScale; i++)</span><br><span class="line">    histogram[i]=<span class="number">0</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第二步：统计每个灰度值出现得次数</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;img_row; i++)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;img_col; j++)</span><br><span class="line">      ++histogram[mt9v03x_image[i][j]];</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第三步： 获取最小最大灰度值</span></span><br><span class="line">  <span class="keyword">int</span> minGray,maxGray;</span><br><span class="line">  <span class="keyword">for</span>(minGray=<span class="number">0</span>;minGray&lt;<span class="number">256</span>&amp;&amp;histogram[minGray]==<span class="number">0</span>;minGray++);</span><br><span class="line">  <span class="keyword">for</span>(maxGray=<span class="number">255</span>;maxGray&gt;minGray&amp;&amp;histogram[maxGray]==<span class="number">0</span>;maxGray--);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第四步：分情况讨论</span></span><br><span class="line">  <span class="comment">// 最大=最小，图像只有一种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray)</span><br><span class="line">    <span class="keyword">return</span> maxGray;</span><br><span class="line">  <span class="comment">//最大=最小+1，图像只有两种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> minGray;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第五步：统计[最小,最大]范围内的像素总数</span></span><br><span class="line">  <span class="keyword">int</span> PixelSum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">    PixelSum += histogram[i];</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第六步：统计[最小,最大]范围内的灰度值总数(灰度值*出现次数)</span></span><br><span class="line">  <span class="keyword">int</span> GraySum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">    GraySum += histogram[i]*i;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">  <span class="comment">//第七步： 大津法优化</span></span><br><span class="line">  <span class="keyword">double</span> w0; <span class="comment">//前景像素点占整幅图像的百分比 </span></span><br><span class="line">  <span class="keyword">double</span> w1; <span class="comment">//背景像素点占整幅图像的百分比 </span></span><br><span class="line">  <span class="keyword">int</span> w0num; <span class="comment">//前景像素点数 </span></span><br><span class="line">  <span class="keyword">int</span> w1num; <span class="comment">// 背景像素点数 </span></span><br><span class="line">  <span class="keyword">int</span> u0gray; <span class="comment">//前景灰度值 </span></span><br><span class="line">  <span class="keyword">int</span> u1gray; <span class="comment">//背景灰度值 </span></span><br><span class="line">  <span class="keyword">double</span> u0; <span class="comment">//w0平均灰度</span></span><br><span class="line">  <span class="keyword">double</span> u1; <span class="comment">//w1平均灰度</span></span><br><span class="line">  <span class="keyword">double</span> deltaTmp=<span class="number">0</span>,deltaMax=<span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> th;</span><br><span class="line">  </span><br><span class="line">  u0gray = u1gray = w0num = w1num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    w0num += histogram[i];</span><br><span class="line">    w1num = PixelSum-w0num;</span><br><span class="line">    w0 = w0num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    w1 = w1num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    u0gray += histogram[i]*i;</span><br><span class="line">    u1gray = GraySum-u0gray;</span><br><span class="line">    u0 = u0gray*<span class="number">1.0</span>/w0num;</span><br><span class="line">    u1 = u1gray*<span class="number">1.0</span>/w1num;</span><br><span class="line">    deltaTmp = (<span class="keyword">float</span>)(w0 * w1 * (u0 - u1)*(u0 - u1)); </span><br><span class="line">    <span class="comment">//类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//第八步：遍历最大类间方差（因为呈正态分布） </span></span><br><span class="line">    <span class="keyword">if</span>(deltaTmp&gt;deltaMax)</span><br><span class="line">    &#123;</span><br><span class="line">      deltaMax = deltaTmp;</span><br><span class="line">      th = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> th; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(<span class="keyword">int</span> threshold)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; ++i)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;col; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(mt9v03x_image[i][j]&gt;threshold)</span><br><span class="line">        bin_img[i][j]=white;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        bin_img[i][j]=black;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_Beacon</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> n_row=<span class="number">0</span>,n_col=<span class="number">0</span>,sum_row=<span class="number">0</span>,sum_col=<span class="number">0</span>;<span class="comment">//记录白块的行和列的个数，行或列的总和</span></span><br><span class="line">    <span class="keyword">int</span> n1,n2;</span><br><span class="line"><span class="keyword">int</span> point_row[col];<span class="comment">//记录每行白点所在列 </span></span><br><span class="line"><span class="keyword">int</span> point_col[row][<span class="number">5</span>];<span class="comment">//记录每行所有连续白点的中心线 </span></span><br><span class="line">    <span class="keyword">int</span> point_temp[row][<span class="number">2</span>];<span class="comment">//记下每行产生连续白点行数和产生的连续白点数 </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        point_temp[i][<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_temp[i][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        point_col[i][<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">2</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">3</span>] = <span class="number">-1</span>;</span><br><span class="line">        point_col[i][<span class="number">4</span>] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line">n_row = <span class="number">0</span>,sum_row=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//memset(point_row,-1,sizeof(point_row));</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((mt9v03x_image[i][j<span class="number">-1</span>]&gt;threshold)&amp;&amp;(mt9v03x_image[i][j]&gt;threshold)&amp;&amp;(mt9v03x_image[i][j+<span class="number">1</span>]&gt;threshold))</span><br><span class="line">&#123;</span><br><span class="line">point_row[n_row++] = j;<span class="comment">//记下连续白点的列</span></span><br><span class="line">point_temp[i][<span class="number">0</span>] = i;  <span class="comment">//记下存在白点的行  </span></span><br><span class="line"><span class="comment">//                                ips200_drawpoint(j,i,RED);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(n_row!=<span class="number">0</span>)&#123;<span class="comment">//可以使用120个点的如果点与点间又3个点的间隔就算另一个图</span></span><br><span class="line">point_temp[i][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">n1 = <span class="number">0</span>,n2=<span class="number">0</span>; <span class="comment">//记录第几个白块(存列数),记录有多少个连续的白点 </span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n_row;j++)</span><br><span class="line">&#123;</span><br><span class="line">sum_row += point_row[j];</span><br><span class="line">n2++;</span><br><span class="line">                <span class="keyword">if</span>(point_row[j+<span class="number">1</span>]-point_row[j]&gt;<span class="number">2</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                point_temp[i][<span class="number">1</span>]++;</span><br><span class="line">                point_col[i][n1++] = sum_row/n2;</span><br><span class="line">                sum_row = <span class="number">0</span>;</span><br><span class="line">                n2 = <span class="number">0</span>;</span><br><span class="line">&#125;         </span><br><span class="line">&#125;</span><br><span class="line">            n_col++;</span><br><span class="line">            ips200_drawpoint(point_col[i][<span class="number">0</span>],i,BLUE);</span><br><span class="line">            ips200_drawpoint(point_col[i][<span class="number">0</span>],i+<span class="number">1</span>,BLUE);</span><br><span class="line">            ips200_drawpoint(point_col[i][<span class="number">0</span>],i<span class="number">-1</span>,BLUE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span>(n_col==<span class="number">0</span>&amp;&amp;n_row==<span class="number">0</span>)&#123;<span class="comment">//找不到点 </span></span><br><span class="line">mid_x = col/<span class="number">2</span>;</span><br><span class="line">mid_y = row/<span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123; </span><br><span class="line">        n_row = <span class="number">0</span>,n_col=<span class="number">0</span>;</span><br><span class="line">        sum_row=<span class="number">0</span>,sum_col=<span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;row;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span>(point_temp[i][<span class="number">1</span>]==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        sum_col += point_col[i][<span class="number">0</span>];</span><br><span class="line">        sum_row += point_temp[i][<span class="number">0</span>];</span><br><span class="line">        n_row++;</span><br><span class="line">        <span class="keyword">if</span>(point_col[i+<span class="number">1</span>][<span class="number">0</span>]==<span class="number">-1</span>&amp;&amp;point_col[i<span class="number">-1</span>][<span class="number">0</span>]==<span class="number">-1</span>&amp;&amp;<span class="built_in">fabs</span>(point_col[i+<span class="number">1</span>]-point_col[i])&gt;<span class="number">2</span>&amp;&amp;<span class="built_in">fabs</span>(point_col[i<span class="number">-1</span>]-point_col[i])&gt;<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        mid_x = sum_col/n_row;</span><br><span class="line">        mid_y = sum_row/n_row;</span><br><span class="line">        sum_row = <span class="number">0</span>;</span><br><span class="line">        sum_col = <span class="number">0</span>;</span><br><span class="line">        n_row = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//        ips200_showfloat(0,13,n_row,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,14,sum_col,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,15,sum_row,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,16,mid_x,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,17,mid_y,4,3);</span></span><br><span class="line">        </span><br><span class="line">    ips200_drawpoint(mid_y,mid_x,RED);<span class="comment">//列，行</span></span><br><span class="line">    ips200_drawpoint(mid_y,mid_x+<span class="number">1</span>,RED);</span><br><span class="line">    ips200_drawpoint(mid_y+<span class="number">1</span>,mid_x,RED);</span><br><span class="line">    ips200_drawpoint(mid_y+<span class="number">1</span>,mid_x+<span class="number">1</span>,RED);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2022</span>/<span class="number">7</span>/<span class="number">2</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_Beacon</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">        <span class="keyword">int</span> n_row=<span class="number">0</span>,n_col=<span class="number">0</span>,sum_row=<span class="number">0</span>,sum_col=<span class="number">0</span>;<span class="comment">//记录白块的行和列的个数，行或列的总和</span></span><br><span class="line">        <span class="keyword">int</span> n_</span><br><span class="line"><span class="keyword">int</span> point_row[col];<span class="comment">//记录每行点的状态（黑/白)</span></span><br><span class="line"><span class="keyword">int</span> point_col[row][<span class="number">5</span>];<span class="comment">//记录每行有几个白块</span></span><br><span class="line">        <span class="keyword">int</span> point_temp[row][<span class="number">2</span>];<span class="comment">//记录每行是否有白块，并记下行数和产生的白块数</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">        &#123;</span><br><span class="line">          point_temp[i][<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">          point_temp[i][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line">n_row = <span class="number">0</span>,sum_row=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//memset(point_row,-1,sizeof(point_row));</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((mt9v03x_image[i][j<span class="number">-1</span>]&gt;threshold)&amp;&amp;(mt9v03x_image[i][j]&gt;threshold)&amp;&amp;(mt9v03x_image[i][j+<span class="number">1</span>]&gt;threshold))</span><br><span class="line">&#123;</span><br><span class="line">point_row[n_row++] = j;<span class="comment">//记下连续白点的列</span></span><br><span class="line">point_temp[i][<span class="number">0</span>] = i;  <span class="comment">//记下存在白点的行</span></span><br><span class="line">                              </span><br><span class="line"><span class="comment">//                                ips200_drawpoint(j,i,RED);</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(n_row!=<span class="number">0</span>)&#123;<span class="comment">//可以使用120个点的如果点与点间又3个点的间隔就算另一个图</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;n_row;j++)</span><br><span class="line">&#123;</span><br><span class="line">                          <span class="keyword">if</span>(point_row[j]-point_row[j<span class="number">-1</span>]&gt;<span class="number">2</span>)</span><br><span class="line">                            </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">point_col[i] = sum_row/n_row;</span><br><span class="line">                          n_col++;</span><br><span class="line">                        ips200_drawpoint(point_col[i],i,BLUE);</span><br><span class="line">                        ips200_drawpoint(point_col[i],i+<span class="number">1</span>,BLUE);</span><br><span class="line">                        ips200_drawpoint(point_col[i],i<span class="number">-1</span>,BLUE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"><span class="keyword">if</span>(n_col==<span class="number">0</span>&amp;&amp;n_row==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//找不到点 </span></span><br><span class="line">mid_x = col/<span class="number">2</span>;</span><br><span class="line">mid_y = row/<span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          </span><br><span class="line">                n_row = <span class="number">0</span>,n_col=<span class="number">0</span>;</span><br><span class="line">                sum_row=<span class="number">0</span>,sum_col=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;row<span class="number">-1</span>;i++)</span><br><span class="line">                &#123;</span><br><span class="line">                      <span class="keyword">if</span>(point_temp[i]!=<span class="number">0</span>&amp;&amp;point_temp[i+<span class="number">1</span>]!=<span class="number">0</span>&amp;&amp;point_temp[i<span class="number">-1</span>]!=<span class="number">0</span>)</span><br><span class="line">                      &#123;   </span><br><span class="line">                            sum_row += point_temp[i];             </span><br><span class="line">                            n_row++;</span><br><span class="line">                            sum_col += point_col[i];</span><br><span class="line">                      &#125;</span><br><span class="line">                &#125;</span><br><span class="line">mid_x = sum_col/n_row;</span><br><span class="line">mid_y = sum_row/n_row;</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//        ips200_showfloat(0,13,n_row,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,14,sum_col,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,15,sum_row,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,16,mid_x,4,3);</span></span><br><span class="line"><span class="comment">//        ips200_showfloat(0,17,mid_y,4,3);</span></span><br><span class="line">        </span><br><span class="line">        ips200_drawpoint(mid_y,mid_x,RED);<span class="comment">//列，行</span></span><br><span class="line">        ips200_drawpoint(mid_y,mid_x+<span class="number">1</span>,RED);</span><br><span class="line">        ips200_drawpoint(mid_y+<span class="number">1</span>,mid_x,RED);</span><br><span class="line">        ips200_drawpoint(mid_y+<span class="number">1</span>,mid_x+<span class="number">1</span>,RED);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(sumhang&gt;<span class="number">110</span>)</span><br><span class="line">          &#123;</span><br><span class="line">               KP1=<span class="number">15</span>;</span><br><span class="line">               KD1=<span class="number">0.1</span>;</span><br><span class="line">               KP2=<span class="number">15</span>;</span><br><span class="line">               KD1=<span class="number">0.1</span>;</span><br><span class="line">               setspeed2= <span class="number">20</span>+(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;</span><br><span class="line">               setspeed1= <span class="number">20</span>-(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               speedave=speed1+speed2;</span><br><span class="line">               <span class="keyword">if</span>(speedave&lt;<span class="number">80</span>)               &#123;</span><br><span class="line">                 setspeed1= <span class="number">200</span>-(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;<span class="comment">//1.5</span></span><br><span class="line">                 setspeed2= <span class="number">200</span>+(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;<span class="comment">//1.5;</span></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               MotorDuty1 =speedout1 - <span class="number">1.8</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">               MotorDuty2 =speedout2 + <span class="number">1.8</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(sumhang&gt;=<span class="number">33</span> &amp;&amp;sumhang &lt;=<span class="number">110</span>)          &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                   KP1=<span class="number">29</span>;</span><br><span class="line">                                    KD1=<span class="number">0.1</span>;</span><br><span class="line">                                    KP2=<span class="number">29</span>;</span><br><span class="line">                                    KD1=<span class="number">0.1</span>;</span><br><span class="line">                                    setspeed2= <span class="number">0</span>+(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;</span><br><span class="line">                                    setspeed1= <span class="number">0</span>-(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;</span><br><span class="line"></span><br><span class="line">                                                 speedave=speed1+speed2;</span><br><span class="line">                                                 <span class="keyword">if</span>(speedave&lt;<span class="number">80</span>)<span class="comment">//</span></span><br><span class="line">                                                 &#123;</span><br><span class="line">                                                     setspeed1= <span class="number">200</span>-(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;<span class="comment">//1.5</span></span><br><span class="line">                                                     setspeed2= <span class="number">200</span>+(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;<span class="comment">//1.5;</span></span><br><span class="line">                                                  &#125;</span><br><span class="line">                                                 MotorDuty1 =speedout1 - <span class="number">1.8</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">                                                 MotorDuty2 =speedout2 + <span class="number">1.8</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(sumhang&gt;=<span class="number">40</span> &amp;&amp;sumhang &lt;<span class="number">55</span>)<span class="comment">//滑行</span></span><br><span class="line">          &#123;</span><br><span class="line"></span><br><span class="line">              KP1=<span class="number">15</span>;</span><br><span class="line">               KD1=<span class="number">0.1</span>;</span><br><span class="line">             KP2=<span class="number">15</span>;</span><br><span class="line">            KD1=<span class="number">0.1</span>;</span><br><span class="line">           setspeed2= <span class="number">200</span>+(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;</span><br><span class="line">           setspeed1= <span class="number">200</span>-(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;</span><br><span class="line">           MotorDuty1 =speedout1 - <span class="number">1.8</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">           MotorDuty2 =speedout2 + <span class="number">1.8</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">else</span> <span class="keyword">if</span>(sumhang&lt;<span class="number">25</span>)<span class="comment">//加速</span></span><br><span class="line">          &#123;</span><br><span class="line">              KP1=<span class="number">15</span>;</span><br><span class="line">              KD1=<span class="number">0.1</span>;</span><br><span class="line">              KP2=<span class="number">15</span>;</span><br><span class="line">              KD1=<span class="number">0.1</span>;</span><br><span class="line">              setspeed2= <span class="number">330</span>+(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>+sumhang*<span class="number">10</span>;<span class="comment">//250</span></span><br><span class="line">              setspeed1= <span class="number">330</span>-(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>+sumhang*<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">              MotorDuty1 =speedout1 - <span class="number">2.5</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">              MotorDuty2 =speedout2 + <span class="number">2.5</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span><span class="comment">//冲</span></span><br><span class="line">          &#123;</span><br><span class="line">                       KP1=<span class="number">15</span>;</span><br><span class="line">                       KD1=<span class="number">0.1</span>;</span><br><span class="line">                       KP2=<span class="number">15</span>;</span><br><span class="line">                       KD1=<span class="number">0.1</span>;</span><br><span class="line">                       setspeed2= <span class="number">580</span>+(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;<span class="comment">//430//460</span></span><br><span class="line">                       setspeed1= <span class="number">580</span>-(sumlie<span class="number">-93</span>)*<span class="number">2.4</span>;<span class="comment">//430</span></span><br><span class="line"></span><br><span class="line">                       MotorDuty1 =speedout1 - <span class="number">3.6</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">                       MotorDuty2 =speedout2 + <span class="number">3.6</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span>(MotorDuty1&gt;<span class="number">6000</span>) MotorDuty1 =  <span class="number">6000</span>;<span class="comment">//限幅*********需测量</span></span><br><span class="line">          <span class="keyword">if</span>(MotorDuty2&gt;<span class="number">6000</span>) MotorDuty2 =  <span class="number">6000</span>;<span class="comment">//限幅</span></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span> <span class="comment">// 没有发现有白色点</span></span><br><span class="line">      &#123;</span><br><span class="line"></span><br><span class="line">                    nolight=<span class="number">1</span>;</span><br><span class="line">          beaconFlashCnt++;</span><br><span class="line">          </span><br><span class="line">          <span class="keyword">if</span>(beaconFlashCnt&gt;<span class="number">5</span>)                    &#123;</span><br><span class="line">              KP1=<span class="number">15</span>;</span><br><span class="line">              KD1=<span class="number">0.1</span>;</span><br><span class="line">              KP2=<span class="number">15</span>;</span><br><span class="line">              KD2=<span class="number">0.1</span>;</span><br><span class="line">              setspeed1= <span class="number">260</span>;</span><br><span class="line">              setspeed2= <span class="number">0</span>;</span><br><span class="line">              MotorDuty1 = speedout1 - <span class="number">0.5</span>*(gyroz+<span class="number">9</span>);      MotorDuty2 = speedout2 + <span class="number">0.5</span>*(gyroz+<span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">              <span class="comment">//sumhang=1;</span></span><br><span class="line">          &#125;</span><br><span class="line">       &#125;</span><br><span class="line">          <span class="keyword">if</span>(<span class="number">1</span>)</span><br><span class="line">      &#123;</span><br><span class="line">           </span><br><span class="line">MotorCtrl(-MotorDuty1, MotorDuty2);</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">          &#123;</span><br><span class="line">              MotorDuty1 =<span class="number">0</span>;</span><br><span class="line">              MotorDuty2 =<span class="number">0</span>;</span><br><span class="line">              MotorCtrl(-MotorDuty2 ,-MotorDuty1);</span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2022</span>/<span class="number">7</span>/<span class="number">1</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _imgDeal_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _imgDeal_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 宏定 义 **************************** </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col MT9V03X_W <span class="comment">//120 //MT9V03X_W 宽 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row   MT9V03X_H<span class="comment">//80 //MT9V03X_H 高 </span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 变量定义 ****************************</span></span><br><span class="line"><span class="keyword">extern</span> uint8 bin_img[row][col]; </span><br><span class="line"><span class="keyword">extern</span> uint8 gray_img[row][col]; </span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> point[row];</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> threshold;</span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> mid_x,mid_y;</span><br><span class="line"></span><br><span class="line"><span class="comment">// **************************** 函数定义 ****************************</span></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(<span class="keyword">int</span> threshold)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">Scan_Point1</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">Bin_Image_Filter</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">void</span> <span class="title">sign_Beacon</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> top,<span class="keyword">int</span> bottom)</span></span>;</span><br><span class="line"><span class="comment">//extern void sign_Beacon(int x,int y);</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GrayScale 256</span></span><br><span class="line"></span><br><span class="line">uint8 bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line">uint8 gray_img[row][col]; <span class="comment">//灰度图 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mid_x,mid_y;</span><br><span class="line"><span class="keyword">int</span> threshold;<span class="comment">//=70;//灰20-70；白70-126 -127-0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//可以不加二值化浪费时间，直接通过阈值来判断</span></span><br><span class="line"><span class="comment">//只改变与偏差有关的，与中线有关的间接有关的都不改变</span></span><br><span class="line"><span class="comment">//滤波等，思考……效率问题</span></span><br><span class="line"><span class="comment">//#define RED0xF800// 红色</span></span><br><span class="line"><span class="comment">//#define BLUE0x001F// 蓝色</span></span><br><span class="line"><span class="comment">//#define YELLOW0xFFE0// 黄色</span></span><br><span class="line"><span class="comment">//#define GREEN0x07E0// 绿色</span></span><br><span class="line"><span class="comment">//#define WHITE0xFFFF// 白色</span></span><br><span class="line"><span class="comment">//#define BLACK0x0000// 黑色 </span></span><br><span class="line"><span class="comment">//#define GRAY0X8430// 灰色</span></span><br><span class="line"><span class="comment">//#define BROWN0XBC40// 棕色</span></span><br><span class="line"><span class="comment">//#define PURPLE0XF81F// 紫色</span></span><br><span class="line"><span class="comment">//#define PINK0XFE19</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;    </span><br><span class="line">  <span class="keyword">if</span>(mt9v03x_finish_flag)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//            threshold=OTSU();</span></span><br><span class="line">    threshold=<span class="number">70</span>;</span><br><span class="line">    <span class="comment">//加一个：黑白天阈值限定</span></span><br><span class="line">    Binarization(threshold);</span><br><span class="line">    ips200_displayimage032(bin_img[<span class="number">0</span>],col, row);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//            ips200_displayimage032(mt9v03x_image[0],col, row);</span></span><br><span class="line">    Scan_Point1();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//简单找点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Scan_Point1</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j,k=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> left,right,top,bottom;</span><br><span class="line">  <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> point[row];</span><br><span class="line">  <span class="keyword">int</span> flag1=<span class="number">1</span>,flag2=<span class="number">1</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">    point[i] = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第一步：找到左右边界进行折半取中值</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">  &#123;</span><br><span class="line">    left=col,right=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col; )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(bin_img[i][j]==<span class="number">255</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span>(left==col)left=j;</span><br><span class="line">        right = j+<span class="number">1</span>;</span><br><span class="line">        flag1=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      j++;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(left&lt;right)point[i]=(left+right)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> point[i]=<span class="number">0xff</span>;</span><br><span class="line">    </span><br><span class="line">  &#125; </span><br><span class="line">  <span class="comment">//第二步：找到上下边界，折半得中点坐标</span></span><br><span class="line">  top=row,bottom=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(point[i]!=<span class="number">0xff</span>)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(top==row)top=i;</span><br><span class="line">      bottom=i+<span class="number">1</span>;</span><br><span class="line">      k += <span class="number">1</span>;</span><br><span class="line">      flag2=<span class="number">0</span>;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    i++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//第三步：判断是否存在在信标灯</span></span><br><span class="line">  <span class="keyword">if</span>(top&lt;=bottom)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(i=top;i&lt;=bottom;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(point[i]!=<span class="number">0xff</span>)sum += point[i];</span><br><span class="line">    &#125;</span><br><span class="line">    mid_x = sum/k;</span><br><span class="line">    mid_y = top+(bottom-top)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(flag1==<span class="number">0</span>&amp;&amp;flag2==<span class="number">0</span>)&#123;</span><br><span class="line">    ips200_drawpoint(mid_x,mid_y,RED);<span class="comment">//列，行</span></span><br><span class="line">    ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y+<span class="number">1</span>,RED);<span class="comment">//列，行</span></span><br><span class="line">    ips200_drawpoint(mid_x,mid_y+<span class="number">1</span>,RED);<span class="comment">//列，行</span></span><br><span class="line">    ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y,RED);<span class="comment">//列，行</span></span><br><span class="line">    sign_Beacon(mid_x,mid_y,top<span class="number">-10</span>,bottom+<span class="number">10</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(flag1==<span class="number">1</span>&amp;&amp;flag2==<span class="number">1</span>)&#123;</span><br><span class="line">    mid_x=<span class="number">120</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//标出信标灯的位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sign_Beacon</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> top,<span class="keyword">int</span> bottom)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  <span class="keyword">if</span>(top&lt;<span class="number">0</span>)top=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span>(bottom&gt;<span class="number">120</span>)bottom=<span class="number">120</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=top;i&lt;bottom;++i)</span><br><span class="line">  &#123;</span><br><span class="line">    ips200_drawpoint(x,i,RED);<span class="comment">//列，行</span></span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;++j)</span><br><span class="line">      ips200_drawpoint(j,y,RED);<span class="comment">//列，行</span></span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图像二值化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(<span class="keyword">int</span> threshold)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; ++i)</span><br><span class="line">  &#123; </span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;col; ++j)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>(mt9v03x_image[i][j]&gt;threshold)</span><br><span class="line">        bin_img[i][j]=white;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        bin_img[i][j]=black;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤噪点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bin_Image_Filter</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;row<span class="number">-1</span>;++i)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;col<span class="number">-1</span>;++j)</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span>((bin_img[i][j]==<span class="number">0</span>)&amp;&amp;(bin_img[i<span class="number">-1</span>][j]+bin_img[i<span class="number">-1</span>][j+<span class="number">1</span>]+bin_img[i+<span class="number">1</span>][j]+bin_img[i][j+<span class="number">1</span>]+bin_img[i][j+<span class="number">2</span>]&gt;<span class="number">3</span>))</span><br><span class="line">        bin_img[i][j]=<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>((bin_img[i][j]==<span class="number">1</span>)&amp;&amp;(bin_img[i<span class="number">-1</span>][j]+bin_img[i<span class="number">-1</span>][j+<span class="number">1</span>]+bin_img[i+<span class="number">1</span>][j]+bin_img[i][j+<span class="number">1</span>]+bin_img[i][j+<span class="number">2</span>]&lt;<span class="number">2</span>))</span><br><span class="line">        bin_img[i][j]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大津算法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  <span class="keyword">int</span> img_row=row,img_col=col; </span><br><span class="line">  <span class="keyword">int</span> histogram[GrayScale]; <span class="comment">//灰度直方图</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第一步：初始化灰度直方图</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;GrayScale; ++i)</span><br><span class="line">    histogram[i]=<span class="number">0</span>; </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第二步：统计每个灰度值出现得次数</span></span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;img_row; ++i)</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;img_col; ++j)</span><br><span class="line">      ++histogram[mt9v03x_image[i][j]];</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第三步： 获取最小最大灰度值</span></span><br><span class="line">  <span class="keyword">int</span> minGray,maxGray;</span><br><span class="line">  <span class="keyword">for</span>(minGray=<span class="number">0</span>;minGray&lt;<span class="number">256</span>&amp;&amp;histogram[minGray]==<span class="number">0</span>;++minGray);</span><br><span class="line">  <span class="keyword">for</span>(maxGray=<span class="number">255</span>;maxGray&gt;minGray&amp;&amp;histogram[minGray]==<span class="number">0</span>;--maxGray);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第四步：分情况讨论</span></span><br><span class="line">  <span class="comment">// 最大=最小，图像只有一种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray)</span><br><span class="line">    <span class="keyword">return</span> maxGray;</span><br><span class="line">  <span class="comment">//最大=最小+1，图像只有两种颜色</span></span><br><span class="line">  <span class="keyword">if</span>(maxGray==minGray+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> minGray;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第五步：统计[最小,最大]范围内的像素总数</span></span><br><span class="line">  <span class="keyword">int</span> PixelSum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; ++i)</span><br><span class="line">    PixelSum += histogram[i];</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第六步：统计[最小,最大]范围内的灰度值总数(灰度值*出现次数)</span></span><br><span class="line">  <span class="keyword">int</span> GraySum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; ++i)</span><br><span class="line">    GraySum += histogram[i]*i;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//第七步： 大津法优化</span></span><br><span class="line">  <span class="keyword">double</span> w0; <span class="comment">//前景像素点占整幅图像的百分比 </span></span><br><span class="line">  <span class="keyword">double</span> w1; <span class="comment">//背景像素点占整幅图像的百分比 </span></span><br><span class="line">  <span class="keyword">int</span> w0num; <span class="comment">//前景像素点数 </span></span><br><span class="line">  <span class="keyword">int</span> w1num; <span class="comment">// 背景像素点数 </span></span><br><span class="line">  <span class="keyword">int</span> u0gray; <span class="comment">//前景灰度值 </span></span><br><span class="line">  <span class="keyword">int</span> u1gray; <span class="comment">//背景灰度值 </span></span><br><span class="line">  <span class="keyword">double</span> u0; <span class="comment">//w0平均灰度</span></span><br><span class="line">  <span class="keyword">double</span> u1; <span class="comment">//w1平均灰度</span></span><br><span class="line">  <span class="keyword">double</span> deltaTmp=<span class="number">0</span>,deltaMax=<span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">int</span> th;</span><br><span class="line">  </span><br><span class="line">  u0gray = u1gray = w0num = w1num = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i=minGray; i&lt;maxGray; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    w0num += histogram[i];</span><br><span class="line">    w1num = PixelSum-w0num;</span><br><span class="line">    w0 = w0num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    w1 = w1num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">    u0gray += histogram[i]*i;</span><br><span class="line">    u1gray = GraySum-u0gray;</span><br><span class="line">    u0 = u0gray*<span class="number">1.0</span>/w0num;</span><br><span class="line">    u1 = u1gray*<span class="number">1.0</span>/w1num;</span><br><span class="line">    deltaTmp = (<span class="keyword">float</span>)(w0 * w1 * (u0 - u1)*(u0 - u1)); </span><br><span class="line">    <span class="comment">//类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//第八步：遍历最大类间方差（因为呈正态分布） </span></span><br><span class="line">    <span class="keyword">if</span>(deltaTmp&gt;deltaMax)</span><br><span class="line">    &#123;</span><br><span class="line">      deltaMax = deltaTmp;</span><br><span class="line">      th = i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> th; </span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//简单找点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Scan_Point1</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> sum,num;</span><br><span class="line"><span class="keyword">int</span> point[row];</span><br><span class="line"><span class="comment">//int right,left,bottom,top;</span></span><br><span class="line"><span class="keyword">int</span> flag,top,bottom;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一步：找到左右边界进行折半取中值</span></span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;++i)</span><br><span class="line">&#123;</span><br><span class="line">sum=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col<span class="number">-1</span>;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][j]==<span class="number">255</span>&amp;&amp;bin_img[i][j+<span class="number">1</span>]==<span class="number">255</span>)&#123;</span><br><span class="line">sum += j;</span><br><span class="line">++num;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bin_img[i][j<span class="number">-1</span>]==<span class="number">255</span>&amp;&amp;bin_img[i][j]==<span class="number">0</span>&amp;&amp;bin_img[i][j+<span class="number">1</span>]==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sum)</span><br><span class="line">point[i] = sum/num;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">point[i] = <span class="number">0xff</span>;</span><br><span class="line">++flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二步：找到上下边界，折半得中点坐标</span></span><br><span class="line"><span class="keyword">if</span>(flag&lt;row)</span><br><span class="line">&#123;</span><br><span class="line">sum=<span class="number">0</span>,num=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row<span class="number">-1</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(point[i] != <span class="number">0xff</span>)&#123;</span><br><span class="line">sum += point[i];</span><br><span class="line">++num;</span><br><span class="line">                                <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                                      top = i;</span><br><span class="line">                                      flag = <span class="number">0</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(point[i]==<span class="number">0xff</span>&amp;&amp;point[i<span class="number">-1</span>]!=<span class="number">0xff</span>&amp;&amp;point[i+<span class="number">1</span>]==<span class="number">0xff</span>)&#123;</span><br><span class="line">bottom = i;</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">                <span class="keyword">if</span>(num)</span><br><span class="line">                &#123;</span><br><span class="line">                    mid_x = sum/num;</span><br><span class="line">                    mid_y = top + num/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                    ips200_drawpoint(mid_x,mid_y,RED);<span class="comment">//列，行</span></span><br><span class="line">                    ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y+<span class="number">1</span>,RED);<span class="comment">//列，行</span></span><br><span class="line">                    ips200_drawpoint(mid_x,mid_y+<span class="number">1</span>,RED);<span class="comment">//列，行</span></span><br><span class="line">                    ips200_drawpoint(mid_x+<span class="number">1</span>,mid_y,RED);<span class="comment">//列，行</span></span><br><span class="line">                    sign_Beacon(mid_x,mid_y,top<span class="number">-10</span>,bottom+<span class="number">10</span>);</span><br><span class="line">                &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mid_x=<span class="number">120</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Scan_Point1</span><span class="params">(<span class="keyword">void</span>)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> sum,num;</span><br><span class="line"><span class="keyword">int</span> point[row];</span><br><span class="line"><span class="comment">//int right,left,bottom,top;</span></span><br><span class="line"><span class="keyword">int</span> flag,top,bottom;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一步：找到左右边界进行折半取中值</span></span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;++i)</span><br><span class="line">&#123;</span><br><span class="line">sum=<span class="number">0</span>,num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//if(flag)&#123;</span></span><br><span class="line"><span class="comment">//if(mt9v03x_image[i][j]&gt;=70)&#123;</span></span><br><span class="line"><span class="comment">//left = j;</span></span><br><span class="line"><span class="comment">//flag = 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;else&#123;</span></span><br><span class="line"><span class="comment">//if(mt9v03x_image[i][j-1]&gt;=70&amp;&amp;mt9v03x_image[i][j]&lt;70&amp;&amp;mt9v03x_image[i][j+1]&lt;70)&#123;</span></span><br><span class="line"><span class="comment">//right = j;</span></span><br><span class="line"><span class="comment">//flag = 1;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;<span class="number">69</span>)&#123;</span><br><span class="line">sum = sum + j;</span><br><span class="line">++num;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(mt9v03x_image[i<span class="number">-1</span>][j]&gt;=<span class="number">70</span>&amp;&amp;mt9v03x_image[i][j]&lt;<span class="number">70</span>&amp;&amp;mt9v03x_image[i][j+<span class="number">1</span>]&lt;<span class="number">70</span>)</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//if(flag==0&amp;&amp;j==col)right = col-1;</span></span><br><span class="line"><span class="comment">//if(left&lt;right)</span></span><br><span class="line"><span class="comment">//point[i] = (left+right)&gt;&gt;1;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//point[i] = 0xff;</span></span><br><span class="line"><span class="comment">//left = right = 0;</span></span><br><span class="line"><span class="keyword">if</span>(sum)</span><br><span class="line">point[i]=sum/num;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">point[i] = <span class="number">0xff</span>;</span><br><span class="line">++flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二步：找到上下边界，折半得中点坐标</span></span><br><span class="line"><span class="keyword">if</span>(flag!=row)</span><br><span class="line">&#123;</span><br><span class="line">sum=<span class="number">0</span>,num=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(point[i] != <span class="number">0xff</span>)&#123;</span><br><span class="line">sum += point[i];</span><br><span class="line">num++;</span><br><span class="line"><span class="keyword">if</span>(flag)&#123;</span><br><span class="line">top = i;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(point[i]==<span class="number">0xff</span>&amp;&amp;point[i<span class="number">-1</span>]!=<span class="number">0xff</span>&amp;&amp;point[i+<span class="number">1</span>]==<span class="number">0xff</span>)&#123;</span><br><span class="line">bottom = i;</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mid_x = sum/num;</span><br><span class="line">mid_y = first + num/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">ips200_drawpoint(mid_x,mid_y,RED);<span class="comment">//列，行</span></span><br><span class="line">        sign_Beacon(mid_x,mid_y,top,bottom);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mid_x=<span class="number">120</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//标出信标灯的位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sign_Beacon</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> top,<span class="keyword">int</span> bottom)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=top<span class="number">-10</span>;i&lt;bottom+<span class="number">10</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line">ips200_drawpoint(x,i,RED);<span class="comment">//列，行</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;++j)</span><br><span class="line">ips200_drawpoint(j,y,RED);<span class="comment">//列，行</span></span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> GrayScale 256</span></span><br><span class="line"></span><br><span class="line">uint8 bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line">uint8 gray_img[row][col]; <span class="comment">//灰度图 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> mid_x,mid_y;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以不加二值化浪费时间，直接通过阈值来判断</span></span><br><span class="line"><span class="comment">//只改变与偏差有关的，与中线有关的间接有关的都不改变</span></span><br><span class="line"><span class="comment">//滤波等，思考……效率问题</span></span><br><span class="line"><span class="comment">//#define RED0xF800// 红色</span></span><br><span class="line"><span class="comment">//#define BLUE0x001F// 蓝色</span></span><br><span class="line"><span class="comment">//#define YELLOW0xFFE0// 黄色</span></span><br><span class="line"><span class="comment">//#define GREEN0x07E0// 绿色</span></span><br><span class="line"><span class="comment">//#define WHITE0xFFFF// 白色</span></span><br><span class="line"><span class="comment">//#define BLACK0x0000// 黑色 </span></span><br><span class="line"><span class="comment">//#define GRAY0X8430// 灰色</span></span><br><span class="line"><span class="comment">//#define BROWN0XBC40// 棕色</span></span><br><span class="line"><span class="comment">//#define PURPLE0XF81F// 紫色</span></span><br><span class="line"><span class="comment">//#define PINK0XFE19</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//main函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="keyword">int</span> threshold;<span class="comment">//=70;//灰20-70；白70-126 -127-0</span></span><br><span class="line">      </span><br><span class="line">      <span class="keyword">if</span>(mt9v03x_finish_flag)</span><br><span class="line">      &#123;</span><br><span class="line"><span class="comment">//            threshold=OTSU();</span></span><br><span class="line">            threshold=<span class="number">70</span>;</span><br><span class="line">            <span class="comment">//加一个：黑白天阈值限定</span></span><br><span class="line">            Binarization(threshold);</span><br><span class="line">            ips200_displayimage032(bin_img[<span class="number">0</span>],col, row);</span><br><span class="line">            Scan_Point1();</span><br><span class="line">      &#125;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//图像二值化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(<span class="keyword">int</span> threshold)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">      </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;row; ++i)</span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;col; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;threshold)</span><br><span class="line">bin_img[i][j]=white;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bin_img[i][j]=black;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大津算法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> img_row=row,img_col=col; </span><br><span class="line"><span class="keyword">int</span> histogram[GrayScale]; <span class="comment">//灰度直方图</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第一步：初始化灰度直方图</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;GrayScale; ++i)</span><br><span class="line">histogram[i]=<span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">//第二步：统计每个灰度值出现得次数</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;img_row; ++i)</span><br><span class="line">              <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;img_col; ++j)</span><br><span class="line">                  ++histogram[mt9v03x_image[i][j]];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//第三步： 获取最小最大灰度值</span></span><br><span class="line"><span class="keyword">int</span> minGray,maxGray;</span><br><span class="line"><span class="keyword">for</span>(minGray=<span class="number">0</span>;minGray&lt;<span class="number">256</span>&amp;&amp;histogram[minGray]==<span class="number">0</span>;++minGray);</span><br><span class="line"><span class="keyword">for</span>(maxGray=<span class="number">255</span>;maxGray&gt;minGray&amp;&amp;histogram[minGray]==<span class="number">0</span>;--maxGray);</span><br><span class="line"></span><br><span class="line"><span class="comment">//第四步：分情况讨论</span></span><br><span class="line"><span class="comment">// 最大=最小，图像只有一种颜色</span></span><br><span class="line"><span class="keyword">if</span>(maxGray==minGray)</span><br><span class="line"><span class="keyword">return</span> maxGray;</span><br><span class="line"><span class="comment">//最大=最小+1，图像只有两种颜色</span></span><br><span class="line"><span class="keyword">if</span>(maxGray==minGray+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> minGray;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第五步：统计[最小,最大]范围内的像素总数</span></span><br><span class="line"><span class="keyword">int</span> PixelSum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; ++i)</span><br><span class="line">PixelSum += histogram[i];</span><br><span class="line"></span><br><span class="line"><span class="comment">//第六步：统计[最小,最大]范围内的灰度值总数(灰度值*出现次数)</span></span><br><span class="line"><span class="keyword">int</span> GraySum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=minGray; i&lt;maxGray+<span class="number">1</span>; ++i)</span><br><span class="line">GraySum += histogram[i]*i;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第七步： 大津法优化</span></span><br><span class="line"><span class="keyword">double</span> w0; <span class="comment">//前景像素点占整幅图像的百分比 </span></span><br><span class="line">        <span class="keyword">double</span> w1; <span class="comment">//背景像素点占整幅图像的百分比 </span></span><br><span class="line">        <span class="keyword">int</span> w0num; <span class="comment">//前景像素点数 </span></span><br><span class="line"><span class="keyword">int</span> w1num; <span class="comment">// 背景像素点数 </span></span><br><span class="line">        <span class="keyword">int</span> u0gray; <span class="comment">//前景灰度值 </span></span><br><span class="line">        <span class="keyword">int</span> u1gray; <span class="comment">//背景灰度值 </span></span><br><span class="line">        <span class="keyword">double</span> u0; <span class="comment">//w0平均灰度</span></span><br><span class="line">        <span class="keyword">double</span> u1; <span class="comment">//w1平均灰度</span></span><br><span class="line">        <span class="keyword">double</span> deltaTmp=<span class="number">0</span>,deltaMax=<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">int</span> th;</span><br><span class="line">    </span><br><span class="line">        u0gray = u1gray = w0num = w1num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i=minGray; i&lt;maxGray; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            w0num += histogram[i];</span><br><span class="line">            w1num = PixelSum-w0num;</span><br><span class="line">            w0 = w0num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">            w1 = w1num*<span class="number">1.0</span>/PixelSum;</span><br><span class="line">            u0gray += histogram[i]*i;</span><br><span class="line">            u1gray = GraySum-u0gray;</span><br><span class="line">            u0 = u0gray*<span class="number">1.0</span>/w0num;</span><br><span class="line">            u1 = u1gray*<span class="number">1.0</span>/w1num;</span><br><span class="line">            deltaTmp = (<span class="keyword">float</span>)(w0 * w1 * (u0 - u1)*(u0 - u1)); </span><br><span class="line"><span class="comment">//类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//第八步：遍历最大类间方差（因为呈正态分布） </span></span><br><span class="line">            <span class="keyword">if</span>(deltaTmp&gt;deltaMax)</span><br><span class="line">            &#123;</span><br><span class="line">                  deltaMax = deltaTmp;</span><br><span class="line">                  th = i;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"><span class="keyword">return</span> th; </span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//简单找点</span></span><br><span class="line"><span class="comment">//void Scan_Point1(void)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i,j,k;</span></span><br><span class="line"><span class="comment">//int left,right,top,bottom;</span></span><br><span class="line"><span class="comment">//        int sum=0;</span></span><br><span class="line"><span class="comment">//        int point[row];</span></span><br><span class="line"><span class="comment">//        int flag1=1,flag2=1;</span></span><br><span class="line"><span class="comment">//        </span></span><br><span class="line"><span class="comment">//        for(i=0;i&lt;row;i++)</span></span><br><span class="line"><span class="comment">//              point[i] = 0;</span></span><br><span class="line"><span class="comment">//        </span></span><br><span class="line"><span class="comment">//        //第一步：找到左右边界进行折半取中值</span></span><br><span class="line"><span class="comment">//for(i=0;i&lt;row;i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//                left=col,right=0;</span></span><br><span class="line"><span class="comment">//for(j=0;j&lt;col-3; )</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">////连续四个点确定为信标</span></span><br><span class="line"><span class="comment">////                        if(bin_img[i][j]=255&amp;&amp;bin_img[i][j+1]==255&amp;&amp;bin_img[i][j+2]==255&amp;&amp;bin_img[i][j+3]==255)</span></span><br><span class="line"><span class="comment">////&#123;</span></span><br><span class="line"><span class="comment">////if(left==col)left=j-1;</span></span><br><span class="line"><span class="comment">////right = j+3;</span></span><br><span class="line"><span class="comment">////                                j += 4;</span></span><br><span class="line"><span class="comment">////                                continue;</span></span><br><span class="line"><span class="comment">////&#125;</span></span><br><span class="line"><span class="comment">//                        if(bin_img[i][j]==255)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if(left==col)left=j-1;</span></span><br><span class="line"><span class="comment">//right = j;</span></span><br><span class="line"><span class="comment">//                                j += 1;</span></span><br><span class="line"><span class="comment">//                                flag1=0;</span></span><br><span class="line"><span class="comment">//                                continue;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//                        j++;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//                </span></span><br><span class="line"><span class="comment">//                if(left&lt;right)point[i]=(left+right)/2;</span></span><br><span class="line"><span class="comment">//                else point[i]=0xff;</span></span><br><span class="line"><span class="comment">//                </span></span><br><span class="line"><span class="comment">//&#125; </span></span><br><span class="line"><span class="comment">//        //第二步：找到上下边界，折半得中点坐标</span></span><br><span class="line"><span class="comment">//        top=row,bottom=0,k=0;</span></span><br><span class="line"><span class="comment">//        for(i=0;i&lt;row-1;)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">////              if(point[i]!=0xff&amp;&amp;point[i+1]!=0xff&amp;&amp;point[i+2]!=0xff&amp;&amp;point[i+3]!=0xff)</span></span><br><span class="line"><span class="comment">////              &#123;</span></span><br><span class="line"><span class="comment">////                    if(top==row)top=i;</span></span><br><span class="line"><span class="comment">////                    bottom=i+3;</span></span><br><span class="line"><span class="comment">////                    i += 4;</span></span><br><span class="line"><span class="comment">////                    k += 4;</span></span><br><span class="line"><span class="comment">////                    continue;</span></span><br><span class="line"><span class="comment">////              &#125;</span></span><br><span class="line"><span class="comment">//              if(point[i]!=0xff)</span></span><br><span class="line"><span class="comment">//              &#123;</span></span><br><span class="line"><span class="comment">//                    if(top==row)top=i;</span></span><br><span class="line"><span class="comment">//                    bottom=i+1;</span></span><br><span class="line"><span class="comment">//                    i += 1;</span></span><br><span class="line"><span class="comment">//                    k += 1;</span></span><br><span class="line"><span class="comment">//                    flag2=0;</span></span><br><span class="line"><span class="comment">//                    continue;</span></span><br><span class="line"><span class="comment">//              &#125;</span></span><br><span class="line"><span class="comment">//              i++;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        //第三步：判断是否存在在信标灯</span></span><br><span class="line"><span class="comment">//        if(top&lt;=bottom)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//              for(i=top;i&lt;=bottom;i++)</span></span><br><span class="line"><span class="comment">//              &#123;</span></span><br><span class="line"><span class="comment">//                  if(point[i]!=0xff)sum += point[i];</span></span><br><span class="line"><span class="comment">//              &#125;</span></span><br><span class="line"><span class="comment">//              mid_x = sum/k;</span></span><br><span class="line"><span class="comment">//              mid_y = top+(bottom-top)/2;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if(flag1==0&amp;&amp;flag2==0)&#123;</span></span><br><span class="line"><span class="comment">//          ips200_drawpoint(mid_x,mid_y,RED);//列，行</span></span><br><span class="line"><span class="comment">//        ips200_drawpoint(mid_x+1,mid_y+1,RED);//列，行</span></span><br><span class="line"><span class="comment">//        ips200_drawpoint(mid_x,mid_y+1,RED);//列，行</span></span><br><span class="line"><span class="comment">//        ips200_drawpoint(mid_x+1,mid_y,RED);//列，行</span></span><br><span class="line"><span class="comment">//        sign_Beacon(mid_x,mid_y);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        </span></span><br><span class="line"><span class="comment">//        if(flag1==1&amp;&amp;flag2==1)&#123;</span></span><br><span class="line"><span class="comment">//          mid_x=120;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//  </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//过滤噪点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bin_Image_Filter</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;row<span class="number">-1</span>;++i)</span><br><span class="line">&#123;</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">1</span>; j&lt;col<span class="number">-1</span>;++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>((bin_img[i][j]==<span class="number">0</span>)&amp;&amp;(bin_img[i<span class="number">-1</span>][j]+bin_img[i<span class="number">-1</span>][j+<span class="number">1</span>]+bin_img[i+<span class="number">1</span>][j]+bin_img[i][j+<span class="number">1</span>]+bin_img[i][j+<span class="number">2</span>]&gt;<span class="number">3</span>))</span><br><span class="line">bin_img[i][j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>((bin_img[i][j]==<span class="number">1</span>)&amp;&amp;(bin_img[i<span class="number">-1</span>][j]+bin_img[i<span class="number">-1</span>][j+<span class="number">1</span>]+bin_img[i+<span class="number">1</span>][j]+bin_img[i][j+<span class="number">1</span>]+bin_img[i][j+<span class="number">2</span>]&lt;<span class="number">2</span>))</span><br><span class="line">bin_img[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//标出信标灯的位置</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sign_Beacon</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line">ips200_drawpoint(x,i,RED);<span class="comment">//列，行</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line">ips200_drawpoint(j,y,RED);<span class="comment">//列，行</span></span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col MT9V03X_W<span class="comment">//宽 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row MT9V03X_H<span class="comment">//高 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line"><span class="keyword">int</span> gray_img[row][col]; <span class="comment">//灰度图 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//图像二值化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> threshold=OTSU();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;=threshold)</span><br><span class="line">bin_img[i][j]=white;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bin_img[i][j]=black;</span><br><span class="line">gray_img[i][j]=mt9v03x_image[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//大津法求阈值 -&gt; 优化！速度慢！光线影响！(亮导致阈值高，暗导致阈值低) </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">OTSU</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> GrayScale=<span class="number">256</span>;</span><br><span class="line"><span class="keyword">int</span> pixelSum=row*col/<span class="number">4</span>,graySum=<span class="number">0</span>; <span class="comment">//像素点总和，灰度值总和 </span></span><br><span class="line"><span class="keyword">int</span> pixCount[GrayScale]; <span class="comment">//灰度直方图</span></span><br><span class="line"><span class="keyword">float</span> pixPro[GrayScale]; <span class="comment">//归一化处理 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第一步：初始化 </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GrayScale;i++)</span><br><span class="line">&#123;</span><br><span class="line">histogram[i] = <span class="number">0</span>;</span><br><span class="line">normalization[i] = <span class="number">0</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//第二步：统计0-255灰度值出现次数</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j+=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">histogram[gray_img[i][j]]++;</span><br><span class="line">graySum +=  gray_img[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第三步：灰度直方图归一化 [0,1] </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GrayScale;i++)</span><br><span class="line">&#123;</span><br><span class="line">normalization[i] = histogram[i]*<span class="number">1.0</span>/pixelSum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第四步： 大津法公式套用</span></span><br><span class="line"><span class="keyword">float</span> w0 = <span class="number">0</span>; <span class="comment">//前景像素点占整幅图像的比例</span></span><br><span class="line">    <span class="keyword">float</span> w1 = <span class="number">0</span>; <span class="comment">//背景景像素点占整幅图像的比例 </span></span><br><span class="line">    <span class="keyword">double</span> u0tmp;</span><br><span class="line">    <span class="keyword">double</span> u1tmp;</span><br><span class="line">    <span class="keyword">double</span> u0; <span class="comment">//w0平均灰度</span></span><br><span class="line">    <span class="keyword">double</span> u1; <span class="comment">//w1平均灰度</span></span><br><span class="line">    <span class="keyword">double</span> deltaTmp;</span><br><span class="line">    <span class="keyword">double</span> deltaMax = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> th = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">w0 = w1 = u0tmp = u1tmp = u0 = u1 = deltaTmp = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;GrayScale;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//for (int j = 0; j &lt; GrayScale; j++) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//            if (j &lt;= i) //前景</span></span><br><span class="line"><span class="comment">//&#123; </span></span><br><span class="line"><span class="comment">//                w0 += pixPro[j];</span></span><br><span class="line"><span class="comment">//                u0tmp += j * pixPro[j];</span></span><br><span class="line"><span class="comment">//            &#125; </span></span><br><span class="line"><span class="comment">//else //背景</span></span><br><span class="line"><span class="comment">//&#123; </span></span><br><span class="line"><span class="comment">//                w1 += pixPro[j];</span></span><br><span class="line"><span class="comment">//                u1tmp += j * pixPro[j];</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">w0 += pixPro[j];</span><br><span class="line">u0tmp += j * pixPro[j];</span><br><span class="line">w1 = <span class="number">1</span>-w0;</span><br><span class="line">u1tmp = graySum/pixelSum-u0tmp;</span><br><span class="line">        </span><br><span class="line">        u0 = u0tmp / w0;</span><br><span class="line">        u1 = u1tmp / w1;</span><br><span class="line">        deltaTmp = (<span class="keyword">float</span>)(w0 * w1 * (u0 - u1)*(u0 - u1)); <span class="comment">//类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//第五步：0-255中找到大津法打分最高的阈值(正态分布) </span></span><br><span class="line"><span class="keyword">if</span> (deltaTmp &gt; deltaMax) </span><br><span class="line">&#123;</span><br><span class="line">            deltaMax = deltaTmp;</span><br><span class="line">            th = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (deltaTmp &lt; deltaMax) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> th;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//uint8 imgDeal1[MT9V03X_H][MT9V03X_W];</span></span><br><span class="line"><span class="comment">//uint8 arr[9];</span></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">9</span>];</span><br><span class="line"><span class="keyword">int</span> MT9V03X_H=<span class="number">10</span>,MT9V03X_W=<span class="number">10</span>;</span><br><span class="line"><span class="comment">//int mt9v03x_image[MT9V03X_H][MT9V03X_W];</span></span><br><span class="line"><span class="comment">//噪声处理 </span></span><br><span class="line"><span class="comment">// *********************************************************************/</span></span><br><span class="line"><span class="comment">//快速排序 </span></span><br><span class="line"><span class="comment">// *********************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Quick_Sort</span><span class="params">(<span class="keyword">int</span> begin,<span class="keyword">int</span> end)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid,i,j,temp;</span><br><span class="line"><span class="keyword">if</span>(begin&gt;end)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">mid=filter[begin];</span><br><span class="line">i=begin;</span><br><span class="line">j=end;</span><br><span class="line"><span class="keyword">while</span>(i!=j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(filter[j]&gt;=mid&amp;&amp;j&gt;i)</span><br><span class="line">j--;</span><br><span class="line"><span class="keyword">while</span>(filter[i]&lt;=mid&amp;&amp;j&gt;i)</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span>(i&lt;j)</span><br><span class="line">&#123;</span><br><span class="line">temp=filter[i];</span><br><span class="line">filter[i]=filter[j];</span><br><span class="line">filter[j]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">filter[begin]=filter[i];</span><br><span class="line">filter[i]=mid;</span><br><span class="line">Quick_Sort(begin,i<span class="number">-1</span>);</span><br><span class="line">Quick_Sort(i+<span class="number">1</span>,end);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> filter[<span class="number">9</span>];</span><br><span class="line"><span class="comment">//中值滤波：斑点噪声和椒盐噪声 </span></span><br><span class="line"><span class="comment">//用于当找到细小白点进行判断是否为灯，将白点过滤 </span></span><br><span class="line"><span class="comment">// *********************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MedianFilter</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid;</span><br><span class="line"><span class="comment">//第一步：3*3的观察窗，快速排序或堆排序 (使用灰度图像) </span></span><br><span class="line">Quick_Sort(<span class="number">0</span>,<span class="number">8</span>);</span><br><span class="line"><span class="comment">//第二步：求出中值 </span></span><br><span class="line">mid = filter[<span class="number">4</span>];</span><br><span class="line"><span class="comment">//第三步：替换白点 </span></span><br><span class="line"><span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> point[row];</span><br><span class="line"><span class="comment">//求信标灯各行的中值 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_LR</span><span class="params">(<span class="keyword">void</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> left,right;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line">left=col,right=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col<span class="number">-1</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//同一行要连续两个白点显示 </span></span><br><span class="line"><span class="keyword">if</span>(!bin_img[i][j]&amp;&amp;!bin_img[i][j+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(left==col)left=j; <span class="comment">//左边缘确定 </span></span><br><span class="line">right = j+<span class="number">1</span>; <span class="comment">//右边缘确定 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(left&lt;right)point[i]=(left+right)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> point[i]=col;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求信标灯的坐标(mid_x,mid_y) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_XY</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,flag1=<span class="number">1</span>,flag2=<span class="number">1</span>,m=<span class="number">0</span>,n=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> mid_x,mid_y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row<span class="number">-3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(point[i]!=col&amp;&amp;point[i+<span class="number">1</span>]!=col)<span class="comment">//连续四个点确定为信标灯</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(flag1)</span><br><span class="line">&#123;</span><br><span class="line">m=i;</span><br><span class="line">flag1=<span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag2)n++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">3</span>)flag2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">flag1=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;i++)sum+=point[m+j];</span><br><span class="line">mid_x = sum/(n+<span class="number">1</span>);</span><br><span class="line">mid_y = m+(n&gt;&gt;<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否是信标灯：因为环境中也存在红外光但信标灯是闪烁的，故和其他红外区分 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">isBeacon</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> threshold;</span><br><span class="line"><span class="keyword">int</span> bin_img1[row][col],bin_img2[row][col];</span><br><span class="line"></span><br><span class="line">threshold=OTSU();</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;=threshold)</span><br><span class="line">bin_img1[i][j]=white;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bin_img1[i][j]=black;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">systick_delay_ms(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">threshold=OTSU();</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;=threshold)</span><br><span class="line">bin_img2[i][j]=white;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bin_img2[i][j]=black;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line">bin_img[i][j]=bin_img1[i][j]^bin_img2[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//均值滤波</span></span><br><span class="line"><span class="comment">// *********************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Quick_Sort(0,18);</span></span><br><span class="line"><span class="comment">//for(int i=0;i&lt;19;i++)</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;arr[i]&lt;&lt;&quot; &quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;headfile.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col MT9V03X_W <span class="comment">//120 //MT9V03X_W 宽 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row   MT9V03X_H<span class="comment">//80 //MT9V03X_H 高 </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 255</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"></span><br><span class="line">uint8 bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line">uint8 gray_img[row][col]; <span class="comment">//灰度图 </span></span><br><span class="line"><span class="keyword">int</span> pixCount[<span class="number">256</span>]; <span class="comment">//灰度直方图</span></span><br><span class="line"><span class="keyword">float</span> pixPro[<span class="number">256</span>]; <span class="comment">//归一化处理 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">camera</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      Binarization();</span><br><span class="line">      ips200_displayimage032(bin_img[<span class="number">0</span>],MT9V03X_W, MT9V03X_H); </span><br><span class="line"><span class="comment">//      isBeacon();</span></span><br><span class="line">      find_LR();</span><br><span class="line"><span class="comment">//      find_XY();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//图像二值化 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Binarization</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="comment">//int threshold=OTSU();</span></span><br><span class="line">        <span class="keyword">int</span> threshold=<span class="number">129</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;=threshold)</span><br><span class="line">bin_img[i][j]=white;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bin_img[i][j]=black;</span><br><span class="line">gray_img[i][j]=mt9v03x_image[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> point[row];</span><br><span class="line"><span class="comment">//求信标灯各行的中值 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_LR</span><span class="params">(<span class="keyword">void</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> left,right;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line">left=col,right=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col<span class="number">-1</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//同一行要连续两个白点显示 </span></span><br><span class="line"><span class="keyword">if</span>(!bin_img[i][j]&amp;&amp;!bin_img[i][j+<span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(left==col)left=j; <span class="comment">//左边缘确定 </span></span><br><span class="line">right = j+<span class="number">1</span>; <span class="comment">//右边缘确定 </span></span><br><span class="line">                                ips200_drawpoint(left,i,RED);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(left&lt;right)point[i]=(left+right)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span> point[i]=col;</span><br><span class="line">                ips200_drawpoint(right,i,RED);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求信标灯的坐标(mid_x,mid_y) </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_XY</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,flag1=<span class="number">1</span>,flag2=<span class="number">1</span>,m=<span class="number">0</span>,n=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> mid_x,mid_y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row<span class="number">-3</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(point[i]!=col&amp;&amp;point[i+<span class="number">1</span>]!=col)<span class="comment">//连续四个点确定为信标灯</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(flag1)</span><br><span class="line">&#123;</span><br><span class="line">m=i;</span><br><span class="line">flag1=<span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag2)n++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&gt;=<span class="number">3</span>)flag2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">flag1=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;i++)sum+=point[m+j];</span><br><span class="line">mid_x = sum/(n+<span class="number">1</span>);</span><br><span class="line">mid_y = m+(n&gt;&gt;<span class="number">1</span>);</span><br><span class="line">        ips200_drawpoint(mid_x,mid_y,BLUE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Scan_Point2</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> left,right;</span><br><span class="line">         <span class="keyword">int</span> threshold=<span class="number">70</span>;</span><br><span class="line">         </span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line">                left=col,right=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;col<span class="number">-1</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j<span class="number">-1</span>]&gt;threshold&amp;&amp;mt9v03x_image[i][j]&gt;threshold&amp;&amp;mt9v03x_image[i][j+<span class="number">1</span>]&gt;threshold)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(left==col)left=j<span class="number">-1</span>;</span><br><span class="line">ips200_drawpoint(left,i,RED);<span class="comment">//列，行</span></span><br><span class="line">                                ips200_showint8(<span class="number">120</span>,<span class="number">139</span>,left);</span><br><span class="line">                                ips200_showint8(<span class="number">120</span>,<span class="number">140</span>,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否是信标灯：因为环境中也存在红外光但信标灯是闪烁的，故和其他红外区分 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">isBeacon</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> threshold;</span><br><span class="line"><span class="keyword">int</span> bin_img1[row][col],bin_img2[row][col];</span><br><span class="line"></span><br><span class="line">threshold=OTSU();</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;=threshold)</span><br><span class="line">bin_img1[i][j]=white;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bin_img1[i][j]=black;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">systick_delay_ms(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">threshold=OTSU();</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mt9v03x_image[i][j]&gt;=threshold)</span><br><span class="line">bin_img2[i][j]=white;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">bin_img2[i][j]=black;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">mt9v03x_finish_flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)</span><br><span class="line">&#123;</span><br><span class="line">bin_img[i][j]=bin_img1[i][j]^bin_img2[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//大津法求阈值 -&gt; 优化！速度慢！光线影响！(亮导致阈值高，暗导致阈值低) </span></span><br><span class="line"><span class="comment">//不能用，直立对光线要求高，大津法1ms会导致闪频等，若使用需要加滤波</span></span><br><span class="line"><span class="comment">//int OTSU(void)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int i,j;</span></span><br><span class="line"><span class="comment">//int GrayScale=256;</span></span><br><span class="line"><span class="comment">//int pixelSum=row*col/4,graySum=0; //像素点总和，灰度值总和 </span></span><br><span class="line"><span class="comment">////int pixCount[256]; //灰度直方图</span></span><br><span class="line"><span class="comment">////float pixPro[256]; //归一化处理 </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////第一步：初始化 </span></span><br><span class="line"><span class="comment">//for(i=0;i&lt;GrayScale;i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//pixCount[i] = 0;</span></span><br><span class="line"><span class="comment">//pixPro[i] = 0; </span></span><br><span class="line"><span class="comment">//&#125; </span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////第二步：统计0-255灰度值出现次数</span></span><br><span class="line"><span class="comment">//for(i=0;i&lt;row;i+=2)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//for(j=0;j&lt;col;j+=2)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//pixCount[mt9v03x_image[i][j]]++;</span></span><br><span class="line"><span class="comment">//graySum +=  mt9v03x_image[i][j];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////第三步：灰度直方图归一化 [0,1] </span></span><br><span class="line"><span class="comment">//for(i=0;i&lt;GrayScale;i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//pixPro[i] = pixCount[i]*1.0/pixelSum;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////第四步： 大津法公式套用</span></span><br><span class="line"><span class="comment">//float w0 = 0; //前景像素点占整幅图像的比例</span></span><br><span class="line"><span class="comment">//        float w1 = 0; //背景景像素点占整幅图像的比例 </span></span><br><span class="line"><span class="comment">//        double u0tmp;</span></span><br><span class="line"><span class="comment">//        double u1tmp;</span></span><br><span class="line"><span class="comment">//        double u0; //w0平均灰度</span></span><br><span class="line"><span class="comment">//        double u1; //w1平均灰度</span></span><br><span class="line"><span class="comment">//        double deltaTmp;</span></span><br><span class="line"><span class="comment">//        double deltaMax = 0;</span></span><br><span class="line"><span class="comment">//        int th = 0;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//w0 = w1 = u0tmp = u1tmp = u0 = u1 = deltaTmp = 0;</span></span><br><span class="line"><span class="comment">//for(i=0;i&lt;GrayScale;i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">////for (int j = 0; j &lt; GrayScale; j++) </span></span><br><span class="line"><span class="comment">////&#123;</span></span><br><span class="line"><span class="comment">////            if (j &lt;= i) //前景</span></span><br><span class="line"><span class="comment">////&#123; </span></span><br><span class="line"><span class="comment">////                w0 += pixPro[j];</span></span><br><span class="line"><span class="comment">////                u0tmp += j * pixPro[j];</span></span><br><span class="line"><span class="comment">////            &#125; </span></span><br><span class="line"><span class="comment">////else //背景</span></span><br><span class="line"><span class="comment">////&#123; </span></span><br><span class="line"><span class="comment">////                w1 += pixPro[j];</span></span><br><span class="line"><span class="comment">////                u1tmp += j * pixPro[j];</span></span><br><span class="line"><span class="comment">////            &#125;</span></span><br><span class="line"><span class="comment">////        &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//w0 += pixPro[j];</span></span><br><span class="line"><span class="comment">//u0tmp += j * pixPro[j];</span></span><br><span class="line"><span class="comment">//w1 = 1-w0;</span></span><br><span class="line"><span class="comment">//u1tmp = graySum/pixelSum-u0tmp;</span></span><br><span class="line"><span class="comment">//        </span></span><br><span class="line"><span class="comment">//        u0 = u0tmp / w0;</span></span><br><span class="line"><span class="comment">//        u1 = u1tmp / w1;</span></span><br><span class="line"><span class="comment">//        deltaTmp = (float)(w0 * w1 * (u0 - u1)*(u0 - u1)); //类间方差公式 g = w0 * w1 * (u0 - u1) ^ 2</span></span><br><span class="line"><span class="comment">//        </span></span><br><span class="line"><span class="comment">////第五步：0-255中找到大津法打分最高的阈值(正态分布) </span></span><br><span class="line"><span class="comment">//if (deltaTmp &gt; deltaMax) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//            deltaMax = deltaTmp;</span></span><br><span class="line"><span class="comment">//            th = i;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        if (deltaTmp &lt; deltaMax) break;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return th;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="comment">//void Quick_Sort(int begin,int end) </span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//int mid,i,j,temp;</span></span><br><span class="line"><span class="comment">//if(begin&gt;end)</span></span><br><span class="line"><span class="comment">//return;</span></span><br><span class="line"><span class="comment">//mid=arr[begin];</span></span><br><span class="line"><span class="comment">//i=begin;</span></span><br><span class="line"><span class="comment">//j=end;</span></span><br><span class="line"><span class="comment">//while(i!=j)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//while(arr[j]&gt;=mid&amp;&amp;j&gt;i)</span></span><br><span class="line"><span class="comment">//j--;</span></span><br><span class="line"><span class="comment">//while(arr[i]&lt;=mid&amp;&amp;j&gt;i)</span></span><br><span class="line"><span class="comment">//i++;</span></span><br><span class="line"><span class="comment">//if(i&lt;j)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//temp=arr[i];</span></span><br><span class="line"><span class="comment">//arr[i]=arr[j];</span></span><br><span class="line"><span class="comment">//arr[j]=temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//arr[begin]=arr[i];</span></span><br><span class="line"><span class="comment">//arr[i]=mid;</span></span><br><span class="line"><span class="comment">//Quick_Sort(begin,i-1);</span></span><br><span class="line"><span class="comment">//Quick_Sort(i+1,end);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="智能车" scheme="https://zhang0224gz.github.io/categories/%E6%99%BA%E8%83%BD%E8%BD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>连通域算法（灰度图像处理）</title>
    <link href="https://zhang0224gz.github.io/2022/04/20/%E6%99%BA%E8%83%BD%E8%BD%A6/%E8%BF%9E%E9%80%9A%E5%9F%9F%E7%AE%97%E6%B3%95/"/>
    <id>https://zhang0224gz.github.io/2022/04/20/%E6%99%BA%E8%83%BD%E8%BD%A6/%E8%BF%9E%E9%80%9A%E5%9F%9F%E7%AE%97%E6%B3%95/</id>
    <published>2022-04-20T01:48:59.440Z</published>
    <updated>2022-07-17T08:50:24.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用fpga做图像处理的基础知识"><a class="markdownIt-Anchor" href="#用fpga做图像处理的基础知识"></a> 用FPGA做图像处理的基础知识</h1><ul><li>在一些工业领域用的图像传感器有哪些？</li><li>FPGA完成某些机器视觉任务的处理流程</li><li>为什么用FPGA进行数据处理能达到最高的实时性</li></ul><p>课程b站《从零开始系统学FPGA》</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220420095445602.png" alt="image-20220420095445602" /></p><p>一二比较重要：建立时间、保持时间、插入流水线寄存器提高电路频率等这些概念都是面试必问的；用<font color=red>实时流水线的方式处理各种数据</font>是FPGA运用的精髓；Verilog写代码必备能力</p><p>工业上除了会用到手机和相机中常见的面阵传感器之外，还会用到线阵传感器。线阵传感器的分辨率是几k乘1，也就是它只扫描一行图像，主要用于扫描仪里和一些需要扫描传送带上的物料的工业应用场合。</p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220420100158124.png" alt="image-20220420100158124" /></p><p>物料传送-&gt;机器视觉-&gt;执行机构：物料检测分选系统</p><h1 id="代码部分"><a class="markdownIt-Anchor" href="#代码部分"></a> 代码部分</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//网上原代码  </span></span><br><span class="line">  <span class="number">1</span> <span class="class"><span class="keyword">class</span> <span class="title">AreaMark</span></span></span><br><span class="line"><span class="class">  2 &#123;</span></span><br><span class="line">  <span class="number">3</span>     <span class="keyword">public</span>:</span><br><span class="line">  <span class="number">4</span>         AreaMark(<span class="keyword">const</span> Mat src,<span class="keyword">int</span> offset);</span><br><span class="line">  <span class="number">5</span>         <span class="function"><span class="keyword">int</span> <span class="title">getMarkedArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; &amp;area)</span></span>;</span><br><span class="line">  <span class="number">6</span>         <span class="function"><span class="keyword">void</span> <span class="title">getMarkedImage</span><span class="params">(Mat &amp;dst)</span></span>;</span><br><span class="line">  <span class="number">7</span></span><br><span class="line">  <span class="number">8</span>     <span class="keyword">private</span>:</span><br><span class="line">  <span class="number">9</span>         Mat src;</span><br><span class="line"> <span class="number">10</span>         <span class="keyword">int</span> offset;</span><br><span class="line"> <span class="number">11</span>         <span class="keyword">int</span> numberOfArea=<span class="number">0</span>;</span><br><span class="line"> <span class="number">12</span>         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; labelMap;</span><br><span class="line"> <span class="number">13</span>         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; labelRank;</span><br><span class="line"> <span class="number">14</span>         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; stArea;</span><br><span class="line"> <span class="number">15</span>         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; enArea;</span><br><span class="line"> <span class="number">16</span>         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; rowArea;</span><br><span class="line"> <span class="number">17</span>         <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; labelOfArea;</span><br><span class="line"> <span class="number">18</span>         <span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; equalLabels;</span><br><span class="line"> <span class="number">19</span>        </span><br><span class="line"> <span class="number">20</span>         <span class="function"><span class="keyword">void</span> <span class="title">markArea</span><span class="params">()</span></span>;</span><br><span class="line"> <span class="number">21</span>         <span class="function"><span class="keyword">void</span> <span class="title">searchArea</span><span class="params">()</span></span>;</span><br><span class="line"> <span class="number">22</span>         <span class="function"><span class="keyword">void</span> <span class="title">setInit</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"> <span class="number">23</span>         <span class="function"><span class="keyword">int</span> <span class="title">findRoot</span><span class="params">(<span class="keyword">int</span> label)</span></span>;</span><br><span class="line"> <span class="number">24</span>         <span class="function"><span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> labelA, <span class="keyword">int</span> labelB)</span></span>;</span><br><span class="line"> <span class="number">25</span>         <span class="function"><span class="keyword">void</span> <span class="title">replaceEqualMark</span><span class="params">()</span></span>;</span><br><span class="line"> <span class="number">26</span> &#125;;</span><br><span class="line"> <span class="number">27</span></span><br><span class="line"> <span class="number">28</span> <span class="comment">// 构造函数</span></span><br><span class="line"> <span class="number">29</span> <span class="comment">// imageInput:输入待标记二值图像    offsetInput:0为四连通，1为八连通</span></span><br><span class="line"> <span class="number">30</span> AreaMark::AreaMark(Mat imageInput,<span class="keyword">int</span> offsetInput)</span><br><span class="line"> <span class="number">31</span> &#123;</span><br><span class="line"> <span class="number">32</span>     src = imageInput;</span><br><span class="line"> <span class="number">33</span>     offset = offsetInput;</span><br><span class="line"> <span class="number">34</span> &#125;</span><br><span class="line"> <span class="number">35</span></span><br><span class="line"> <span class="number">36</span> <span class="comment">// 获取颜色标记图片</span></span><br><span class="line"> <span class="number">37</span> <span class="function"><span class="keyword">void</span> <span class="title">AreaMark::getMarkedImage</span><span class="params">(Mat &amp;dst)</span></span></span><br><span class="line"><span class="function"> 38 </span>&#123;</span><br><span class="line"> <span class="number">39</span>     <span class="function">Mat <span class="title">img</span><span class="params">(src.rows, src.cols, CV_8UC3, CV_RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span></span>;</span><br><span class="line"> <span class="number">40</span>     cvtColor(img, dst, CV_RGB2HSV);</span><br><span class="line"> <span class="number">41</span>    </span><br><span class="line"> <span class="number">42</span>     <span class="keyword">int</span> maxLabel = *max_element(labelOfArea.begin(), labelOfArea.end());</span><br><span class="line"> <span class="number">43</span>     <span class="built_in">vector</span>&lt;uchar&gt; hue;</span><br><span class="line"> <span class="number">44</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= maxLabel; i++)</span><br><span class="line"> <span class="number">45</span>     &#123;</span><br><span class="line"> <span class="number">46</span>         <span class="comment">// 使用HSV模型生成可区分颜色</span></span><br><span class="line"> <span class="number">47</span>         hue.push_back(uchar(<span class="number">180.0</span> * (i - <span class="number">1</span>) / (maxLabel + <span class="number">1</span>)));</span><br><span class="line"> <span class="number">48</span>     &#125;</span><br><span class="line"> <span class="number">49</span></span><br><span class="line"> <span class="number">50</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numberOfArea; i++)</span><br><span class="line"> <span class="number">51</span>     &#123;</span><br><span class="line"> <span class="number">52</span>         <span class="keyword">for</span> (<span class="keyword">int</span> j = stArea[i]; j &lt;= enArea[i]; j++)</span><br><span class="line"> <span class="number">53</span>         &#123;</span><br><span class="line"> <span class="number">54</span>             dst.at&lt;Vec3b&gt;(rowArea[i], j)[<span class="number">0</span>] = hue[labelOfArea[i]];</span><br><span class="line"> <span class="number">55</span>             dst.at&lt;Vec3b&gt;(rowArea[i], j)[<span class="number">1</span>] = <span class="number">255</span>;</span><br><span class="line"> <span class="number">56</span>             dst.at&lt;Vec3b&gt;(rowArea[i], j)[<span class="number">2</span>] = <span class="number">255</span>;</span><br><span class="line"> <span class="number">57</span>         &#125;</span><br><span class="line"> <span class="number">58</span>     &#125;</span><br><span class="line"> <span class="number">59</span></span><br><span class="line"> <span class="number">60</span>     cvtColor(dst, dst, CV_HSV2BGR);</span><br><span class="line"> <span class="number">61</span> &#125;</span><br><span class="line"> <span class="number">62</span></span><br><span class="line"> <span class="number">63</span> <span class="comment">// 获取标记过的各行子区域</span></span><br><span class="line"> <span class="number">64</span> <span class="function"><span class="keyword">int</span> <span class="title">AreaMark::getMarkedArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; &amp;area)</span></span></span><br><span class="line"><span class="function"> 65 </span>&#123;</span><br><span class="line"> <span class="number">66</span>     searchArea();</span><br><span class="line"> <span class="number">67</span>     markArea();</span><br><span class="line"> <span class="number">68</span>     replaceEqualMark();</span><br><span class="line"> <span class="number">69</span>     area.push_back(rowArea);</span><br><span class="line"> <span class="number">70</span>     area.push_back(stArea);</span><br><span class="line"> <span class="number">71</span>     area.push_back(enArea);</span><br><span class="line"> <span class="number">72</span>     area.push_back(labelOfArea);</span><br><span class="line"> <span class="number">73</span>     <span class="keyword">return</span> numberOfArea;</span><br><span class="line"> <span class="number">74</span> &#125;</span><br><span class="line"> <span class="number">75</span></span><br><span class="line"> <span class="number">76</span> <span class="function"><span class="keyword">void</span> <span class="title">AreaMark::searchArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> 77 </span>&#123;</span><br><span class="line"> <span class="number">78</span>     <span class="keyword">for</span> (<span class="keyword">int</span> row = <span class="number">0</span>; row &lt; src.rows; row++)</span><br><span class="line"> <span class="number">79</span>     &#123;</span><br><span class="line"> <span class="number">80</span>         <span class="comment">// 行指针</span></span><br><span class="line"> <span class="number">81</span>         <span class="keyword">const</span> uchar *rowData = src.ptr&lt;uchar&gt;(row);</span><br><span class="line"> <span class="number">82</span>        </span><br><span class="line"> <span class="number">83</span>         <span class="comment">// 判断行首是否是子区域的开始点</span></span><br><span class="line"> <span class="number">84</span>         <span class="keyword">if</span> (rowData[<span class="number">0</span>] == <span class="number">255</span>)</span><br><span class="line"> <span class="number">85</span>         &#123;</span><br><span class="line"> <span class="number">86</span>             numberOfArea++;</span><br><span class="line"> <span class="number">87</span>             stArea.push_back(<span class="number">0</span>);</span><br><span class="line"> <span class="number">88</span>         &#125;</span><br><span class="line"> <span class="number">89</span>        </span><br><span class="line"> <span class="number">90</span>         <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">1</span>; col &lt; src.cols; col++)</span><br><span class="line"> <span class="number">91</span>         &#123;</span><br><span class="line"> <span class="number">92</span>             <span class="comment">// 子区域开始位置的判断：前像素为背景，当前像素是前景</span></span><br><span class="line"> <span class="number">93</span>             <span class="keyword">if</span> (rowData[col - <span class="number">1</span>] == <span class="number">0</span> &amp;&amp; rowData[col] == <span class="number">255</span>)</span><br><span class="line"> <span class="number">94</span>             &#123;</span><br><span class="line"> <span class="number">95</span>                 <span class="comment">// 在开始位置更新区域总数、开始位置vector</span></span><br><span class="line"> <span class="number">96</span>                 numberOfArea++;</span><br><span class="line"> <span class="number">97</span>                 stArea.push_back(col);      </span><br><span class="line"> <span class="number">98</span>             <span class="comment">// 子区域结束位置的判断：前像素是前景，当前像素是背景        </span></span><br><span class="line"> <span class="number">99</span>             &#125;<span class="keyword">else</span> <span class="keyword">if</span> (rowData[col - <span class="number">1</span>] == <span class="number">255</span> &amp;&amp; rowData[col] == <span class="number">0</span>)</span><br><span class="line"><span class="number">100</span>             &#123;</span><br><span class="line"><span class="number">101</span>                 <span class="comment">// 更新结束位置vector、行号vector</span></span><br><span class="line"><span class="number">102</span>                 enArea.push_back(col - <span class="number">1</span>);</span><br><span class="line"><span class="number">103</span>                 rowArea.push_back(row);</span><br><span class="line"><span class="number">104</span>             &#125;</span><br><span class="line"><span class="number">105</span>         &#125;</span><br><span class="line"><span class="number">106</span>         <span class="comment">// 结束位置在行末</span></span><br><span class="line"><span class="number">107</span>         <span class="keyword">if</span> (rowData[src.cols - <span class="number">1</span>] == <span class="number">255</span>)</span><br><span class="line"><span class="number">108</span>         &#123;</span><br><span class="line"><span class="number">109</span>             enArea.push_back(src.cols - <span class="number">1</span>);</span><br><span class="line"><span class="number">110</span>             rowArea.push_back(row);</span><br><span class="line"><span class="number">111</span>         &#125;</span><br><span class="line"><span class="number">112</span>     &#125;</span><br><span class="line"><span class="number">113</span> &#125;</span><br><span class="line"><span class="number">114</span></span><br><span class="line"><span class="number">115</span></span><br><span class="line"><span class="number">116</span></span><br><span class="line"><span class="number">117</span> <span class="function"><span class="keyword">void</span> <span class="title">AreaMark::markArea</span><span class="params">()</span></span></span><br><span class="line"><span class="function">118 </span>&#123;</span><br><span class="line"><span class="number">119</span>     <span class="keyword">int</span> label = <span class="number">1</span>;</span><br><span class="line"><span class="number">120</span>     <span class="comment">// 当前所在行</span></span><br><span class="line"><span class="number">121</span>     <span class="keyword">int</span> curRow = <span class="number">0</span>;</span><br><span class="line"><span class="number">122</span>     <span class="comment">// 当前行的第一个子区域位置索引</span></span><br><span class="line"><span class="number">123</span>     <span class="keyword">int</span> firstAreaCur = <span class="number">0</span>;</span><br><span class="line"><span class="number">124</span>     <span class="comment">// 前一行的第一个子区域位置索引</span></span><br><span class="line"><span class="number">125</span>     <span class="keyword">int</span> firstAreaPrev = <span class="number">0</span>;</span><br><span class="line"><span class="number">126</span>     <span class="comment">// 前一行的最后一个子区域位置索引</span></span><br><span class="line"><span class="number">127</span>     <span class="keyword">int</span> lastAreaPrev = <span class="number">0</span>;</span><br><span class="line"><span class="number">128</span></span><br><span class="line"><span class="number">129</span>     <span class="comment">// 初始化标签都为0</span></span><br><span class="line"><span class="number">130</span>     labelOfArea.assign(numberOfArea, <span class="number">0</span>);</span><br><span class="line"><span class="number">131</span>    </span><br><span class="line"><span class="number">132</span>     <span class="comment">// 遍历所有子区域并标记</span></span><br><span class="line"><span class="number">133</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; numberOfArea; i++)</span><br><span class="line"><span class="number">134</span>     &#123;</span><br><span class="line"><span class="number">135</span>         <span class="comment">// 行切换时更新状态变量</span></span><br><span class="line"><span class="number">136</span>         <span class="keyword">if</span> (curRow != rowArea[i])</span><br><span class="line"><span class="number">137</span>         &#123;</span><br><span class="line"><span class="number">138</span>             curRow = rowArea[i];</span><br><span class="line"><span class="number">139</span>             firstAreaPrev = firstAreaCur;</span><br><span class="line"><span class="number">140</span>             lastAreaPrev = i - <span class="number">1</span>;</span><br><span class="line"><span class="number">141</span>             firstAreaCur = i;</span><br><span class="line"><span class="number">142</span>         &#125;</span><br><span class="line"><span class="number">143</span></span><br><span class="line"><span class="number">144</span>         <span class="comment">// 相邻行不存在子区域</span></span><br><span class="line"><span class="number">145</span>         <span class="keyword">if</span> (curRow != rowArea[firstAreaPrev] + <span class="number">1</span>)</span><br><span class="line"><span class="number">146</span>         &#123;</span><br><span class="line"><span class="number">147</span>             labelOfArea[i] = label++;</span><br><span class="line"><span class="number">148</span>             <span class="keyword">continue</span>;</span><br><span class="line"><span class="number">149</span>         &#125;</span><br><span class="line"><span class="number">150</span>         <span class="comment">// 对前一行进行迭代</span></span><br><span class="line"><span class="number">151</span>         <span class="keyword">for</span> (<span class="keyword">int</span> j = firstAreaPrev; j &lt;= lastAreaPrev; j++)</span><br><span class="line"><span class="number">152</span>         &#123;</span><br><span class="line"><span class="number">153</span>             <span class="comment">// 判断是否相连</span></span><br><span class="line"><span class="number">154</span>             <span class="keyword">if</span> (stArea[i] &lt;= enArea[j] + offset &amp;&amp; enArea[i] &gt;= stArea[j] - offset)</span><br><span class="line"><span class="number">155</span>             &#123;</span><br><span class="line"><span class="number">156</span>                 <span class="keyword">if</span> (labelOfArea[i] == <span class="number">0</span>)</span><br><span class="line"><span class="number">157</span>                     <span class="comment">// 之前没有标记过</span></span><br><span class="line"><span class="number">158</span>                     labelOfArea[i] = labelOfArea[j];</span><br><span class="line"><span class="number">159</span>                 <span class="keyword">else</span> <span class="keyword">if</span> (labelOfArea[i] != labelOfArea[j])</span><br><span class="line"><span class="number">160</span>                     <span class="comment">// 之前已经被标记，保存等价对</span></span><br><span class="line"><span class="number">161</span>                     equalLabels.push_back(<span class="built_in">make_pair</span>(labelOfArea[i], labelOfArea[j]));</span><br><span class="line"><span class="number">162</span>             &#125;<span class="keyword">else</span> <span class="keyword">if</span> (enArea[i] &lt; stArea[j] - offset)</span><br><span class="line"><span class="number">163</span>             &#123;</span><br><span class="line"><span class="number">164</span>                 <span class="comment">// 为当前行下一个子区域缩小上一行的迭代范围</span></span><br><span class="line"><span class="number">165</span>                 firstAreaPrev = max(firstAreaPrev, j - <span class="number">1</span>);</span><br><span class="line"><span class="number">166</span>                 <span class="keyword">break</span>;</span><br><span class="line"><span class="number">167</span>             &#125;</span><br><span class="line"><span class="number">168</span>         &#125;</span><br><span class="line"><span class="number">169</span>         <span class="comment">// 与上一行不存在相连</span></span><br><span class="line"><span class="number">170</span>         <span class="keyword">if</span> (labelOfArea[i] == <span class="number">0</span>)</span><br><span class="line"><span class="number">171</span>         &#123;</span><br><span class="line"><span class="number">172</span>             labelOfArea[i] = label++;</span><br><span class="line"><span class="number">173</span>         &#125;</span><br><span class="line"><span class="number">174</span>     &#125;</span><br><span class="line"><span class="number">175</span> &#125;</span><br><span class="line"><span class="number">176</span></span><br><span class="line"><span class="number">177</span></span><br><span class="line"><span class="number">178</span> <span class="comment">// 并查集初始化</span></span><br><span class="line"><span class="number">179</span> <span class="function"><span class="keyword">void</span> <span class="title">AreaMark::setInit</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">180 </span>&#123;</span><br><span class="line"><span class="number">181</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line"><span class="number">182</span>     &#123;</span><br><span class="line"><span class="number">183</span>         labelMap.push_back(i);</span><br><span class="line"><span class="number">184</span>         labelRank.push_back(<span class="number">0</span>);</span><br><span class="line"><span class="number">185</span>     &#125;</span><br><span class="line"><span class="number">186</span> &#125;</span><br><span class="line"><span class="number">187</span></span><br><span class="line"><span class="number">188</span> <span class="comment">// 查根</span></span><br><span class="line"><span class="number">189</span> <span class="function"><span class="keyword">int</span> <span class="title">AreaMark::findRoot</span><span class="params">(<span class="keyword">int</span> label)</span></span></span><br><span class="line"><span class="function">190 </span>&#123;</span><br><span class="line"><span class="number">191</span>     <span class="keyword">if</span> (labelMap[label] == label)</span><br><span class="line"><span class="number">192</span>     &#123;</span><br><span class="line"><span class="number">193</span>         <span class="keyword">return</span> label;</span><br><span class="line"><span class="number">194</span>     &#125;</span><br><span class="line"><span class="number">195</span>     <span class="keyword">else</span></span><br><span class="line"><span class="number">196</span>     &#123;</span><br><span class="line"><span class="number">197</span>         <span class="comment">//路径压缩优化</span></span><br><span class="line"><span class="number">198</span>         <span class="keyword">return</span> labelMap[label] = findRoot(labelMap[label]);</span><br><span class="line"><span class="number">199</span>     &#125;</span><br><span class="line"><span class="number">200</span> &#125;</span><br><span class="line"><span class="number">201</span></span><br><span class="line"><span class="number">202</span> <span class="comment">// 合并</span></span><br><span class="line"><span class="number">203</span> <span class="function"><span class="keyword">void</span> <span class="title">AreaMark::unite</span><span class="params">(<span class="keyword">int</span> labelA, <span class="keyword">int</span> labelB)</span></span></span><br><span class="line"><span class="function">204 </span>&#123;</span><br><span class="line"><span class="number">205</span>     labelA = findRoot(labelA);</span><br><span class="line"><span class="number">206</span>     labelB = findRoot(labelB);</span><br><span class="line"><span class="number">207</span></span><br><span class="line"><span class="number">208</span>     <span class="keyword">if</span> (labelA == labelB)</span><br><span class="line"><span class="number">209</span>     &#123;</span><br><span class="line"><span class="number">210</span>         <span class="keyword">return</span>;</span><br><span class="line"><span class="number">211</span>     &#125;</span><br><span class="line"><span class="number">212</span>     <span class="comment">// 秩优化，秩大的树合并秩小的树</span></span><br><span class="line"><span class="number">213</span>     <span class="keyword">if</span> (labelRank[labelA] &lt; labelRank[labelB])</span><br><span class="line"><span class="number">214</span>     &#123;</span><br><span class="line"><span class="number">215</span>         labelMap[labelA] = labelB;</span><br><span class="line"><span class="number">216</span>     &#125;</span><br><span class="line"><span class="number">217</span>     <span class="keyword">else</span></span><br><span class="line"><span class="number">218</span>     &#123;</span><br><span class="line"><span class="number">219</span>         labelMap[labelB] = labelA;</span><br><span class="line"><span class="number">220</span>         <span class="keyword">if</span> (labelRank[labelA] == labelRank[labelB])</span><br><span class="line"><span class="number">221</span>         &#123;</span><br><span class="line"><span class="number">222</span>             labelRank[labelA]++;</span><br><span class="line"><span class="number">223</span>         &#125;</span><br><span class="line"><span class="number">224</span>     &#125;</span><br><span class="line"><span class="number">225</span>    </span><br><span class="line"><span class="number">226</span> &#125;</span><br><span class="line"><span class="number">227</span></span><br><span class="line"><span class="number">228</span> <span class="comment">// 等价对处理，标签重映射</span></span><br><span class="line"><span class="number">229</span> <span class="function"><span class="keyword">void</span> <span class="title">AreaMark::replaceEqualMark</span><span class="params">()</span></span></span><br><span class="line"><span class="function">230 </span>&#123;</span><br><span class="line"><span class="number">231</span>     <span class="keyword">int</span> maxLabel = *max_element(labelOfArea.begin(), labelOfArea.end());</span><br><span class="line"><span class="number">232</span>    </span><br><span class="line"><span class="number">233</span>     setInit(maxLabel);</span><br><span class="line"><span class="number">234</span>    </span><br><span class="line"><span class="number">235</span>     <span class="comment">// 合并等价对，标签初映射</span></span><br><span class="line"><span class="number">236</span>     <span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt;::iterator labPair;</span><br><span class="line"><span class="number">237</span>     <span class="keyword">for</span> (labPair = equalLabels.begin(); labPair != equalLabels.end(); labPair++)</span><br><span class="line"><span class="number">238</span>     &#123;</span><br><span class="line"><span class="number">239</span>         unite(labPair-&gt;first, labPair-&gt;second);</span><br><span class="line"><span class="number">240</span>     &#125;</span><br><span class="line"><span class="number">241</span></span><br><span class="line"><span class="number">242</span>     <span class="comment">// 标签重映射，填补缺失标签</span></span><br><span class="line"><span class="number">243</span>     <span class="keyword">int</span> newLabel=<span class="number">0</span>;</span><br><span class="line"><span class="number">244</span>     <span class="function"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; <span class="title">labelReMap</span><span class="params">(maxLabel + <span class="number">1</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="number">245</span>     <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator old;</span><br><span class="line"><span class="number">246</span>     <span class="keyword">for</span> (old = labelMap.begin(); old != labelMap.end(); old++)</span><br><span class="line"><span class="number">247</span>     &#123;</span><br><span class="line"><span class="number">248</span>         <span class="keyword">if</span> (labelReMap[findRoot(*old)] == <span class="number">0</span>)</span><br><span class="line"><span class="number">249</span>         &#123;</span><br><span class="line"><span class="number">250</span>             labelReMap[findRoot(*old)] = newLabel++;</span><br><span class="line"><span class="number">251</span>         &#125;</span><br><span class="line"><span class="number">252</span>     &#125;</span><br><span class="line"><span class="number">253</span>     <span class="comment">// 根据重映射结果修改标签</span></span><br><span class="line"><span class="number">254</span>     <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator label;</span><br><span class="line"><span class="number">255</span>     <span class="keyword">for</span> (label = labelOfArea.begin(); label != labelOfArea.end(); label++)</span><br><span class="line"><span class="number">256</span>     &#123;</span><br><span class="line"><span class="number">257</span>         *label = labelReMap[findRoot(*label)];</span><br><span class="line"><span class="number">258</span>     &#125;  </span><br><span class="line"><span class="number">259</span></span><br><span class="line"><span class="number">260</span> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自己写的：数组的四邻域</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>; </span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row 16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col 16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxnum 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> offset 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15</span></span><br><span class="line"><span class="keyword">int</span> bin_img[row][col] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 0</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 1</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 2</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 3</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 4</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 5</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 6</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 7</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 8</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 9</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 10</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 11</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 12</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 13</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 14</span></span><br><span class="line">                         <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;<span class="comment">// 15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> area_start[maxnum];</span><br><span class="line"><span class="keyword">int</span> area_end[maxnum];</span><br><span class="line"><span class="keyword">int</span> area_row[maxnum];</span><br><span class="line"><span class="keyword">int</span> num_area;                       </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">searchArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> ns=<span class="number">0</span>,ne=<span class="number">0</span>,nr=<span class="number">0</span>;</span><br><span class="line">num_area = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][<span class="number">0</span>]==white)&#123;</span><br><span class="line">num_area++;</span><br><span class="line">area_start[ns++]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][j<span class="number">-1</span>]==black&amp;&amp;bin_img[i][j]==white)&#123;</span><br><span class="line">num_area++;</span><br><span class="line">area_start[ns++]=j;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bin_img[i][j]==black&amp;&amp;bin_img[i][j<span class="number">-1</span>]==white)&#123;</span><br><span class="line">area_end[ne++]=j<span class="number">-1</span>;</span><br><span class="line">area_row[nr++]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][col<span class="number">-1</span>]==white)&#123;</span><br><span class="line">area_end[ne++]=col<span class="number">-1</span>;</span><br><span class="line">area_row[nr++]=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> area_label[maxnum];</span><br><span class="line"><span class="keyword">int</span> equalLabels[maxnum][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">markArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> nel=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> label=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> row_current=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> index_currentFirstArea=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> index_preFirstArea=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> index_preLastArea=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">area_label[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line"><span class="comment">//轮到下一行时，变量更新 </span></span><br><span class="line"><span class="keyword">if</span>(row_current!=area_row[i])&#123;</span><br><span class="line">row_current = area_row[i];</span><br><span class="line">index_preFirstArea = index_currentFirstArea;</span><br><span class="line">index_preLastArea = i<span class="number">-1</span>;</span><br><span class="line">index_currentFirstArea = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(row_current!=area_row[index_preFirstArea]+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">//相邻行不存在子区域 </span></span><br><span class="line">area_label[i]=label++;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//当前行与上一行进行比较 </span></span><br><span class="line"><span class="keyword">for</span>(j=index_preFirstArea;j&lt;=index_preLastArea;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(area_start[i]&lt;=area_end[j]+offset&amp;&amp;area_end[i]&gt;=area_start[j]-offset)&#123;</span><br><span class="line"><span class="comment">//相连的情况 </span></span><br><span class="line"><span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//没有标记情况 </span></span><br><span class="line">area_label[i]=area_label[j];</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(area_label[i]!=area_label[j])&#123;</span><br><span class="line"><span class="comment">//已经标记过，保存等价对 </span></span><br><span class="line">equalLabels[nel][<span class="number">0</span>]=area_label[i];</span><br><span class="line">equalLabels[nel++][<span class="number">1</span>]=area_label[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(area_end[i]&lt;area_start[j]-offset)&#123;</span><br><span class="line"><span class="comment">//不相连的情况 </span></span><br><span class="line"><span class="keyword">if</span>(index_preFirstArea&lt;j<span class="number">-1</span>)</span><br><span class="line">index_preFirstArea=j<span class="number">-1</span>;</span><br><span class="line">j=index_preLastArea;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这一行循环完与上一行不存在联系 </span></span><br><span class="line"><span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line">area_label[i] = ++label;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等价对处理，标签重映射</span></span><br><span class="line"><span class="keyword">int</span> labelMap[maxnum];</span><br><span class="line"><span class="keyword">int</span> labelRank[maxnum];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">replaceEqualMark</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">labelMap[i]=i;</span><br><span class="line">labelRank[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> s,e,r,l;</span><br><span class="line">searchArea();</span><br><span class="line">markArea();</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;num_area;i++)&#123;</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;area_start[i]&lt;&lt;&quot; &quot;&lt;&lt;area_end[i]&lt;&lt;&quot; &quot;&lt;&lt;area_row[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">////cout&lt;&lt;area_label[i]&lt;&lt;&quot; &quot;&lt;&lt;equalLabels[i][0]&lt;&lt;&quot; &quot;&lt;&lt;equalLabels[i][1]&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">r=area_row[i];</span><br><span class="line">s=area_start[i];</span><br><span class="line">e=area_end[i];</span><br><span class="line">l=area_label[i];</span><br><span class="line"><span class="keyword">for</span>(j=s;j&lt;=e;j++)&#123;</span><br><span class="line">bin_img[r][j]=l;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;bin_img[i][j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自己写的：改了一半的用链式指针的连通域</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> white 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> black 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row 16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col 16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> offset 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15</span></span><br><span class="line"><span class="keyword">int</span> bin_img[row][col] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 0</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 1</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 2</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 3</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 4</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 5</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 6</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 7</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 8</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 9</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 10</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 11</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 12</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 13</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 14</span></span><br><span class="line">                         <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;<span class="comment">// 15</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">area_start</span>,*<span class="title">area_end</span>,*<span class="title">area_row</span>,*<span class="title">area_label</span>;</span></span><br><span class="line"><span class="keyword">int</span> num_area;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(struct Node *head,<span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">temp</span>;</span></span><br><span class="line"></span><br><span class="line">temp=(struct Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">temp-&gt;data = data;</span><br><span class="line"></span><br><span class="line">temp-&gt;next = head-&gt;next;</span><br><span class="line">head-&gt;next = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">(struct Node *head)</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>*<span class="title">p</span>;</span></span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p-&gt;data);</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">(struct Node *head)</span></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">p</span>,*<span class="title">q</span>;</span></span><br><span class="line">p = head-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(p!=<span class="literal">NULL</span>)&#123;</span><br><span class="line">q=p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line">p=q;</span><br><span class="line">&#125;</span><br><span class="line">head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">searchArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line">num_area=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">area_start=(struct Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">area_start-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">area_end=(struct Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">area_end-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line">area_row=(struct Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">area_row-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][<span class="number">0</span>]==white)&#123;</span><br><span class="line">num_area++;</span><br><span class="line">Insert(area_start,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][j<span class="number">-1</span>]==black&amp;&amp;bin_img[i][j]==white)&#123;</span><br><span class="line">num_area++;</span><br><span class="line">Insert(area_start,j);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(bin_img[i][j]==black&amp;&amp;bin_img[i][j<span class="number">-1</span>]==white)&#123;</span><br><span class="line">Insert(area_end,j<span class="number">-1</span>);</span><br><span class="line">Insert(area_row,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][col<span class="number">-1</span>]==white)&#123;</span><br><span class="line">Insert(area_end,col<span class="number">-1</span>);</span><br><span class="line">Insert(area_row,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">markArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> nel=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> label=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> row_current=area_row-&gt;next-&gt;data;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">index_currentFirstArea</span>=</span>area_row-&gt;next;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">index_preFirstArea</span>=</span>area_row-&gt;next;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">index_preLastArea</span>=</span>area_row-&gt;next;</span><br><span class="line"></span><br><span class="line">area_label=(struct Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">area_label-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">pr</span>,*<span class="title">pr_pre</span>,*<span class="title">pl</span>,*<span class="title">ps</span>,*<span class="title">pe</span>;</span></span><br><span class="line">pr=area_row-&gt;next;</span><br><span class="line">pr_pre=area_row;</span><br><span class="line">ps=area_start-&gt;next;</span><br><span class="line">pe=area_end-&gt;next;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">Insert(area_label,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pl=area_label-&gt;next;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line"><span class="comment">//轮到下一行时，变量更新 </span></span><br><span class="line"><span class="keyword">if</span>(row_current!=pr-&gt;data)&#123;</span><br><span class="line">row_current = pr-&gt;data;</span><br><span class="line">index_preFirstArea = index_currentFirstArea;</span><br><span class="line">index_preLastArea = pr_pre;</span><br><span class="line">index_currentFirstArea = pr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(row_current!=index_preFirstArea-&gt;data<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="comment">//相邻行不存在子区域 </span></span><br><span class="line">pl-&gt;data= ++label;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//当前行与上一行进行比较 </span></span><br><span class="line">struct Node *t1,*t2;</span><br><span class="line">t1=index_preLastArea;</span><br><span class="line">t2=index_preFirstArea;</span><br><span class="line"><span class="keyword">while</span>()&#123;</span><br><span class="line"><span class="keyword">if</span>(ps-&gt;data&lt;=)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=index_preFirstArea;j&lt;=index_preLastArea;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(area_start[i]&lt;=area_end[j]+offset&amp;&amp;area_end[i]&gt;=area_start[j]-offset)&#123;</span><br><span class="line"><span class="comment">//相连的情况 </span></span><br><span class="line"><span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//没有标记情况 </span></span><br><span class="line">area_label[i]=area_label[j];</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(area_label[i]!=area_label[j])&#123;</span><br><span class="line"><span class="comment">//已经标记过，保存等价对 </span></span><br><span class="line">equalLabels[nel][<span class="number">0</span>]=area_label[i];</span><br><span class="line">equalLabels[nel++][<span class="number">1</span>]=area_label[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(area_end[i]&lt;area_start[j]-offset)&#123;</span><br><span class="line"><span class="comment">//不相连的情况 </span></span><br><span class="line"><span class="keyword">if</span>(index_preFirstArea&lt;j<span class="number">-1</span>)</span><br><span class="line">index_preFirstArea=j<span class="number">-1</span>;</span><br><span class="line">j=index_preLastArea;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这一行循环完与上一行不存在联系 </span></span><br><span class="line"><span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line">area_label[i] = ++label;</span><br><span class="line">&#125;</span><br><span class="line">pr = pr-&gt;next;</span><br><span class="line">pr_pre = pr_pre-&gt;next;</span><br><span class="line">ps=ps-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">searchArea();</span><br><span class="line"><span class="comment">//printf(&quot;%d&quot;,ps-&gt;next);</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自己写的：竞速的四邻域</span></span><br><span class="line"><span class="comment">//0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15</span></span><br><span class="line"><span class="keyword">int</span> bin_img[row][col] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 0</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 1</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 2</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 3</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 4</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 5</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 6</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 7</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 8</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="comment">// 9</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 10</span></span><br><span class="line">                          <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 11</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 12</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 13</span></span><br><span class="line">                          <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="comment">// 14</span></span><br><span class="line">                         <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;<span class="comment">// 15</span></span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> point_count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> point_x,point_y;</span><br><span class="line"><span class="keyword">int</span> left=<span class="number">0</span>,right=<span class="number">0</span>,top=<span class="number">0</span>,bottom=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> point[col+<span class="number">20</span>][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;col;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(bin_img[i][j]==white)&#123;</span><br><span class="line">point_count++;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(point_count&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">point_x = j-point_count/<span class="number">2</span>;</span><br><span class="line">point_y = i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((point_x-left)&gt;<span class="number">-1</span>&amp;&amp;bin_img[point_y][point_x-left]==white)&#123;</span><br><span class="line">left++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(bin_img[point_y][point_x+right]==white&amp;&amp;(point_x+right)&lt;col)&#123;</span><br><span class="line">right++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(bin_img[point_y-top][point_x]==white&amp;&amp;(point_y-top)&gt;<span class="number">-1</span>)&#123;</span><br><span class="line">top++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(bin_img[point_y+bottom][point_x]==white&amp;&amp;(point_y+bottom)&lt;row)&#123;</span><br><span class="line">bottom++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((left-right)&lt;<span class="number">3</span>&amp;&amp;(right-left)&lt;<span class="number">3</span>&amp;&amp;(top-bottom)&lt;<span class="number">3</span>&amp;&amp;(bottom-top)&lt;<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!(top==bottom&amp;&amp;top==<span class="number">1</span>&amp;&amp;bottom==<span class="number">1</span>)||!(right==left&amp;&amp;right==<span class="number">1</span>&amp;&amp;left==<span class="number">1</span>))&#123;</span><br><span class="line">point[n][<span class="number">0</span>]=point_x;</span><br><span class="line">point[n++][<span class="number">1</span>]=point_y;</span><br><span class="line"><span class="comment">//cout&lt;&lt;&quot;point_count=&quot;&lt;&lt;point_count&lt;&lt;endl; </span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;left&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;right&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;top&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;bottom&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;point_x=&quot;</span>&lt;&lt;point[n<span class="number">-1</span>][<span class="number">1</span>]&lt;&lt;<span class="string">&quot; point_y=&quot;</span>&lt;&lt;point[n<span class="number">-1</span>][<span class="number">0</span>]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">left=<span class="number">0</span>,right=<span class="number">0</span>,top=<span class="number">0</span>,bottom=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">point_count=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="小车使用的最终改版"><a class="markdownIt-Anchor" href="#小车使用的最终改版"></a> 小车使用的最终改版</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> col  MT9V03X_W <span class="comment">//宽 120</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> row  MT9V03X_H <span class="comment">//高 80</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxnum 1000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> offset 0</span></span><br><span class="line"></span><br><span class="line">uint8 bin_img[row][col]; <span class="comment">//二值化图 </span></span><br><span class="line">uint8 domains[row][col]; <span class="comment">//连通域图</span></span><br><span class="line"></span><br><span class="line">uint8 area_start[maxnum];</span><br><span class="line">uint8 area_end[maxnum];</span><br><span class="line">uint8 area_row[maxnum];</span><br><span class="line">uint8 num_area;   </span><br><span class="line">uint8 area_label[maxnum];</span><br><span class="line">uint8 point[col+<span class="number">20</span>][<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> equalLabels[maxnum][<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//连通域</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Connect_domains</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint16 i,j;</span><br><span class="line">  uint8 s,e,r,l;</span><br><span class="line">  searchArea();</span><br><span class="line">  markArea();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">    r=area_row[i];</span><br><span class="line">    s=area_start[i];</span><br><span class="line">    e=area_end[i];</span><br><span class="line">    l=area_label[i];</span><br><span class="line">    <span class="keyword">for</span>(j=s;j&lt;=e;j++)&#123;</span><br><span class="line">      domains[r][j]=l;</span><br><span class="line"><span class="comment">//      ips200_drawpoint(j,r,RED);</span></span><br><span class="line"><span class="comment">//      ips200_drawpoint(j+1,r,RED);</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">searchArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 i,j;</span><br><span class="line">  uint16 ns=<span class="number">0</span>,ne=<span class="number">0</span>,nr=<span class="number">0</span>;</span><br><span class="line">  num_area = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;row;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(bin_img[i][<span class="number">0</span>]==white)&#123;</span><br><span class="line">      num_area++;</span><br><span class="line">      area_start[ns++]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;col;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(bin_img[i][j<span class="number">-1</span>]==black&amp;&amp;bin_img[i][j]==white)&#123;</span><br><span class="line">        num_area++;</span><br><span class="line">        area_start[ns++]=j;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bin_img[i][j]==black&amp;&amp;bin_img[i][j<span class="number">-1</span>]==white)&#123;</span><br><span class="line">        area_end[ne++]=j<span class="number">-1</span>;</span><br><span class="line">        area_row[nr++]=i;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(bin_img[i][col<span class="number">-1</span>]==white)&#123;</span><br><span class="line">      area_end[ne++]=col<span class="number">-1</span>;</span><br><span class="line">      area_row[nr++]=i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">markArea</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">  uint8 i,j;</span><br><span class="line"><span class="comment">//  int nel=0;</span></span><br><span class="line">  uint8 label=<span class="number">1</span>;</span><br><span class="line">  uint8 row_current=<span class="number">0</span>;</span><br><span class="line">  uint8 index_currentFirstArea=<span class="number">0</span>;</span><br><span class="line">  uint8 index_preFirstArea=<span class="number">0</span>;</span><br><span class="line">  uint8 index_preLastArea=<span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">    area_label[i]=<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num_area;i++)&#123;</span><br><span class="line">    <span class="comment">//轮到下一行时，变量更新 </span></span><br><span class="line">    <span class="keyword">if</span>(row_current!=area_row[i])&#123;</span><br><span class="line">      row_current = area_row[i];</span><br><span class="line">      index_preFirstArea = index_currentFirstArea;</span><br><span class="line">      index_preLastArea = i<span class="number">-1</span>;</span><br><span class="line">      index_currentFirstArea = i;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(row_current!=area_row[index_preFirstArea]+<span class="number">1</span>)&#123;</span><br><span class="line">      <span class="comment">//相邻行不存在子区域 </span></span><br><span class="line">      area_label[i]=label++;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">//当前行与上一行进行比较 </span></span><br><span class="line">      <span class="keyword">for</span>(j=index_preFirstArea;j&lt;=index_preLastArea;j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(area_start[i]&lt;=area_end[j]+offset&amp;&amp;area_end[i]&gt;=area_start[j]-offset)&#123;</span><br><span class="line">          <span class="comment">//相连的情况 </span></span><br><span class="line">          <span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//没有标记情况 </span></span><br><span class="line">            area_label[i]=area_label[j];</span><br><span class="line">          &#125;</span><br><span class="line"><span class="comment">//          else if(area_label[i]!=area_label[j])&#123;</span></span><br><span class="line"><span class="comment">//            //已经标记过，保存等价对 </span></span><br><span class="line"><span class="comment">//            equalLabels[nel][0]=area_label[i];</span></span><br><span class="line"><span class="comment">//            equalLabels[nel++][1]=area_label[j];</span></span><br><span class="line"><span class="comment">//          &#125;</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(area_end[i]&lt;area_start[j]-offset)&#123;</span><br><span class="line">          <span class="comment">//不相连的情况 </span></span><br><span class="line">          <span class="keyword">if</span>(index_preFirstArea&lt;j<span class="number">-1</span>)</span><br><span class="line">            index_preFirstArea=j<span class="number">-1</span>;</span><br><span class="line">          j=index_preLastArea;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//这一行循环完与上一行不存在联系 </span></span><br><span class="line">    <span class="keyword">if</span>(area_label[i]==<span class="number">0</span>)&#123;</span><br><span class="line">      area_label[i] = ++label;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;用fpga做图像处理的基础知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#用fpga做图像处理的基础知识&quot;&gt;&lt;/a&gt; 用FPGA做图像处理的基础知识&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;在一些工业领域用的图像传感器有哪些？&lt;/li&gt;
&lt;li</summary>
      
    
    
    
    <category term="智能车" scheme="https://zhang0224gz.github.io/categories/%E6%99%BA%E8%83%BD%E8%BD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown的语言</title>
    <link href="https://zhang0224gz.github.io/2022/04/19/md%E7%9A%84%E8%AF%AD%E8%A8%80/"/>
    <id>https://zhang0224gz.github.io/2022/04/19/md%E7%9A%84%E8%AF%AD%E8%A8%80/</id>
    <published>2022-04-19T09:57:35.322Z</published>
    <updated>2022-09-11T04:52:59.820Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911125218343.png" alt="image-20220911125218343" /></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911125252302.png" alt="image-20220911125252302" /></p><h1 id="修改字体"><a class="markdownIt-Anchor" href="#修改字体"></a> 修改字体</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">改变字体大小：&lt;font size=1&gt;字体大小size=1&lt;/font&gt;   </span><br><span class="line">// size：规定文本的尺寸大小，取值范围为1~7 ，浏览器默认值是 3。注意，size=50也是可以显示的，但与7的字体大小一样</span><br><span class="line"></span><br><span class="line">改变字体颜色：&lt;font color=red&gt;红色&lt;/font&gt;、&lt;font color=#ff0000&gt;红色&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">改变字体类型：&lt;font face=&quot;楷书&quot;&gt;楷书&lt;/font&gt;</span><br><span class="line">//注意，字体类型的设置只能在电脑上才能显示字体效果，在手机上无法显示字体类型</span><br><span class="line"></span><br><span class="line">上下标：</span><br><span class="line">html形式：下标：a&lt;sub&gt;2&lt;/sub&gt; ；上标：a&lt;sup&gt;2&lt;/sup&gt;</span><br><span class="line">首先使用$$形成公式框进行公式编写</span><br><span class="line">$$</span><br><span class="line">a_2</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">a^2</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">双下标(多个字符用&#123;&#125;括起来)：不会换行</span><br><span class="line">$$</span><br><span class="line">D_&#123;KB_A&#125;</span><br><span class="line">$x^p_ &#123;ij&#125;$</span><br><span class="line">$$</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911110209719.png" alt="image-20220911110209719" /></p><h1 id="md公式"><a class="markdownIt-Anchor" href="#md公式"></a> md公式</h1><h2 id="使用数学公式"><a class="markdownIt-Anchor" href="#使用数学公式"></a> 使用数学公式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">https://blog.csdn.net/jyfu2_12/article/details/79207643</span><br><span class="line">https://zhuanlan.zhihu.com/p/261750408</span><br><span class="line">矩阵：</span><br><span class="line">$$</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line"> 1 &amp; 2 &amp; 3 \\</span><br><span class="line"> 4 &amp; 5 &amp; 6 \\</span><br><span class="line"> 7 &amp; 8 &amp; 9 </span><br><span class="line">\end&#123;matrix&#125; \tag&#123;1&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">方程组、条件表达式：</span><br><span class="line">$$</span><br><span class="line">f(n) =</span><br><span class="line">\begin&#123;cases&#125; </span><br><span class="line">n/2,  &amp; \text&#123;if &#125;n\text&#123; is even&#125; \\</span><br><span class="line">3n+1, &amp; \text&#123;if &#125;n\text&#123; is odd&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">3x + 5y +  z \\</span><br><span class="line">7x - 2y + 4z \\</span><br><span class="line">-6x + 3y + 2z</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">多行等式对齐：</span><br><span class="line">$$</span><br><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">a &amp;= b + c \\</span><br><span class="line">  &amp;= d + e + f</span><br><span class="line">\end&#123;aligned&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">真值表：</span><br><span class="line">$$</span><br><span class="line">\begin&#123;array&#125;&#123;cc|c&#125;</span><br><span class="line">       A&amp;B&amp;F\\</span><br><span class="line">\hline 0&amp;0&amp;0\\</span><br><span class="line">       0&amp;1&amp;1\\</span><br><span class="line">       1&amp;0&amp;1\\</span><br><span class="line">       1&amp;1&amp;1\\</span><br><span class="line">\end&#123;array&#125;</span><br><span class="line">$$</span><br><span class="line"></span><br><span class="line">行列式：</span><br><span class="line">$$</span><br><span class="line"> \begin&#123;vmatrix&#125;</span><br><span class="line">   1 &amp; 2 &amp; 3 \\</span><br><span class="line">   4 &amp; 5 &amp; 6 \\</span><br><span class="line">   7 &amp; 8 &amp; 9</span><br><span class="line">  \end&#123;vmatrix&#125;</span><br><span class="line">\tag&#123;7&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>\begin{matrix} 1 & 2 & 3 \\ 4 & 5 & 6 \\ 7 & 8 & 9 \end{matrix} \tag{1}<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">a_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.43056em;"></span><span class="strut bottom" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:0.15em;margin-right:0.05em;margin-left:0em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">a^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8641079999999999em;"></span><span class="strut bottom" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit">a</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi>K</mi><msub><mi>B</mi><mi>A</mi></msub></mrow></msub><msubsup><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi>p</mi></msubsup></mrow><annotation encoding="application/x-tex">D_{KB_A}x^p_ {ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7823em;"></span><span class="strut bottom" style="height:1.1952720000000001em;vertical-align:-0.412972em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mord mathit" style="margin-right:0.02778em;">D</span><span class="vlist"><span style="top:0.15000000000000002em;margin-right:0.05em;margin-left:-0.02778em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span><span class="mord"><span class="mord mathit" style="margin-right:0.05017em;">B</span><span class="vlist"><span style="top:0.15em;margin-right:0.07142857142857144em;margin-left:-0.05017em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-scriptstyle scriptscriptstyle cramped"><span class="mord mathit">A</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord"><span class="mord mathit">x</span><span class="vlist"><span style="top:0.276864em;margin-left:0em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle cramped"><span class="mord scriptstyle cramped"><span class="mord mathit">i</span><span class="mord mathit" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-0.480908em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">p</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo>(</mo><mi>n</mi><mo>)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo></mrow></mtd><mtd><mrow><mtext><mi mathvariant="normal">i</mi><mi mathvariant="normal">f</mi><mtext> </mtext></mtext><mi>n</mi><mtext><mtext> </mtext><mi mathvariant="normal">i</mi><mi mathvariant="normal">s</mi><mtext> </mtext><mi mathvariant="normal">e</mi><mi mathvariant="normal">v</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">n</mi></mtext></mrow></mtd></mtr><mtr><mtd><mrow><mn>3</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo></mrow></mtd><mtd><mrow><mtext><mi mathvariant="normal">i</mi><mi mathvariant="normal">f</mi><mtext> </mtext></mtext><mi>n</mi><mtext><mtext> </mtext><mi mathvariant="normal">i</mi><mi mathvariant="normal">s</mi><mtext> </mtext><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">d</mi></mtext></mrow></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(n) =\begin{cases} n/2,  &amp; \text{if }n\text{ is even} \\3n+1, &amp; \text{if }n\text{ is odd}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.75em;"></span><span class="strut bottom" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span><span class="mrel">=</span><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist"><span style="top:-0.6819999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathrm">/</span><span class="mord mathrm">2</span><span class="mpunct">,</span></span></span><span style="top:0.7579999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">3</span><span class="mord mathit">n</span><span class="mbin">+</span><span class="mord mathrm">1</span><span class="mpunct">,</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist"><span style="top:-0.6819999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">i</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mspace"> </span></span><span class="mord mathit">n</span><span class="text mord displaystyle textstyle uncramped"><span class="mord mspace"> </span><span class="mord mathrm">i</span><span class="mord mathrm">s</span><span class="mord mspace"> </span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.01389em;">v</span><span class="mord mathrm">e</span><span class="mord mathrm">n</span></span></span></span><span style="top:0.7579999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="text mord displaystyle textstyle uncramped"><span class="mord mathrm">i</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mspace"> </span></span><span class="mord mathit">n</span><span class="text mord displaystyle textstyle uncramped"><span class="mord mspace"> </span><span class="mord mathrm">i</span><span class="mord mathrm">s</span><span class="mord mspace"> </span><span class="mord mathrm">o</span><span class="mord mathrm">d</span><span class="mord mathrm">d</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">{</mo><mtable><mtr><mtd><mrow><mn>3</mn><mi>x</mi><mo>+</mo><mn>5</mn><mi>y</mi><mo>+</mo><mi>z</mi></mrow></mtd></mtr><mtr><mtd><mrow><mn>7</mn><mi>x</mi><mo>−</mo><mn>2</mn><mi>y</mi><mo>+</mo><mn>4</mn><mi>z</mi></mrow></mtd></mtr><mtr><mtd><mrow><mo>−</mo><mn>6</mn><mi>x</mi><mo>+</mo><mn>3</mn><mi>y</mi><mo>+</mo><mn>2</mn><mi>z</mi></mrow></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\begin{cases}3x + 5y +  z \\7x - 2y + 4z \\-6x + 3y + 2z\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:2.41em;"></span><span class="strut bottom" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="base displaystyle textstyle uncramped"><span class="minner displaystyle textstyle uncramped"><span class="style-wrap reset-textstyle textstyle uncramped"><span class="delimsizing mult"><span class="vlist"><span style="top:0.9500099999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:0.9500099999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-0.000010000000000287557em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-1.1500100000000002em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-1.4500200000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist"><span style="top:-1.4020000000000001em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">3</span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathrm">5</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span><span style="top:0.0379999999999997em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathrm">7</span><span class="mord mathit">x</span><span class="mbin">−</span><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord mathrm">4</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span><span style="top:1.4779999999999998em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord">−</span><span class="mord mathrm">6</span><span class="mord mathit">x</span><span class="mbin">+</span><span class="mord mathrm">3</span><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mord mathit" style="margin-right:0.04398em;">z</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span><span class="sizing reset-size5 size5 reset-textstyle textstyle uncramped nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow><mi>a</mi></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>b</mi><mo>+</mo><mi>c</mi></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>d</mi><mo>+</mo><mi>e</mi><mo>+</mo><mi>f</mi></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned}a &amp;= b + c \\  &amp;= d + e + f\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.45em;"></span><span class="strut bottom" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-0.6099999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathit">a</span></span></span><span style="top:0.5900000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-0.6099999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit">b</span><span class="mbin">+</span><span class="mord mathit">c</span></span></span><span style="top:0.5900000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit">d</span><span class="mbin">+</span><span class="mord mathit">e</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.10764em;">f</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></span></span></p>\begin{array}{cc|c}       A&B&F\\\hline 0&0&0\\       0&1&1\\       1&0&1\\       1&1&1\\\end{array}\begin{vmatrix}   1 & 2 & 3 \\   4 & 5 & 6 \\   7 & 8 & 9  \end{vmatrix}\tag{7}<h2 id="公式对齐方式"><a class="markdownIt-Anchor" href="#公式对齐方式"></a> 公式对齐方式</h2><p>需要对齐的内容以<code>\begin&#123;align&#125;</code>和<code>\end&#123;aligned&#125;</code>包围，在需要对齐的符号（如等号）前加<code>&amp;</code>来标记，用<code>\\</code>来换行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">KPI&amp;=(N+S)W \\</span><br><span class="line">&amp;=NW+SW</span><br><span class="line">\end&#123;aligned&#125;</span><br><span class="line"></span><br><span class="line">\begin&#123;aligned&#125;</span><br><span class="line">KPI&amp;=(N+S)W \\</span><br><span class="line">PI&amp;=N+S \\</span><br><span class="line">I&amp;=W</span><br><span class="line">\end&#123;aligned&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow><mi>K</mi><mi>P</mi><mi>I</mi></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mo>(</mo><mi>N</mi><mo>+</mo><mi>S</mi><mo>)</mo><mi>W</mi></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>N</mi><mi>W</mi><mo>+</mo><mi>S</mi><mi>W</mi></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned}KPI&amp;=(N+S)W \\&amp;=NW+SW\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:1.45em;"></span><span class="strut bottom" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-0.6099999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord mathit" style="margin-right:0.07847em;">I</span></span></span><span style="top:0.5900000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-0.6099999999999999em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mord mathit" style="margin-right:0.13889em;">W</span></span></span><span style="top:0.5900000000000003em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mord mathit" style="margin-right:0.13889em;">W</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mord mathit" style="margin-right:0.13889em;">W</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow><mi>K</mi><mi>P</mi><mi>I</mi></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mo>(</mo><mi>N</mi><mo>+</mo><mi>S</mi><mo>)</mo><mi>W</mi></mrow></mtd></mtr><mtr><mtd><mrow><mi>P</mi><mi>I</mi></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>N</mi><mo>+</mo><mi>S</mi></mrow></mtd></mtr><mtr><mtd><mrow><mi>I</mi></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>W</mi></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned}KPI&amp;=(N+S)W \\PI&amp;=N+S \\I&amp;=W\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:2.05em;"></span><span class="strut bottom" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-1.2099999999999997em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.07153em;">K</span><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord mathit" style="margin-right:0.07847em;">I</span></span></span><span style="top:-0.00999999999999951em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.13889em;">P</span><span class="mord mathit" style="margin-right:0.07847em;">I</span></span></span><span style="top:1.1900000000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.07847em;">I</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-1.2099999999999997em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mord mathit" style="margin-right:0.13889em;">W</span></span></span><span style="top:-0.00999999999999951em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.10903em;">N</span><span class="mbin">+</span><span class="mord mathit" style="margin-right:0.05764em;">S</span></span></span><span style="top:1.1900000000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit" style="margin-right:0.13889em;">W</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></span></span></p><h2 id="公式间加空格"><a class="markdownIt-Anchor" href="#公式间加空格"></a> 公式间加空格</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入字符</span><br><span class="line">ab</span><br><span class="line">a\, b </span><br><span class="line">a\; b </span><br><span class="line">a\ b </span><br><span class="line">a~b   </span><br><span class="line">a\space b </span><br><span class="line">a\quad b </span><br><span class="line">a\qquad b </span><br></pre></td></tr></table></figure>ab\\a\, b\\ a\; b \\a\ b\\ a~b\\   a\space b\\ a\quad b\\ a\qquad b\\<p>注：<br />Typora中的数学公式需要用<font color=red>两个“”括起来（行间公式），或者用两个“”括起来（块间公式）</font></p><h2 id="使用数学符号"><a class="markdownIt-Anchor" href="#使用数学符号"></a> 使用数学符号</h2><p><a href="https://blog.csdn.net/june_young_fan/article/details/85071437">关于如何在markdown文本中书写数学符号和公式（Latex）_june_francis的博客-CSDN博客_markdown如何打出数学符号</a></p><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220420004135148.png" alt="image-20220420004135148" /></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220420004238718.png" alt="image-20220420004238718" style="zoom:67%;" /><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220420004314536.png" alt="image-20220420004314536" style="zoom:67%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220911125218343.png&quot; alt=&quot;image-20220911125218343&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img s</summary>
      
    
    
    
    
    <category term="初始化" scheme="https://zhang0224gz.github.io/tags/%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>《应用密码学》——第四章 公钥密码体制</title>
    <link href="https://zhang0224gz.github.io/2022/04/19/%E7%AC%94%E8%AE%B0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/"/>
    <id>https://zhang0224gz.github.io/2022/04/19/%E7%AC%94%E8%AE%B0/%E5%AF%86%E7%A0%81%E5%AD%A6/%E7%AC%AC%E5%9B%9B%E7%AB%A0%20%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81%E4%BD%93%E5%88%B6/</id>
    <published>2022-04-19T08:47:16.169Z</published>
    <updated>2022-09-10T16:51:17.255Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a class="markdownIt-Anchor" href="#概述"></a> 概述</h1><p><font size=4>对称密码体制的缺点：</font></p><ol><li><strong>密钥管理的困难</strong>：n个用户彼此间进行保密通信就需要n(n-1)/2个密钥；当用户数量增加时，密钥的数量急剧增大，密钥管理量大。密钥的产生、分发、保存、撤销、更新等安全性问题解决困难复杂代价高。</li><li><strong>系统的可拓展性和开放性差</strong>：每进来一个新用户都需要对已有的n个老用户进行通知，并添加一个新密钥。不能解决陌生人间的密钥传递问题，也就不能支持陌生人间的保密通信。</li><li><strong>不能数字签名，抗抵赖性差</strong>：一旦发送方的消息产生更改，不能确认是否是发送方的行为。</li></ol><p><font size=4>对称密码体制的优点：</font></p><p>​<strong>加解密处理速度快、效率高；算法安全性高</strong></p><p>==》公钥密码体制弥补了对称密钥密码体制的缺点</p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220419171918297.png" alt="image-20220419171918297" style="zoom: 67%;" /><p>Alice使用自己的私钥对信息m进行加密发送出去，收者Bob使用Alice的公钥进行解密。若m’和m一致则确定是Alice发送的，不一致则不是Alice发送的。(鉴别) -&gt; 抗抵赖性</p><p>因为人手一份公钥和私钥。公钥公开给发送方加密信息，私钥保存主人解密收到信息，机密性高，只有n的密钥管理，也可以用来公开信道上密钥的分发和协商。</p><p><font size=4><strong>当前状况：</strong></font></p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/image-20220419173702953.png" alt="image-20220419173702953" style="zoom:80%;" /><h2 id="公钥密码的基本思想"><a class="markdownIt-Anchor" href="#公钥密码的基本思想"></a> 公钥密码的基本思想</h2><p><img src="https://zhang2002gz.oss-cn-qingdao.aliyuncs.com/img/C6D35CBF3F40BE18BFC8ADD7B1EAC7FF.jpg" alt="img" /></p>\begin{aligned}公&钥密码的加密变换E_{KU_B}(m)与解密变换D_{KR_B}(c)应满足下列要求：\\&(1)D_{KR_B}(c)是E_{KU_B}(m)的逆变换，即对任意的明文M，均有：D_{KR_B}(c)=D_{KR_B}(E_{KU_B}(m))=m\\&(2)已知加密和解密秘钥时，加解密是容易的\\&(3)如果不知道私钥{KR}_B，那么即使知道公钥{KU}_B、具体加解密算法以及密文，确定明文计算上都是不可行的\end{aligned}<p>像这种不知道解密密钥，对密文进行逆变换得到正确明文在计算上是不可行。具有这种性质的函数称为<strong>单向陷门函数</strong></p><p>目前人们主要基于如下数学上的困难问题来设计单向陷门函数和公钥密码体制：</p><ul><li><p>大整数分解问题(RSA)</p><ul><li>大素数 n=p·q</li><li>p,q求n简单，但n求p,q难 (概率算法)</li></ul></li><li><p>有限域上离散对数问题(EIGamal)</p><ul><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi>g</mi><mi>x</mi></msup><mspace width="0.277778em"></mspace><mspace width="0.277778em"></mspace><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="0.277778em"></mspace><mi>p</mi></mrow><annotation encoding="application/x-tex">y=g^x\;\; mod\;p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7143919999999999em;"></span><span class="strut bottom" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit" style="margin-right:0.03588em;">y</span><span class="mrel">=</span><span class="mord"><span class="mord mathit" style="margin-right:0.03588em;">g</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">x</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mspace thickspace"></span><span class="mord mspace thickspace"></span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace thickspace"></span><span class="mord mathit">p</span></span></span></span></span></p></li><li><p>通过x求y容易，但通过y求x不容易(与y对应的x太多，不知道是哪一个)</p></li></ul></li><li><p>椭圆曲线上的离散对数问题(ECC)</p><ul><li><p>&lt;F , + , * &gt; 域</p></li><li><p>椭圆曲线上的点&lt;x , y&gt;构成的域&lt;F , +&gt; -&gt; 乘相当于x个相加</p>\begin{aligned}P &= xG\;\; (mod\;p)\\公钥 &=密钥*公共信息\;\;(取模)\end{aligned}</li></ul></li></ul><p>单向陷门函数也存在天敌：量子计算机(速度极快)，如果量子计算机一旦问世并推广，信息加密的安全性问题面临大危机  --&gt;  应对：格Grid函数(量子计算机尚未由应对算法，线性代数离散向量空间：由n维组成的在横纵交线上的点)</p><h1 id="rsa公钥密码体制"><a class="markdownIt-Anchor" href="#rsa公钥密码体制"></a> RSA公钥密码体制</h1><p>古典密码技术 -&gt; 近代密码 ：1949年，香农奠基性论文《保密系统的通信理论》发表</p><p>近代密码 -&gt; 现代密码 ：1976年，迪菲和赫尔曼发表了《密码学新方向》，首次提出了公钥密码体制的概念和设计思想；1978年，美国的里维斯特R、沙米尔S、阿德勒曼A提出了一个较完整地公钥密码体制——RSA体制，是密码学史上地里程碑</p><p>RSA公钥密码体制的安全性建立在大整数因子分解的困难性之上，算法的数学基础是初等数论中的欧拉定理</p><ol><li><p>密钥生成</p><p>（1）选择两个随机的大素数 p 和 q ，并计算</p>n=pq\quad 和\quad \phi(n)=(p-1)(q-1)\\其中,\phi(n)欧拉公式: 比n小的数中和n互素的数字个数;p,q为互异的素数(计算完就销毁)<ul><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mtable><mtr><mtd><mrow><mi>ϕ</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mo>(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>−</mo><mo>(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>−</mo><mo>(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mi>p</mi><mi>q</mi><mo>−</mo><mi>q</mi><mo>−</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow></mtd></mtr><mtr><mtd><mrow></mrow></mtd><mtd><mrow><mrow></mrow><mo>=</mo><mo>(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo>)</mo><mo>(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo>)</mo></mrow></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{aligned}\phi(n)&amp;=(n-1)-(q-1)-(p-1)\\&amp;=pq-q-p-1\\&amp;=(p-1)(q-1)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:2.05em;"></span><span class="strut bottom" style="height:3.6000000000000005em;vertical-align:-1.5500000000000007em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist"><span style="top:-1.2099999999999997em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord mathit">ϕ</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span><span style="top:-0.00999999999999951em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span style="top:1.1900000000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="col-align-l"><span class="vlist"><span style="top:-1.2099999999999997em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mbin">−</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mbin">−</span><span class="mopen">(</span><span class="mord mathit">p</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span><span style="top:-0.00999999999999951em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mord mathit">p</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mbin">−</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mbin">−</span><span class="mord mathit">p</span><span class="mbin">−</span><span class="mord mathrm">1</span></span></span><span style="top:1.1900000000000006em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="mord displaystyle textstyle uncramped"><span class="mord displaystyle textstyle uncramped"></span><span class="mrel">=</span><span class="mopen">(</span><span class="mord mathit">p</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.03588em;">q</span><span class="mbin">−</span><span class="mord mathrm">1</span><span class="mclose">)</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span></span></span></span></span></p></li></ul><p>（2）选择一个随机数<code>e</code>，1&lt;e&lt;\phi(n) 满足<code>gcd(e,\phi(n))=1</code>，并计算</p>d=e^{-1}\;\;mod\;(\phi(n))\\其中，d,e为互素的乘法逆元。ed\equiv1\;mod\;\phi(n)，即ed=k\phi(n)+1<p>（3）公钥为（e, n），私钥为 d</p></li><li><p>加密</p><p>对明文m&lt;n，其对应的密文为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mspace width="0.277778em"></mspace><mspace width="0.277778em"></mspace><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="0.277778em"></mspace><mi>n</mi></mrow><annotation encoding="application/x-tex">c = m^e\;\;mod\;n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.7143919999999999em;"></span><span class="strut bottom" style="height:0.7143919999999999em;vertical-align:0em;"></span><span class="base displaystyle textstyle uncramped"><span class="mord mathit">c</span><span class="mrel">=</span><span class="mord"><span class="mord mathit">m</span><span class="vlist"><span style="top:-0.413em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathit">e</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span><span class="mord mspace thickspace"></span><span class="mord mspace thickspace"></span><span class="mord mathit">m</span><span class="mord mathit">o</span><span class="mord mathit">d</span><span class="mord mspace thickspace"></span><span class="mord mathit">n</span></span></span></span></span></p><ul><li><p><font color=red>快速计算a^m mod n</font></p>\begin{aligned}a^{10} \;幂换成二进&制\;a^{1010}\\&=a^{b_32^3+b_22^2+b_12^1+b_02^0}\\&=(((1\times a^{b_3})^2 \times a^{b_2})^2 \times a^{b_1})^2 \times a^{b_0}\\2^{100}\;mod\;n&=(2^{20}\;mod\;n)^5\end{aligned}<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">     </span><br></pre></td></tr></table></figure></li></ul></li><li><p>解密</p></li></ol><blockquote><p>疑问：公私密钥该有谁生成？</p><ul><li><p>由他人(可信度高，KGC)生成所有人的公私密钥</p><p>-&gt; 成为黑客的攻击目标；信息越多，自身价值越大（忧）</p></li><li><p>由自己生成自己的公私密钥</p><p>-&gt; 由于密钥生成都用到\phi(n)，会导致知道公钥即可推出私钥，而可以伪造任何人的签名（不可取，忧忧忧）</p></li></ul><p>所以RSA的一个缺陷就是由谁生成密钥都不安全</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#概述&quot;&gt;&lt;/a&gt; 概述&lt;/h1&gt;
&lt;p&gt;&lt;font size=4&gt;对称密码体制的缺点：&lt;/font&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;密钥管理的困难&lt;/strong&gt;：n个用</summary>
      
    
    
    
    <category term="笔记" scheme="https://zhang0224gz.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="密码学" scheme="https://zhang0224gz.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
</feed>
